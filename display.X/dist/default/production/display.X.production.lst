

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Oct 31 16:19:37 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0015A0                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _constante_ad
    93  0015A0  28                 	db	40
    94  0015A1  A0                 	db	160
    95  0015A2  3B                 	db	59
    96                           
    97                           ;initializer for _ano
    98  0015A3  07E2               	dw	2018
    99                           
   100                           ;initializer for _desp_min
   101  0015A5  0A                 	db	10
   102                           
   103                           ;initializer for _desp_hora
   104  0015A6  05                 	db	5
   105                           
   106                           ;initializer for _mes
   107  0015A7  06                 	db	6
   108                           
   109                           ;initializer for _dia
   110  0015A8  04                 	db	4
   111                           
   112                           ;initializer for _tela_atual
   113  0015A9  01                 	db	1
   114                           
   115                           ;initializer for _revisao
   116  0015AA  02                 	db	2
   117                           
   118                           ;initializer for _versao
   119  0015AB  01                 	db	1
   120                           
   121                           	psect	smallconst
   122  000800                     __psmallconst:
   123                           	opt stack 0
   124  000800  00                 	db	0
   125  000801                     _dpowers:
   126                           	opt stack 0
   127  000801  0001               	dw	1
   128  000803  000A               	dw	10
   129  000805  0064               	dw	100
   130  000807  03E8               	dw	1000
   131  000809  2710               	dw	10000
   132  00080B                     __end_of_dpowers:
   133                           	opt stack 0
   134  0000                     _TMR0	set	4054
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISB	set	3987
   137  0000                     _PORTB	set	3969
   138  0000                     _LATBbits	set	3978
   139  0000                     _TXREG	set	4013
   140  0000                     _TRISCbits	set	3988
   141  0000                     _TXSTA	set	4012
   142  0000                     _RCSTA	set	4011
   143  0000                     _SPBRG	set	4015
   144  0000                     _TRISA	set	3986
   145  0000                     _T0CONbits	set	4053
   146  0000                     _RCREG	set	4014
   147  0000                     _PIR1bits	set	3998
   148  0000                     _INTCONbits	set	4082
   149  0000                     _PORTAbits	set	3968
   150  0000                     _PORTDbits	set	3971
   151  0000                     _TXIF	set	31988
   152  0000                     _PEIE	set	32662
   153  0000                     _RCIE	set	31981
   154  0000                     _RCIP	set	31997
   155  0000                     _RCIF	set	31989
   156  0000                     _TMR0IF	set	32658
   157  00080B                     STR_11:
   158  00080B  20                 	db	32
   159  00080C  20                 	db	32
   160  00080D  20                 	db	32
   161  00080E  20                 	db	32
   162  00080F  20                 	db	32
   163  000810  20                 	db	32
   164  000811  20                 	db	32
   165  000812  20                 	db	32
   166  000813  20                 	db	32
   167  000814  20                 	db	32
   168  000815  20                 	db	32
   169  000816  20                 	db	32
   170  000817  20                 	db	32
   171  000818  20                 	db	32
   172  000819  20                 	db	32
   173  00081A  20                 	db	32
   174  00081B  00                 	db	0
   175  00081C                     STR_7:
   176  00081C  48                 	db	72	;'H'
   177  00081D  45                 	db	69	;'E'
   178  00081E  4C                 	db	76	;'L'
   179  00081F  4C                 	db	76	;'L'
   180  000820  4F                 	db	79	;'O'
   181  000821  57                 	db	87	;'W'
   182  000822  4F                 	db	79	;'O'
   183  000823  52                 	db	82	;'R'
   184  000824  4C                 	db	76	;'L'
   185  000825  44                 	db	68	;'D'
   186  000826  00                 	db	0
   187  000827                     STR_4:
   188  000827  25                 	db	37
   189  000828  64                 	db	100	;'d'
   190  000829  2F                 	db	47
   191  00082A  25                 	db	37
   192  00082B  64                 	db	100	;'d'
   193  00082C  2F                 	db	47
   194  00082D  25                 	db	37
   195  00082E  64                 	db	100	;'d'
   196  00082F  00                 	db	0
   197  000830                     STR_2:
   198  000830  25                 	db	37
   199  000831  64                 	db	100	;'d'
   200  000832  3A                 	db	58	;':'
   201  000833  25                 	db	37
   202  000834  64                 	db	100	;'d'
   203  000835  3A                 	db	58	;':'
   204  000836  25                 	db	37
   205  000837  64                 	db	100	;'d'
   206  000838  00                 	db	0
   207  000839                     STR_9:
   208  000839  54                 	db	84	;'T'
   209  00083A  45                 	db	69	;'E'
   210  00083B  53                 	db	83	;'S'
   211  00083C  54                 	db	84	;'T'
   212  00083D  45                 	db	69	;'E'
   213  00083E  65                 	db	101	;'e'
   214  00083F  72                 	db	114	;'r'
   215  000840  00                 	db	0
   216  000841                     STR_1:
   217  000841  48                 	db	72	;'H'
   218  000842  6F                 	db	111	;'o'
   219  000843  72                 	db	114	;'r'
   220  000844  61                 	db	97	;'a'
   221  000845  3A                 	db	58	;':'
   222  000846  20                 	db	32
   223  000847  00                 	db	0
   224  000848                     STR_3:
   225  000848  44                 	db	68	;'D'
   226  000849  61                 	db	97	;'a'
   227  00084A  74                 	db	116	;'t'
   228  00084B  61                 	db	97	;'a'
   229  00084C  3A                 	db	58	;':'
   230  00084D  20                 	db	32
   231  00084E  00                 	db	0
   232  00084F                     STR_5:
   233  00084F  41                 	db	65	;'A'
   234  000850  6C                 	db	108	;'l'
   235  000851  61                 	db	97	;'a'
   236  000852  72                 	db	114	;'r'
   237  000853  6D                 	db	109	;'m'
   238  000854  65                 	db	101	;'e'
   239  000855  00                 	db	0
   240  000856                     STR_8:
   241  000856  25                 	db	37
   242  000857  64                 	db	100	;'d'
   243  000858  2E                 	db	46
   244  000859  25                 	db	37
   245  00085A  64                 	db	100	;'d'
   246  00085B  00                 	db	0
   247  00085C                     STR_10:
   248  00085C  25                 	db	37
   249  00085D  64                 	db	100	;'d'
   250  00085E  20                 	db	32
   251  00085F  43                 	db	67	;'C'
   252  000860  00                 	db	0
   253  0000                     
   254                           ; #config settings
   255  000861  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           	psect	cinit
   258  001326                     __pcinit:
   259                           	opt stack 0
   260  001326                     start_initialization:
   261                           	opt stack 0
   262  001326                     __initialization:
   263                           	opt stack 0
   264                           
   265                           ; Initialize objects allocated to COMRAM (12 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267  001326  0EA0               	movlw	low __pidataCOMRAM
   268  001328  6EF6               	movwf	tblptrl,c
   269  00132A  0E15               	movlw	high __pidataCOMRAM
   270  00132C  6EF7               	movwf	tblptrh,c
   271  00132E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272  001330  6EF8               	movwf	tblptru,c
   273  001332  EE00  F041         	lfsr	0,__pdataCOMRAM
   274  001336  EE10 F00C          	lfsr	1,12
   275  00133A                     copy_data0:
   276  00133A  0009               	tblrd		*+
   277  00133C  CFF5 FFEE          	movff	tablat,postinc0
   278  001340  50E5               	movf	postdec1,w,c
   279  001342  50E1               	movf	fsr1l,w,c
   280  001344  E1FA               	bnz	copy_data0
   281                           
   282                           ; Clear objects allocated to BANK0 (16 bytes)
   283  001346  EE00  F071         	lfsr	0,__pbssBANK0
   284  00134A  0E10               	movlw	16
   285  00134C                     clear_0:
   286  00134C  6AEE               	clrf	postinc0,c
   287  00134E  06E8               	decf	wreg,f,c
   288  001350  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to COMRAM (31 bytes)
   291  001352  EE00  F022         	lfsr	0,__pbssCOMRAM
   292  001356  0E1F               	movlw	31
   293  001358                     clear_1:
   294  001358  6AEE               	clrf	postinc0,c
   295  00135A  06E8               	decf	wreg,f,c
   296  00135C  E1FD               	bnz	clear_1
   297  00135E                     end_of_initialization:
   298                           	opt stack 0
   299  00135E                     __end_of__initialization:
   300                           	opt stack 0
   301  00135E  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   302  001360  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   303  001362  0100               	movlb	0
   304  001364  EFB3  F007         	goto	_main	;jump to C main() function
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	bssCOMRAM
   315  000022                     __pbssCOMRAM:
   316                           	opt stack 0
   317  000022                     _temperatura:
   318                           	opt stack 0
   319  000022                     	ds	3
   320  000025                     _ADResult:
   321                           	opt stack 0
   322  000025                     	ds	2
   323  000027                     _i:
   324                           	opt stack 0
   325  000027                     	ds	2
   326  000029                     _calcula_temp:
   327                           	opt stack 0
   328  000029                     	ds	1
   329  00002A                     _despertou:
   330                           	opt stack 0
   331  00002A                     	ds	1
   332  00002B                     _contador_alarme:
   333                           	opt stack 0
   334  00002B                     	ds	1
   335  00002C                     _segundo:
   336                           	opt stack 0
   337  00002C                     	ds	1
   338  00002D                     _minuto:
   339                           	opt stack 0
   340  00002D                     	ds	1
   341  00002E                     _hora:
   342                           	opt stack 0
   343  00002E                     	ds	1
   344  00002F                     _contador_um_segundo:
   345                           	opt stack 0
   346  00002F                     	ds	1
   347  000030                     _contador_interrupcao:
   348                           	opt stack 0
   349  000030                     	ds	1
   350  000031                     _estado:
   351                           	opt stack 0
   352  000031                     	ds	1
   353  000032                     _serial_data:
   354                           	opt stack 0
   355  000032                     	ds	1
   356  000033                     _BUFFRESP:
   357                           	opt stack 0
   358  000033                     	ds	7
   359  00003A                     _BUFFCOM:
   360                           	opt stack 0
   361  00003A                     	ds	7
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           postdec1	equ	0xFE5
   369                           fsr1l	equ	0xFE1
   370                           
   371                           	psect	dataCOMRAM
   372  000041                     __pdataCOMRAM:
   373                           	opt stack 0
   374  000041                     _constante_ad:
   375                           	opt stack 0
   376  000041                     	ds	3
   377  000044                     _ano:
   378                           	opt stack 0
   379  000044                     	ds	2
   380  000046                     _desp_min:
   381                           	opt stack 0
   382  000046                     	ds	1
   383  000047                     _desp_hora:
   384                           	opt stack 0
   385  000047                     	ds	1
   386  000048                     _mes:
   387                           	opt stack 0
   388  000048                     	ds	1
   389  000049                     _dia:
   390                           	opt stack 0
   391  000049                     	ds	1
   392  00004A                     _tela_atual:
   393                           	opt stack 0
   394  00004A                     	ds	1
   395  00004B                     _revisao:
   396                           	opt stack 0
   397  00004B                     	ds	1
   398  00004C                     _versao:
   399                           	opt stack 0
   400  00004C                     	ds	1
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           postdec1	equ	0xFE5
   408                           fsr1l	equ	0xFE1
   409                           
   410                           	psect	bssBANK0
   411  000071                     __pbssBANK0:
   412                           	opt stack 0
   413  000071                     _buffer:
   414                           	opt stack 0
   415  000071                     	ds	16
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	cstackBANK0
   426  000060                     __pcstackBANK0:
   427                           	opt stack 0
   428  000060                     ?_sprintf:
   429                           	opt stack 0
   430  000060                     calculaCRCBUFFRESP@crc1:
   431                           	opt stack 0
   432  000060                     verificaCRCBUFFCOM@crc1:
   433                           	opt stack 0
   434  000060                     sprintf@sp:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x0
   438  000060                     	ds	1
   439  000061                     calculaCRCBUFFRESP@crc2:
   440                           	opt stack 0
   441  000061                     verificaCRCBUFFCOM@crc2:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x1
   445  000061                     	ds	1
   446  000062                     verificaCRCBUFFCOM@CRC_OK:
   447                           	opt stack 0
   448  000062                     calculaCRCBUFFRESP@crc:
   449                           	opt stack 0
   450  000062                     sprintf@f:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x2
   454  000062                     	ds	1
   455  000063                     verificaCRCBUFFCOM@crc:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x3
   459  000063                     	ds	1
   460  000064                     ??_trataComando:
   461                           
   462                           ; 1 bytes @ 0x4
   463  000064                     	ds	2
   464  000066                     trataComando@iterator:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x6
   468  000066                     	ds	4
   469  00006A                     sprintf@ap:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0xA
   473  00006A                     	ds	2
   474  00006C                     sprintf@flag:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xC
   478  00006C                     	ds	1
   479  00006D                     sprintf@prec:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0xD
   483  00006D                     	ds	1
   484  00006E                     sprintf@val:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0xE
   488  00006E                     	ds	2
   489  000070                     sprintf@c:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x10
   493  000070                     	ds	1
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	cstackCOMRAM
   504  000001                     __pcstackCOMRAM:
   505                           	opt stack 0
   506  000001                     ??_pic_isr:
   507  000001                     
   508                           ; 1 bytes @ 0x0
   509  000001                     	ds	17
   510  000012                     ??_Delay10KTCYx:
   511  000012                     ?_crc16:
   512                           	opt stack 0
   513  000012                     ?___lwdiv:
   514                           	opt stack 0
   515  000012                     enviaByte@BYTE:
   516                           	opt stack 0
   517  000012                     Delay10TCYx@unit:
   518                           	opt stack 0
   519  000012                     Delay1KTCYx@unit:
   520                           	opt stack 0
   521  000012                     crc16@data_p:
   522                           	opt stack 0
   523  000012                     tx_data@cont:
   524                           	opt stack 0
   525  000012                     ___lwdiv@dividend:
   526                           	opt stack 0
   527  000012                     memcpy@d1:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x11
   531  000012                     	ds	1
   532  000013                     ??_SetDDRamAddr:
   533  000013                     WriteCmdXLCD@cmd:
   534                           	opt stack 0
   535  000013                     WriteDataXLCD@data:
   536                           	opt stack 0
   537  000013                     Delay10KTCYx@unit:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x12
   541  000013                     	ds	1
   542  000014                     crc16@length:
   543                           	opt stack 0
   544  000014                     putrsXLCD@buffer:
   545                           	opt stack 0
   546  000014                     ___lwdiv@divisor:
   547                           	opt stack 0
   548  000014                     memcpy@s1:
   549                           	opt stack 0
   550                           
   551                           ; 3 bytes @ 0x13
   552  000014                     	ds	2
   553  000016                     ??_crc16:
   554  000016                     SetDDRamAddr@DDaddr:
   555                           	opt stack 0
   556  000016                     ___lwdiv@counter:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x15
   560  000016                     	ds	1
   561  000017                     OpenXLCD@lcdtype:
   562                           	opt stack 0
   563  000017                     ___lwdiv@quotient:
   564                           	opt stack 0
   565  000017                     memcpy@n:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x16
   569  000017                     	ds	1
   570  000018                     
   571                           ; 1 bytes @ 0x17
   572  000018                     	ds	1
   573  000019                     ?___lwmod:
   574                           	opt stack 0
   575  000019                     ___lwmod@dividend:
   576                           	opt stack 0
   577  000019                     memcpy@s:
   578                           	opt stack 0
   579                           
   580                           ; 3 bytes @ 0x18
   581  000019                     	ds	1
   582  00001A                     crc16@i:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x19
   586  00001A                     	ds	1
   587  00001B                     crc16@data:
   588                           	opt stack 0
   589  00001B                     ___lwmod@divisor:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x1A
   593  00001B                     	ds	1
   594  00001C                     memcpy@d:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x1B
   598  00001C                     	ds	1
   599  00001D                     ___lwmod@counter:
   600                           	opt stack 0
   601  00001D                     crc16@crc:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x1C
   605  00001D                     	ds	1
   606  00001E                     ??_sprintf:
   607                           
   608                           ; 1 bytes @ 0x1D
   609  00001E                     	ds	1
   610  00001F                     ??_calculaCRCBUFFRESP:
   611  00001F                     telas@troca_tela:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x1E
   615  00001F                     	ds	1
   616  000020                     ??_troca_telas:
   617  000020                     ??_trata_despertador:
   618                           
   619                           ; 1 bytes @ 0x1F
   620  000020                     	ds	2
   621  000022                     tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           ; 1 bytes @ 0x21
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 299 in file "main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   650 ;;      Params:         0       0       0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels required when called:    8
   656 ;; This function calls:
   657 ;;		_despertar
   658 ;;		_init_XLCD
   659 ;;		_maquinaEstado
   660 ;;		_telas
   661 ;;		_trata_data
   662 ;;		_trata_despertador
   663 ;;		_trata_hora
   664 ;;		_troca_telas
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text0
   671  000F66                     __ptext0:
   672                           	opt stack 0
   673  000F66                     _main:
   674                           	opt stack 23
   675                           
   676                           ;main.c: 300: T0CONbits.TMR0ON = 0;
   677                           
   678                           ;incstack = 0
   679  000F66  9ED5               	bcf	4053,7,c	;volatile
   680                           
   681                           ;main.c: 301: INTCONbits.TMR0IE = 1;
   682  000F68  8AF2               	bsf	intcon,5,c	;volatile
   683                           
   684                           ;main.c: 302: INTCONbits.TMR0IF = 0;
   685  000F6A  94F2               	bcf	intcon,2,c	;volatile
   686                           
   687                           ;main.c: 303: T0CONbits.T08BIT = 0;
   688  000F6C  9CD5               	bcf	4053,6,c	;volatile
   689                           
   690                           ;main.c: 304: T0CONbits.PSA = 0;
   691  000F6E  96D5               	bcf	4053,3,c	;volatile
   692                           
   693                           ;main.c: 306: T0CONbits.T0PS0 = 1;
   694  000F70  80D5               	bsf	4053,0,c	;volatile
   695                           
   696                           ;main.c: 307: T0CONbits.T0PS1 = 1;
   697  000F72  82D5               	bsf	4053,1,c	;volatile
   698                           
   699                           ;main.c: 308: T0CONbits.T0PS2 = 0;
   700  000F74  94D5               	bcf	4053,2,c	;volatile
   701                           
   702                           ;main.c: 310: T0CONbits.T0CS = 0;
   703  000F76  9AD5               	bcf	4053,5,c	;volatile
   704                           
   705                           ;main.c: 311: TMR0 = 32768;
   706  000F78  0E80               	movlw	128
   707  000F7A  6ED7               	movwf	4055,c	;volatile
   708  000F7C  0E00               	movlw	0
   709  000F7E  6ED6               	movwf	4054,c	;volatile
   710                           
   711                           ;main.c: 312: T0CONbits.TMR0ON = 1;
   712  000F80  8ED5               	bsf	4053,7,c	;volatile
   713                           
   714                           ;main.c: 313: INTCONbits.GIEH = 1;
   715  000F82  8EF2               	bsf	intcon,7,c	;volatile
   716                           
   717                           ;main.c: 314: INTCONbits.GIEL = 1;
   718  000F84  8CF2               	bsf	intcon,6,c	;volatile
   719                           
   720                           ;main.c: 317: TRISA = 0x00000000;
   721  000F86  0E00               	movlw	0
   722  000F88  6E92               	movwf	3986,c	;volatile
   723                           
   724                           ;main.c: 318: init_XLCD();
   725  000F8A  ECA6  F00A         	call	_init_XLCD	;wreg free
   726                           
   727                           ;main.c: 320: SPBRG = (((48000000/64)/9600)-1);
   728  000F8E  0E4D               	movlw	77
   729  000F90  6EAF               	movwf	4015,c	;volatile
   730                           
   731                           ;main.c: 324: RCSTA = 0b10010000;
   732  000F92  0E90               	movlw	144
   733  000F94  6EAB               	movwf	4011,c	;volatile
   734                           
   735                           ;main.c: 325: TXSTA = 0b00100000;
   736  000F96  0E20               	movlw	32
   737  000F98  6EAC               	movwf	4012,c	;volatile
   738                           
   739                           ;main.c: 326: TRISCbits.RC6 = 0;
   740  000F9A  9C94               	bcf	3988,6,c	;volatile
   741                           
   742                           ;main.c: 327: TRISCbits.RC7 = 1;
   743  000F9C  8E94               	bsf	3988,7,c	;volatile
   744                           
   745                           ;main.c: 329: RCIF = 0;
   746  000F9E  9A9E               	bcf	3998,5,c	;volatile
   747                           
   748                           ;main.c: 330: RCIP = 0;
   749  000FA0  9A9F               	bcf	3999,5,c	;volatile
   750                           
   751                           ;main.c: 331: RCIE = 1;
   752  000FA2  8A9D               	bsf	3997,5,c	;volatile
   753                           
   754                           ;main.c: 332: PEIE = 1;
   755  000FA4  8CF2               	bsf	intcon,6,c	;volatile
   756  000FA6                     l2812:
   757                           
   758                           ;main.c: 338: if(contador_um_segundo == 1){
   759  000FA6  042F               	decf	_contador_um_segundo,w,c
   760  000FA8  A4D8               	btfss	status,2,c
   761  000FAA  D00D               	goto	l2826
   762                           
   763                           ;main.c: 339: contador_um_segundo = 0;
   764  000FAC  0E00               	movlw	0
   765  000FAE  6E2F               	movwf	_contador_um_segundo,c
   766                           
   767                           ;main.c: 340: trata_hora();
   768  000FB0  EC87  F00A         	call	_trata_hora	;wreg free
   769                           
   770                           ;main.c: 341: trata_data();
   771  000FB4  EC77  F008         	call	_trata_data	;wreg free
   772                           
   773                           ;main.c: 342: despertar();
   774  000FB8  EC60  F00A         	call	_despertar	;wreg free
   775                           
   776                           ;main.c: 343: telas(0);
   777  000FBC  0E00               	movlw	0
   778  000FBE  EC38  F007         	call	_telas
   779                           
   780                           ;main.c: 344: maquinaEstado();
   781  000FC2  EC6D  F009         	call	_maquinaEstado	;wreg free
   782  000FC6                     l2826:
   783                           
   784                           ;main.c: 345: }
   785                           ;main.c: 346: if(tela_atual == 2){
   786  000FC6  0E02               	movlw	2
   787  000FC8  184A               	xorwf	_tela_atual,w,c
   788  000FCA  B4D8               	btfsc	status,2,c
   789                           
   790                           ;main.c: 347: trata_despertador();
   791  000FCC  EC78  F007         	call	_trata_despertador	;wreg free
   792                           
   793                           ;main.c: 348: }
   794                           ;main.c: 349: troca_telas();
   795  000FD0  EC4C  F00A         	call	_troca_telas	;wreg free
   796  000FD4  D7E8               	goto	l2812
   797  000FD6                     __end_of_main:
   798                           	opt stack 0
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           intcon	equ	0xFF2
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           postdec1	equ	0xFE5
   807                           fsr1l	equ	0xFE1
   808                           status	equ	0xFD8
   809                           
   810 ;; *************** function _troca_telas *****************
   811 ;; Defined at:
   812 ;;		line 169 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   826 ;;      Params:         0       0       0       0       0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0
   828 ;;      Temps:          2       0       0       0       0       0       0       0       0
   829 ;;      Totals:         2       0       0       0       0       0       0       0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    7
   833 ;; This function calls:
   834 ;;		_telas
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text1
   841  001498                     __ptext1:
   842                           	opt stack 0
   843  001498                     _troca_telas:
   844                           	opt stack 23
   845                           
   846                           ;main.c: 170: if(PORTDbits.RD0){
   847                           
   848                           ;incstack = 0
   849  001498  A083               	btfss	3971,0,c	;volatile
   850  00149A  0012               	return	
   851                           
   852                           ;main.c: 171: _delay((unsigned long)((150)*(48000000/4000.0)));
   853  00149C  0E0A               	movlw	10
   854  00149E  6E21               	movwf	(??_troca_telas+1)& (0+255),c
   855  0014A0  0E22               	movlw	34
   856  0014A2  6E20               	movwf	??_troca_telas& (0+255),c
   857  0014A4  0EA1               	movlw	161
   858  0014A6                     u1837:
   859  0014A6  2EE8               	decfsz	wreg,f,c
   860  0014A8  D7FE               	bra	u1837
   861  0014AA  2E20               	decfsz	??_troca_telas& (0+255),f,c
   862  0014AC  D7FC               	bra	u1837
   863  0014AE  2E21               	decfsz	(??_troca_telas+1)& (0+255),f,c
   864  0014B0  D7FA               	bra	u1837
   865  0014B2  F000               	nop	
   866                           
   867                           ;main.c: 172: telas(1);
   868  0014B4  0E01               	movlw	1
   869  0014B6  EC38  F007         	call	_telas
   870  0014BA                     l151:
   871  0014BA  A083               	btfss	3971,0,c	;volatile
   872  0014BC  0012               	return	
   873  0014BE  D7FD               	goto	l151
   874  0014C0                     __end_of_troca_telas:
   875                           	opt stack 0
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           intcon	equ	0xFF2
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           postdec1	equ	0xFE5
   884                           fsr1l	equ	0xFE1
   885                           status	equ	0xFD8
   886                           
   887 ;; *************** function _trata_hora *****************
   888 ;; Defined at:
   889 ;;		line 227 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   903 ;;      Params:         0       0       0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0
   906 ;;      Totals:         0       0       0       0       0       0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text2
   918  00150E                     __ptext2:
   919                           	opt stack 0
   920  00150E                     _trata_hora:
   921                           	opt stack 29
   922                           
   923                           ;main.c: 228: if((segundo) == 60){
   924                           
   925                           ;incstack = 0
   926  00150E  0E3C               	movlw	60
   927  001510  182C               	xorwf	_segundo,w,c
   928  001512  A4D8               	btfss	status,2,c
   929  001514  D004               	goto	l1676
   930                           
   931                           ;main.c: 229: minuto += 1;
   932  001516  2A2D               	incf	_minuto,f,c
   933                           
   934                           ;main.c: 230: segundo = 0;
   935  001518  0E00               	movlw	0
   936  00151A  6E2C               	movwf	_segundo,c
   937                           
   938                           ;main.c: 231: return;
   939  00151C  0012               	return	
   940  00151E                     l1676:
   941                           
   942                           ;main.c: 232: }
   943                           ;main.c: 233: if((minuto) == 60){
   944  00151E  0E3C               	movlw	60
   945  001520  182D               	xorwf	_minuto,w,c
   946  001522  A4D8               	btfss	status,2,c
   947  001524  0012               	return	
   948                           
   949                           ;main.c: 234: hora+=1;
   950  001526  2A2E               	incf	_hora,f,c
   951                           
   952                           ;main.c: 235: minuto = 0;
   953  001528  0E00               	movlw	0
   954  00152A  6E2D               	movwf	_minuto,c
   955                           
   956                           ;main.c: 236: return;
   957  00152C  0012               	return	
   958  00152E                     __end_of_trata_hora:
   959                           	opt stack 0
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           postdec1	equ	0xFE5
   968                           fsr1l	equ	0xFE1
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function _trata_despertador *****************
   972 ;; Defined at:
   973 ;;		line 177 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         0       0       0       0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0
   989 ;;      Temps:          2       0       0       0       0       0       0       0       0
   990 ;;      Totals:         2       0       0       0       0       0       0       0       0
   991 ;;Total ram usage:        2 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    7
   994 ;; This function calls:
   995 ;;		_telas
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text3
  1002  000EF0                     __ptext3:
  1003                           	opt stack 0
  1004  000EF0                     _trata_despertador:
  1005                           	opt stack 23
  1006                           
  1007                           ;main.c: 178: if(PORTDbits.RD1){
  1008                           
  1009                           ;incstack = 0
  1010  000EF0  A283               	btfss	3971,1,c	;volatile
  1011  000EF2  D01B               	goto	l157
  1012                           
  1013                           ;main.c: 179: _delay((unsigned long)((150)*(48000000/4000.0)));
  1014  000EF4  0E0A               	movlw	10
  1015  000EF6  6E21               	movwf	(??_trata_despertador+1)& (0+255),c
  1016  000EF8  0E22               	movlw	34
  1017  000EFA  6E20               	movwf	??_trata_despertador& (0+255),c
  1018  000EFC  0EA1               	movlw	161
  1019  000EFE                     u1847:
  1020  000EFE  2EE8               	decfsz	wreg,f,c
  1021  000F00  D7FE               	bra	u1847
  1022  000F02  2E20               	decfsz	??_trata_despertador& (0+255),f,c
  1023  000F04  D7FC               	bra	u1847
  1024  000F06  2E21               	decfsz	(??_trata_despertador+1)& (0+255),f,c
  1025  000F08  D7FA               	bra	u1847
  1026  000F0A  F000               	nop	
  1027                           
  1028                           ;main.c: 180: if(desp_hora == 24){
  1029  000F0C  0E18               	movlw	24
  1030  000F0E  1847               	xorwf	_desp_hora,w,c
  1031  000F10  A4D8               	btfss	status,2,c
  1032  000F12  D003               	goto	l2746
  1033                           
  1034                           ;main.c: 181: desp_hora = 0;
  1035  000F14  0E00               	movlw	0
  1036  000F16  6E47               	movwf	_desp_hora,c
  1037                           
  1038                           ;main.c: 182: }else{
  1039  000F18  D001               	goto	l2748
  1040  000F1A                     l2746:
  1041                           
  1042                           ;main.c: 183: desp_hora+=1;
  1043  000F1A  2A47               	incf	_desp_hora,f,c
  1044  000F1C                     l2748:
  1045                           
  1046                           ;main.c: 184: }
  1047                           ;main.c: 185: despertou = 0;
  1048  000F1C  0E00               	movlw	0
  1049  000F1E  6E2A               	movwf	_despertou,c
  1050                           
  1051                           ;main.c: 186: telas(0);
  1052  000F20  0E00               	movlw	0
  1053  000F22  EC38  F007         	call	_telas
  1054  000F26                     l160:
  1055  000F26  B283               	btfsc	3971,1,c	;volatile
  1056  000F28  D7FE               	goto	l160
  1057  000F2A                     l157:
  1058                           
  1059                           ;main.c: 188: }
  1060                           ;main.c: 189: if(PORTDbits.RD2){
  1061  000F2A  A483               	btfss	3971,2,c	;volatile
  1062  000F2C  0012               	return	
  1063                           
  1064                           ;main.c: 190: _delay((unsigned long)((150)*(48000000/4000.0)));
  1065  000F2E  0E0A               	movlw	10
  1066  000F30  6E21               	movwf	(??_trata_despertador+1)& (0+255),c
  1067  000F32  0E22               	movlw	34
  1068  000F34  6E20               	movwf	??_trata_despertador& (0+255),c
  1069  000F36  0EA1               	movlw	161
  1070  000F38                     u1857:
  1071  000F38  2EE8               	decfsz	wreg,f,c
  1072  000F3A  D7FE               	bra	u1857
  1073  000F3C  2E20               	decfsz	??_trata_despertador& (0+255),f,c
  1074  000F3E  D7FC               	bra	u1857
  1075  000F40  2E21               	decfsz	(??_trata_despertador+1)& (0+255),f,c
  1076  000F42  D7FA               	bra	u1857
  1077  000F44  F000               	nop	
  1078                           
  1079                           ;main.c: 191: if(desp_min == 60){
  1080  000F46  0E3C               	movlw	60
  1081  000F48  1846               	xorwf	_desp_min,w,c
  1082  000F4A  A4D8               	btfss	status,2,c
  1083  000F4C  D003               	goto	l2758
  1084                           
  1085                           ;main.c: 192: desp_min = 0;
  1086  000F4E  0E00               	movlw	0
  1087  000F50  6E46               	movwf	_desp_min,c
  1088                           
  1089                           ;main.c: 193: }else{
  1090  000F52  D001               	goto	l2760
  1091  000F54                     l2758:
  1092                           
  1093                           ;main.c: 194: desp_min+=1;
  1094  000F54  2A46               	incf	_desp_min,f,c
  1095  000F56                     l2760:
  1096                           
  1097                           ;main.c: 195: }
  1098                           ;main.c: 196: despertou = 0;
  1099  000F56  0E00               	movlw	0
  1100  000F58  6E2A               	movwf	_despertou,c
  1101                           
  1102                           ;main.c: 197: telas(0);
  1103  000F5A  0E00               	movlw	0
  1104  000F5C  EC38  F007         	call	_telas
  1105  000F60                     l166:
  1106  000F60  A483               	btfss	3971,2,c	;volatile
  1107  000F62  0012               	return	
  1108  000F64  D7FD               	goto	l166
  1109  000F66                     __end_of_trata_despertador:
  1110                           	opt stack 0
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           intcon	equ	0xFF2
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           fsr1l	equ	0xFE1
  1120                           status	equ	0xFD8
  1121                           
  1122 ;; *************** function _telas *****************
  1123 ;; Defined at:
  1124 ;;		line 142 in file "main.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  troca_tela      1    wreg     unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  troca_tela      1   30[COMRAM] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0
  1139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1142 ;;Total ram usage:        1 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    6
  1145 ;; This function calls:
  1146 ;;		_limpa_tela
  1147 ;;		_tela_1
  1148 ;;		_tela_2
  1149 ;;		_tela_3
  1150 ;;		_tela_4
  1151 ;; This function is called by:
  1152 ;;		_troca_telas
  1153 ;;		_trata_despertador
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text4
  1159  000E70                     __ptext4:
  1160                           	opt stack 0
  1161  000E70                     _telas:
  1162                           	opt stack 23
  1163                           
  1164                           ;incstack = 0
  1165                           ;telas@troca_tela stored from wreg
  1166  000E70  6E1F               	movwf	telas@troca_tela,c
  1167                           
  1168                           ;main.c: 143: if(troca_tela == 1){
  1169  000E72  041F               	decf	telas@troca_tela,w,c
  1170  000E74  A4D8               	btfss	status,2,c
  1171  000E76  D027               	goto	l2656
  1172                           
  1173                           ;main.c: 144: if(tela_atual == 4){
  1174  000E78  0E04               	movlw	4
  1175  000E7A  184A               	xorwf	_tela_atual,w,c
  1176  000E7C  A4D8               	btfss	status,2,c
  1177  000E7E  D007               	goto	l2634
  1178                           
  1179                           ;main.c: 145: limpa_tela();
  1180  000E80  EC74  F00A         	call	_limpa_tela	;wreg free
  1181                           
  1182                           ;main.c: 146: tela_atual = 1;
  1183  000E84  0E01               	movlw	1
  1184  000E86  6E4A               	movwf	_tela_atual,c
  1185                           
  1186                           ;main.c: 147: tela_1();
  1187  000E88  EC52  F006         	call	_tela_1	;wreg free
  1188                           
  1189                           ;main.c: 148: }else if(tela_atual == 1){
  1190  000E8C  0012               	return	
  1191  000E8E                     l2634:
  1192  000E8E  044A               	decf	_tela_atual,w,c
  1193  000E90  A4D8               	btfss	status,2,c
  1194  000E92  D007               	goto	l2642
  1195                           
  1196                           ;main.c: 149: limpa_tela();
  1197  000E94  EC74  F00A         	call	_limpa_tela	;wreg free
  1198                           
  1199                           ;main.c: 150: tela_atual = 2;
  1200  000E98  0E02               	movlw	2
  1201  000E9A  6E4A               	movwf	_tela_atual,c
  1202                           
  1203                           ;main.c: 151: tela_2();
  1204  000E9C  ECCB  F008         	call	_tela_2	;wreg free
  1205                           
  1206                           ;main.c: 152: }else if(tela_atual == 2){
  1207  000EA0  0012               	return	
  1208  000EA2                     l2642:
  1209  000EA2  0E02               	movlw	2
  1210  000EA4  184A               	xorwf	_tela_atual,w,c
  1211  000EA6  A4D8               	btfss	status,2,c
  1212  000EA8  D007               	goto	l2650
  1213                           
  1214                           ;main.c: 153: limpa_tela();
  1215  000EAA  EC74  F00A         	call	_limpa_tela	;wreg free
  1216                           
  1217                           ;main.c: 154: tela_atual = 3;
  1218  000EAE  0E03               	movlw	3
  1219  000EB0  6E4A               	movwf	_tela_atual,c
  1220                           
  1221                           ;main.c: 155: tela_3();
  1222  000EB2  ECA2  F008         	call	_tela_3	;wreg free
  1223                           
  1224                           ;main.c: 156: }else{
  1225  000EB6  0012               	return	
  1226  000EB8                     l2650:
  1227                           
  1228                           ;main.c: 157: limpa_tela();
  1229  000EB8  EC74  F00A         	call	_limpa_tela	;wreg free
  1230                           
  1231                           ;main.c: 158: tela_atual = 4;
  1232  000EBC  0E04               	movlw	4
  1233  000EBE  6E4A               	movwf	_tela_atual,c
  1234                           
  1235                           ;main.c: 159: tela_4();
  1236  000EC0  EC46  F009         	call	_tela_4	;wreg free
  1237                           
  1238                           ;main.c: 160: }
  1239                           ;main.c: 161: }else{
  1240  000EC4  0012               	return	
  1241  000EC6                     l2656:
  1242                           
  1243                           ;main.c: 162: if(tela_atual == 1) tela_1();
  1244  000EC6  044A               	decf	_tela_atual,w,c
  1245  000EC8  B4D8               	btfsc	status,2,c
  1246  000ECA  EC52  F006         	call	_tela_1	;wreg free
  1247                           
  1248                           ;main.c: 163: if(tela_atual == 2) tela_2();
  1249  000ECE  0E02               	movlw	2
  1250  000ED0  184A               	xorwf	_tela_atual,w,c
  1251  000ED2  B4D8               	btfsc	status,2,c
  1252  000ED4  ECCB  F008         	call	_tela_2	;wreg free
  1253                           
  1254                           ;main.c: 164: if(tela_atual == 3) tela_3();
  1255  000ED8  0E03               	movlw	3
  1256  000EDA  184A               	xorwf	_tela_atual,w,c
  1257  000EDC  B4D8               	btfsc	status,2,c
  1258  000EDE  ECA2  F008         	call	_tela_3	;wreg free
  1259                           
  1260                           ;main.c: 165: if(tela_atual == 4) tela_4();
  1261  000EE2  0E04               	movlw	4
  1262  000EE4  184A               	xorwf	_tela_atual,w,c
  1263  000EE6  A4D8               	btfss	status,2,c
  1264  000EE8  0012               	return	
  1265  000EEA  EC46  F009         	call	_tela_4	;wreg free
  1266  000EEE  0012               	return	
  1267  000EF0                     __end_of_telas:
  1268                           	opt stack 0
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           intcon	equ	0xFF2
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           postdec1	equ	0xFE5
  1277                           fsr1l	equ	0xFE1
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _tela_4 *****************
  1281 ;; Defined at:
  1282 ;;		line 125 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    5
  1303 ;; This function calls:
  1304 ;;		_SetDDRamAddr
  1305 ;;		_putrsXLCD
  1306 ;;		_sprintf
  1307 ;; This function is called by:
  1308 ;;		_telas
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text5
  1313  00128C                     __ptext5:
  1314                           	opt stack 0
  1315  00128C                     _tela_4:
  1316                           	opt stack 23
  1317                           
  1318                           ;main.c: 126: SetDDRamAddr(0x03);
  1319                           
  1320                           ;incstack = 0
  1321  00128C  0E03               	movlw	3
  1322  00128E  EC1D  F009         	call	_SetDDRamAddr
  1323                           
  1324                           ;main.c: 127: putrsXLCD("TESTEer");
  1325  001292  0E39               	movlw	low STR_9
  1326  001294  6E14               	movwf	putrsXLCD@buffer,c
  1327  001296  0E08               	movlw	high STR_9
  1328  001298  6E15               	movwf	putrsXLCD@buffer+1,c
  1329  00129A  EC1C  F008         	call	_putrsXLCD	;wreg free
  1330                           
  1331                           ;main.c: 128: SetDDRamAddr(0x46);
  1332  00129E  0E46               	movlw	70
  1333  0012A0  EC1D  F009         	call	_SetDDRamAddr
  1334                           
  1335                           ;main.c: 129: sprintf(buffer, "%d C", temperatura);
  1336  0012A4  0E71               	movlw	low _buffer
  1337  0012A6  0100               	movlb	0	; () banked
  1338  0012A8  6F60               	movwf	sprintf@sp& (0+255),b
  1339  0012AA  0E00               	movlw	high _buffer
  1340  0012AC  0100               	movlb	0	; () banked
  1341  0012AE  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1342  0012B0  0E5C               	movlw	low STR_10
  1343  0012B2  0100               	movlb	0	; () banked
  1344  0012B4  6F62               	movwf	sprintf@f& (0+255),b
  1345  0012B6  0E08               	movlw	high STR_10
  1346  0012B8  0100               	movlb	0	; () banked
  1347  0012BA  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1348  0012BC  C022  F064         	movff	_temperatura,?_sprintf+4
  1349  0012C0  C023  F065         	movff	_temperatura+1,?_sprintf+5
  1350  0012C4  C024  F066         	movff	_temperatura+2,?_sprintf+6
  1351  0012C8  EC24  F005         	call	_sprintf	;wreg free
  1352                           
  1353                           ;main.c: 130: putrsXLCD(buffer);
  1354  0012CC  0E71               	movlw	low _buffer
  1355  0012CE  6E14               	movwf	putrsXLCD@buffer,c
  1356  0012D0  0E00               	movlw	high _buffer
  1357  0012D2  6E15               	movwf	putrsXLCD@buffer+1,c
  1358  0012D4  EC1C  F008         	call	_putrsXLCD	;wreg free
  1359  0012D8  0012               	return	
  1360  0012DA                     __end_of_tela_4:
  1361                           	opt stack 0
  1362                           tblptru	equ	0xFF8
  1363                           tblptrh	equ	0xFF7
  1364                           tblptrl	equ	0xFF6
  1365                           tablat	equ	0xFF5
  1366                           intcon	equ	0xFF2
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           postdec1	equ	0xFE5
  1370                           fsr1l	equ	0xFE1
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _tela_3 *****************
  1374 ;; Defined at:
  1375 ;;		line 117 in file "main.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    5
  1396 ;; This function calls:
  1397 ;;		_SetDDRamAddr
  1398 ;;		_putrsXLCD
  1399 ;;		_sprintf
  1400 ;; This function is called by:
  1401 ;;		_telas
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text6
  1406  001144                     __ptext6:
  1407                           	opt stack 0
  1408  001144                     _tela_3:
  1409                           	opt stack 23
  1410                           
  1411                           ;main.c: 118: SetDDRamAddr(0x03);
  1412                           
  1413                           ;incstack = 0
  1414  001144  0E03               	movlw	3
  1415  001146  EC1D  F009         	call	_SetDDRamAddr
  1416                           
  1417                           ;main.c: 119: putrsXLCD("HELLOWORLD");
  1418  00114A  0E1C               	movlw	low STR_7
  1419  00114C  6E14               	movwf	putrsXLCD@buffer,c
  1420  00114E  0E08               	movlw	high STR_7
  1421  001150  6E15               	movwf	putrsXLCD@buffer+1,c
  1422  001152  EC1C  F008         	call	_putrsXLCD	;wreg free
  1423                           
  1424                           ;main.c: 120: SetDDRamAddr(0x45);
  1425  001156  0E45               	movlw	69
  1426  001158  EC1D  F009         	call	_SetDDRamAddr
  1427                           
  1428                           ;main.c: 121: sprintf(buffer, "%d.%d", versao, revisao);
  1429  00115C  0E71               	movlw	low _buffer
  1430  00115E  0100               	movlb	0	; () banked
  1431  001160  6F60               	movwf	sprintf@sp& (0+255),b
  1432  001162  0E00               	movlw	high _buffer
  1433  001164  0100               	movlb	0	; () banked
  1434  001166  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1435  001168  0E56               	movlw	low STR_8
  1436  00116A  0100               	movlb	0	; () banked
  1437  00116C  6F62               	movwf	sprintf@f& (0+255),b
  1438  00116E  0E08               	movlw	high STR_8
  1439  001170  0100               	movlb	0	; () banked
  1440  001172  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1441  001174  C04C  F064         	movff	_versao,?_sprintf+4
  1442  001178  0100               	movlb	0	; () banked
  1443  00117A  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1444  00117C  C04B  F066         	movff	_revisao,?_sprintf+6
  1445  001180  0100               	movlb	0	; () banked
  1446  001182  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1447  001184  EC24  F005         	call	_sprintf	;wreg free
  1448                           
  1449                           ;main.c: 122: putrsXLCD(buffer);
  1450  001188  0E71               	movlw	low _buffer
  1451  00118A  6E14               	movwf	putrsXLCD@buffer,c
  1452  00118C  0E00               	movlw	high _buffer
  1453  00118E  6E15               	movwf	putrsXLCD@buffer+1,c
  1454  001190  EC1C  F008         	call	_putrsXLCD	;wreg free
  1455  001194  0012               	return	
  1456  001196                     __end_of_tela_3:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           intcon	equ	0xFF2
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           postdec1	equ	0xFE5
  1466                           fsr1l	equ	0xFE1
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function _tela_2 *****************
  1470 ;; Defined at:
  1471 ;;		line 108 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    5
  1492 ;; This function calls:
  1493 ;;		_SetDDRamAddr
  1494 ;;		_putrsXLCD
  1495 ;;		_sprintf
  1496 ;; This function is called by:
  1497 ;;		_telas
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text7
  1502  001196                     __ptext7:
  1503                           	opt stack 0
  1504  001196                     _tela_2:
  1505                           	opt stack 23
  1506                           
  1507                           ;main.c: 109: SetDDRamAddr(0x05);
  1508                           
  1509                           ;incstack = 0
  1510  001196  0E05               	movlw	5
  1511  001198  EC1D  F009         	call	_SetDDRamAddr
  1512                           
  1513                           ;main.c: 110: putrsXLCD("Alarme");
  1514  00119C  0E4F               	movlw	low STR_5
  1515  00119E  6E14               	movwf	putrsXLCD@buffer,c
  1516  0011A0  0E08               	movlw	high STR_5
  1517  0011A2  6E15               	movwf	putrsXLCD@buffer+1,c
  1518  0011A4  EC1C  F008         	call	_putrsXLCD	;wreg free
  1519                           
  1520                           ;main.c: 111: SetDDRamAddr(0x46);
  1521  0011A8  0E46               	movlw	70
  1522  0011AA  EC1D  F009         	call	_SetDDRamAddr
  1523                           
  1524                           ;main.c: 112: sprintf(buffer, "%d:%d", desp_hora, desp_min);
  1525  0011AE  0E71               	movlw	low _buffer
  1526  0011B0  0100               	movlb	0	; () banked
  1527  0011B2  6F60               	movwf	sprintf@sp& (0+255),b
  1528  0011B4  0E00               	movlw	high _buffer
  1529  0011B6  0100               	movlb	0	; () banked
  1530  0011B8  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1531  0011BA  0E33               	movlw	low (STR_2+3)
  1532  0011BC  0100               	movlb	0	; () banked
  1533  0011BE  6F62               	movwf	sprintf@f& (0+255),b
  1534  0011C0  0E08               	movlw	high (STR_2+3)
  1535  0011C2  0100               	movlb	0	; () banked
  1536  0011C4  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1537  0011C6  C047  F064         	movff	_desp_hora,?_sprintf+4
  1538  0011CA  0100               	movlb	0	; () banked
  1539  0011CC  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1540  0011CE  C046  F066         	movff	_desp_min,?_sprintf+6
  1541  0011D2  0100               	movlb	0	; () banked
  1542  0011D4  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1543  0011D6  EC24  F005         	call	_sprintf	;wreg free
  1544                           
  1545                           ;main.c: 113: putrsXLCD(buffer);
  1546  0011DA  0E71               	movlw	low _buffer
  1547  0011DC  6E14               	movwf	putrsXLCD@buffer,c
  1548  0011DE  0E00               	movlw	high _buffer
  1549  0011E0  6E15               	movwf	putrsXLCD@buffer+1,c
  1550  0011E2  EC1C  F008         	call	_putrsXLCD	;wreg free
  1551  0011E6  0012               	return	
  1552  0011E8                     __end_of_tela_2:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           intcon	equ	0xFF2
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _tela_1 *****************
  1566 ;; Defined at:
  1567 ;;		line 89 in file "main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    5
  1588 ;; This function calls:
  1589 ;;		_SetDDRamAddr
  1590 ;;		_putrsXLCD
  1591 ;;		_sprintf
  1592 ;; This function is called by:
  1593 ;;		_telas
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text8
  1598  000CA4                     __ptext8:
  1599                           	opt stack 0
  1600  000CA4                     _tela_1:
  1601                           	opt stack 23
  1602                           
  1603                           ;main.c: 90: SetDDRamAddr(0x00);
  1604                           
  1605                           ;incstack = 0
  1606  000CA4  0E00               	movlw	0
  1607  000CA6  EC1D  F009         	call	_SetDDRamAddr
  1608                           
  1609                           ;main.c: 91: putrsXLCD("Hora: ");
  1610  000CAA  0E41               	movlw	low STR_1
  1611  000CAC  6E14               	movwf	putrsXLCD@buffer,c
  1612  000CAE  0E08               	movlw	high STR_1
  1613  000CB0  6E15               	movwf	putrsXLCD@buffer+1,c
  1614  000CB2  EC1C  F008         	call	_putrsXLCD	;wreg free
  1615                           
  1616                           ;main.c: 92: sprintf(buffer, "%d:%d:%d", hora, minuto, segundo);
  1617  000CB6  0E71               	movlw	low _buffer
  1618  000CB8  0100               	movlb	0	; () banked
  1619  000CBA  6F60               	movwf	sprintf@sp& (0+255),b
  1620  000CBC  0E00               	movlw	high _buffer
  1621  000CBE  0100               	movlb	0	; () banked
  1622  000CC0  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1623  000CC2  0E30               	movlw	low STR_2
  1624  000CC4  0100               	movlb	0	; () banked
  1625  000CC6  6F62               	movwf	sprintf@f& (0+255),b
  1626  000CC8  0E08               	movlw	high STR_2
  1627  000CCA  0100               	movlb	0	; () banked
  1628  000CCC  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1629  000CCE  C02E  F064         	movff	_hora,?_sprintf+4
  1630  000CD2  0100               	movlb	0	; () banked
  1631  000CD4  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1632  000CD6  C02D  F066         	movff	_minuto,?_sprintf+6
  1633  000CDA  0100               	movlb	0	; () banked
  1634  000CDC  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1635  000CDE  C02C  F068         	movff	_segundo,?_sprintf+8
  1636  000CE2  0100               	movlb	0	; () banked
  1637  000CE4  6B69               	clrf	(?_sprintf+9)& (0+255),b
  1638  000CE6  EC24  F005         	call	_sprintf	;wreg free
  1639                           
  1640                           ;main.c: 93: putrsXLCD(buffer);
  1641  000CEA  0E71               	movlw	low _buffer
  1642  000CEC  6E14               	movwf	putrsXLCD@buffer,c
  1643  000CEE  0E00               	movlw	high _buffer
  1644  000CF0  6E15               	movwf	putrsXLCD@buffer+1,c
  1645  000CF2  EC1C  F008         	call	_putrsXLCD	;wreg free
  1646                           
  1647                           ;main.c: 94: SetDDRamAddr(0x40);
  1648  000CF6  0E40               	movlw	64
  1649  000CF8  EC1D  F009         	call	_SetDDRamAddr
  1650                           
  1651                           ;main.c: 95: putrsXLCD("Data: ");
  1652  000CFC  0E48               	movlw	low STR_3
  1653  000CFE  6E14               	movwf	putrsXLCD@buffer,c
  1654  000D00  0E08               	movlw	high STR_3
  1655  000D02  6E15               	movwf	putrsXLCD@buffer+1,c
  1656  000D04  EC1C  F008         	call	_putrsXLCD	;wreg free
  1657                           
  1658                           ;main.c: 96: sprintf(buffer, "%d/%d/%d", dia, mes, ano);
  1659  000D08  0E71               	movlw	low _buffer
  1660  000D0A  0100               	movlb	0	; () banked
  1661  000D0C  6F60               	movwf	sprintf@sp& (0+255),b
  1662  000D0E  0E00               	movlw	high _buffer
  1663  000D10  0100               	movlb	0	; () banked
  1664  000D12  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1665  000D14  0E27               	movlw	low STR_4
  1666  000D16  0100               	movlb	0	; () banked
  1667  000D18  6F62               	movwf	sprintf@f& (0+255),b
  1668  000D1A  0E08               	movlw	high STR_4
  1669  000D1C  0100               	movlb	0	; () banked
  1670  000D1E  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1671  000D20  C049  F064         	movff	_dia,?_sprintf+4
  1672  000D24  0100               	movlb	0	; () banked
  1673  000D26  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1674  000D28  C048  F066         	movff	_mes,?_sprintf+6
  1675  000D2C  0100               	movlb	0	; () banked
  1676  000D2E  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1677  000D30  C044  F068         	movff	_ano,?_sprintf+8
  1678  000D34  C045  F069         	movff	_ano+1,?_sprintf+9
  1679  000D38  EC24  F005         	call	_sprintf	;wreg free
  1680                           
  1681                           ;main.c: 97: putrsXLCD(buffer);
  1682  000D3C  0E71               	movlw	low _buffer
  1683  000D3E  6E14               	movwf	putrsXLCD@buffer,c
  1684  000D40  0E00               	movlw	high _buffer
  1685  000D42  6E15               	movwf	putrsXLCD@buffer+1,c
  1686  000D44  EC1C  F008         	call	_putrsXLCD	;wreg free
  1687  000D48  0012               	return	
  1688  000D4A                     __end_of_tela_1:
  1689                           	opt stack 0
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           intcon	equ	0xFF2
  1695                           postinc0	equ	0xFEE
  1696                           wreg	equ	0xFE8
  1697                           postdec1	equ	0xFE5
  1698                           fsr1l	equ	0xFE1
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _sprintf *****************
  1702 ;; Defined at:
  1703 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  1706 ;;		 -> buffer(16), 
  1707 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1708 ;;		 -> STR_10(5), STR_8(6), STR_6(6), STR_4(9), 
  1709 ;;		 -> STR_2(9), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  tmpval          4    0        struct .
  1712 ;;  cp              3    0        PTR const unsigned char 
  1713 ;;  val             2   14[BANK0 ] unsigned int 
  1714 ;;  ap              2   10[BANK0 ] PTR void [1]
  1715 ;;		 -> ?_sprintf(2), 
  1716 ;;  len             2    0        unsigned int 
  1717 ;;  c               1   16[BANK0 ] char 
  1718 ;;  prec            1   13[BANK0 ] char 
  1719 ;;  flag            1   12[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  2    0[BANK0 ] int 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         0      10       0       0       0       0       0       0       0
  1730 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1731 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         1      17       0       0       0       0       0       0       0
  1733 ;;Total ram usage:       18 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    2
  1736 ;; This function calls:
  1737 ;;		___lwdiv
  1738 ;;		___lwmod
  1739 ;; This function is called by:
  1740 ;;		_tela_1
  1741 ;;		_tela_2
  1742 ;;		_tela_3
  1743 ;;		_tela_4
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text9
  1748  000A48                     __ptext9:
  1749                           	opt stack 0
  1750  000A48                     _sprintf:
  1751                           	opt stack 25
  1752                           
  1753                           ;doprnt.c: 494: va_list ap;
  1754                           ;doprnt.c: 499: signed char c;
  1755                           ;doprnt.c: 506: signed char prec;
  1756                           ;doprnt.c: 508: unsigned char flag;
  1757                           ;doprnt.c: 523: union {
  1758                           ;doprnt.c: 524: unsigned long vd;
  1759                           ;doprnt.c: 525: double integ;
  1760                           ;doprnt.c: 526: } tmpval;
  1761                           ;doprnt.c: 528: unsigned int val;
  1762                           ;doprnt.c: 529: unsigned len;
  1763                           ;doprnt.c: 530: const char * cp;
  1764                           ;doprnt.c: 533: *ap = __va_start();
  1765                           
  1766                           ;incstack = 0
  1767  000A48  0E64               	movlw	low (?_sprintf+4)
  1768  000A4A  0100               	movlb	0	; () banked
  1769  000A4C  6F6A               	movwf	sprintf@ap& (0+255),b
  1770  000A4E  0E00               	movlw	high (?_sprintf+4)
  1771  000A50  0100               	movlb	0	; () banked
  1772  000A52  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1773                           
  1774                           ;doprnt.c: 536: while(c = *f++) {
  1775  000A54  D0A8               	goto	l2506
  1776  000A56                     l2454:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;doprnt.c: 538: if(c != '%')
  1780  000A56  0E25               	movlw	37
  1781  000A58  0100               	movlb	0	; () banked
  1782  000A5A  1970               	xorwf	sprintf@c& (0+255),w,b
  1783  000A5C  B4D8               	btfsc	status,2,c
  1784  000A5E  D00A               	goto	l2460
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;doprnt.c: 540: {
  1788                           ;doprnt.c: 541: ((*sp++ = (c)));
  1789  000A60  C060  FFD9         	movff	sprintf@sp,fsr2l
  1790  000A64  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  1791  000A68  C070  FFDF         	movff	sprintf@c,indf2
  1792                           
  1793                           ; BSR set to: 0
  1794  000A6C  0100               	movlb	0	; () banked
  1795  000A6E  4B60               	infsnz	sprintf@sp& (0+255),f,b
  1796  000A70  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  1797                           
  1798                           ;doprnt.c: 542: continue;
  1799  000A72  D099               	goto	l2506
  1800  000A74                     l2460:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;doprnt.c: 543: }
  1804                           ;doprnt.c: 548: flag = 0;
  1805  000A74  0E00               	movlw	0
  1806  000A76  0100               	movlb	0	; () banked
  1807  000A78  6F6C               	movwf	sprintf@flag& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810                           
  1811                           ; BSR set to: 0
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;doprnt.c: 822: }
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;doprnt.c: 813: continue;
  1818                           
  1819                           ;doprnt.c: 802: default:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;doprnt.c: 698: case 'i':
  1823                           ;doprnt.c: 699: break;
  1824                           
  1825                           ; BSR set to: 0
  1826                           
  1827                           ;doprnt.c: 697: case 'd':
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;doprnt.c: 638: goto alldone;
  1831                           
  1832                           ;doprnt.c: 637: case 0:
  1833                           
  1834                           ;doprnt.c: 635: switch(c = *f++) {
  1835  000A7A  C062  FFF6         	movff	sprintf@f,tblptrl
  1836  000A7E  C063  FFF7         	movff	sprintf@f+1,tblptrh
  1837  000A82  0100               	movlb	0	; () banked
  1838  000A84  4B62               	infsnz	sprintf@f& (0+255),f,b
  1839  000A86  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  1840  000A88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1841  000A88  6AF8               	clrf	tblptru,c
  1842  000A8A                     	endif
  1843  000A8A                     	if	0	;tblptru may be non-zero
  1844  000A8A                     	endif
  1845  000A8A  0008               	tblrd		*
  1846  000A8C  CFF5 F070          	movff	tablat,sprintf@c
  1847  000A90  0100               	movlb	0	; () banked
  1848  000A92  5170               	movf	sprintf@c& (0+255),w,b
  1849                           
  1850                           ; Switch size 1, requested type "space"
  1851                           ; Number of cases is 3, Range of values is 0 to 105
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           10     6 (average)
  1855                           ;	Chosen strategy is simple_byte
  1856  000A94  0A00               	xorlw	0	; case 0
  1857  000A96  B4D8               	btfsc	status,2,c
  1858  000A98  D095               	goto	l2508
  1859  000A9A  0A64               	xorlw	100	; case 100
  1860  000A9C  B4D8               	btfsc	status,2,c
  1861  000A9E  D003               	goto	l2466
  1862  000AA0  0A0D               	xorlw	13	; case 105
  1863  000AA2  A4D8               	btfss	status,2,c
  1864  000AA4  D080               	goto	l2506
  1865  000AA6                     l2466:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;doprnt.c: 1253: {
  1869                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1870  000AA6  C06A  FFD9         	movff	sprintf@ap,fsr2l
  1871  000AAA  C06B  FFDA         	movff	sprintf@ap+1,fsr2h
  1872  000AAE  CFDE F06E          	movff	postinc2,sprintf@val
  1873  000AB2  CFDD F06F          	movff	postdec2,sprintf@val+1
  1874                           
  1875                           ; BSR set to: 0
  1876  000AB6  0E02               	movlw	2
  1877  000AB8  0100               	movlb	0	; () banked
  1878  000ABA  276A               	addwf	sprintf@ap& (0+255),f,b
  1879  000ABC  0E00               	movlw	0
  1880  000ABE  236B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;doprnt.c: 1261: if((int)val < 0) {
  1884  000AC0  0100               	movlb	0	; () banked
  1885  000AC2  AF6F               	btfss	(sprintf@val+1)& (0+255),7,b
  1886  000AC4  D008               	goto	l2476
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;doprnt.c: 1262: flag |= 0x03;
  1890  000AC6  0E03               	movlw	3
  1891  000AC8  0100               	movlb	0	; () banked
  1892  000ACA  136C               	iorwf	sprintf@flag& (0+255),f,b
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;doprnt.c: 1263: val = -val;
  1896  000ACC  0100               	movlb	0	; () banked
  1897  000ACE  6D6E               	negf	sprintf@val& (0+255),b
  1898  000AD0  1F6F               	comf	(sprintf@val+1)& (0+255),f,b
  1899  000AD2  B0D8               	btfsc	status,0,c
  1900  000AD4  2B6F               	incf	(sprintf@val+1)& (0+255),f,b
  1901  000AD6                     l2476:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;doprnt.c: 1264: }
  1905                           ;doprnt.c: 1266: }
  1906                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1907  000AD6  0E01               	movlw	1
  1908  000AD8  0100               	movlb	0	; () banked
  1909  000ADA  6F70               	movwf	sprintf@c& (0+255),b
  1910  000ADC                     l2478:
  1911                           
  1912                           ; BSR set to: 0
  1913  000ADC  0E05               	movlw	5
  1914  000ADE  0100               	movlb	0	; () banked
  1915  000AE0  1970               	xorwf	sprintf@c& (0+255),w,b
  1916  000AE2  B4D8               	btfsc	status,2,c
  1917  000AE4  D019               	goto	l2490
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;doprnt.c: 1306: if(val < dpowers[c])
  1921                           
  1922                           ; BSR set to: 0
  1923                           
  1924                           ; BSR set to: 0
  1925  000AE6  0100               	movlb	0	; () banked
  1926  000AE8  5170               	movf	sprintf@c& (0+255),w,b
  1927  000AEA  0D02               	mullw	2
  1928  000AEC  0E01               	movlw	low _dpowers
  1929  000AEE  24F3               	addwf	prodl,w,c
  1930  000AF0  6EF6               	movwf	tblptrl,c
  1931  000AF2  0E08               	movlw	high _dpowers
  1932  000AF4  20F4               	addwfc	prodh,w,c
  1933  000AF6  6EF7               	movwf	tblptrh,c
  1934  000AF8                     	if	1	;There are 3 active tblptr bytes
  1935  000AF8  6AF8               	clrf	tblptru,c
  1936  000AFA  0E00               	movlw	low (__mediumconst shr (0+16))
  1937  000AFC  22F8               	addwfc	tblptru,f,c
  1938  000AFE                     	endif
  1939  000AFE  0009               	tblrd		*+
  1940  000B00  50F5               	movf	tablat,w,c
  1941  000B02  0100               	movlb	0	; () banked
  1942  000B04  5D6E               	subwf	sprintf@val& (0+255),w,b
  1943  000B06  0009               	tblrd		*+
  1944  000B08  50F5               	movf	tablat,w,c
  1945  000B0A  0100               	movlb	0	; () banked
  1946  000B0C  596F               	subwfb	(sprintf@val+1)& (0+255),w,b
  1947  000B0E  A0D8               	btfss	status,0,c
  1948  000B10  D003               	goto	l2490
  1949                           
  1950                           ; BSR set to: 0
  1951                           
  1952                           ; BSR set to: 0
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;doprnt.c: 1307: break;
  1956  000B12  0100               	movlb	0	; () banked
  1957  000B14  2B70               	incf	sprintf@c& (0+255),f,b
  1958  000B16  D7E2               	goto	l2478
  1959  000B18                     l2490:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;doprnt.c: 1422: {
  1963                           ;doprnt.c: 1438: if(flag & 0x03)
  1964  000B18  C06C  F01E         	movff	sprintf@flag,??_sprintf
  1965  000B1C  0E03               	movlw	3
  1966  000B1E  161E               	andwf	??_sprintf,f,c
  1967  000B20  B4D8               	btfsc	status,2,c
  1968  000B22  D009               	goto	l2496
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1972  000B24  C060  FFD9         	movff	sprintf@sp,fsr2l
  1973  000B28  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  1974  000B2C  0E2D               	movlw	45
  1975  000B2E  6EDF               	movwf	indf2,c
  1976                           
  1977                           ; BSR set to: 0
  1978  000B30  0100               	movlb	0	; () banked
  1979  000B32  4B60               	infsnz	sprintf@sp& (0+255),f,b
  1980  000B34  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  1981  000B36                     l2496:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;doprnt.c: 1469: }
  1985                           ;doprnt.c: 1472: prec = c;
  1986  000B36  C070  F06D         	movff	sprintf@c,sprintf@prec
  1987                           
  1988                           ;doprnt.c: 1474: while(prec--) {
  1989  000B3A  D02F               	goto	l2504
  1990  000B3C                     l2498:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;doprnt.c: 1478: {
  1994                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1995  000B3C  0100               	movlb	0	; () banked
  1996  000B3E  516D               	movf	sprintf@prec& (0+255),w,b
  1997  000B40  0D02               	mullw	2
  1998  000B42  0E01               	movlw	low _dpowers
  1999  000B44  24F3               	addwf	prodl,w,c
  2000  000B46  6EF6               	movwf	tblptrl,c
  2001  000B48  0E08               	movlw	high _dpowers
  2002  000B4A  20F4               	addwfc	prodh,w,c
  2003  000B4C  6EF7               	movwf	tblptrh,c
  2004  000B4E                     	if	1	;There are 3 active tblptr bytes
  2005  000B4E  6AF8               	clrf	tblptru,c
  2006  000B50  0E00               	movlw	low (__mediumconst shr (0+16))
  2007  000B52  22F8               	addwfc	tblptru,f,c
  2008  000B54                     	endif
  2009  000B54  0009               	tblrd		*+
  2010  000B56  CFF5 F014          	movff	tablat,___lwdiv@divisor
  2011  000B5A  000A               	tblrd		*-
  2012  000B5C  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  2013  000B60  C06E  F012         	movff	sprintf@val,___lwdiv@dividend
  2014  000B64  C06F  F013         	movff	sprintf@val+1,___lwdiv@dividend+1
  2015  000B68  ECF4  F008         	call	___lwdiv	;wreg free
  2016  000B6C  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  2017  000B70  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2018  000B74  0E00               	movlw	0
  2019  000B76  6E1C               	movwf	___lwmod@divisor+1,c
  2020  000B78  0E0A               	movlw	10
  2021  000B7A  6E1B               	movwf	___lwmod@divisor,c
  2022  000B7C  ECB4  F009         	call	___lwmod	;wreg free
  2023  000B80  5019               	movf	?___lwmod,w,c
  2024  000B82  0F30               	addlw	48
  2025  000B84  0100               	movlb	0	; () banked
  2026  000B86  6F70               	movwf	sprintf@c& (0+255),b
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;doprnt.c: 1523: }
  2030                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2031  000B88  C060  FFD9         	movff	sprintf@sp,fsr2l
  2032  000B8C  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2033  000B90  C070  FFDF         	movff	sprintf@c,indf2
  2034                           
  2035                           ; BSR set to: 0
  2036  000B94  0100               	movlb	0	; () banked
  2037  000B96  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2038  000B98  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2039  000B9A                     l2504:
  2040                           
  2041                           ; BSR set to: 0
  2042  000B9A  0100               	movlb	0	; () banked
  2043  000B9C  076D               	decf	sprintf@prec& (0+255),f,b
  2044  000B9E  0100               	movlb	0	; () banked
  2045  000BA0  296D               	incf	sprintf@prec& (0+255),w,b
  2046  000BA2  A4D8               	btfss	status,2,c
  2047  000BA4  D7CB               	goto	l2498
  2048  000BA6                     l2506:
  2049                           
  2050                           ; BSR set to: 0
  2051  000BA6  C062  FFF6         	movff	sprintf@f,tblptrl
  2052  000BAA  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2053  000BAE  0100               	movlb	0	; () banked
  2054  000BB0  4B62               	infsnz	sprintf@f& (0+255),f,b
  2055  000BB2  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  2056  000BB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2057  000BB4  6AF8               	clrf	tblptru,c
  2058  000BB6                     	endif
  2059  000BB6                     	if	0	;tblptru may be non-zero
  2060  000BB6                     	endif
  2061  000BB6  0008               	tblrd		*
  2062  000BB8  CFF5 F070          	movff	tablat,sprintf@c
  2063  000BBC  0100               	movlb	0	; () banked
  2064  000BBE  5170               	movf	sprintf@c& (0+255),w,b
  2065  000BC0  A4D8               	btfss	status,2,c
  2066  000BC2  D749               	goto	l2454
  2067  000BC4                     l2508:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;doprnt.c: 1538: *sp = 0;
  2071  000BC4  C060  FFD9         	movff	sprintf@sp,fsr2l
  2072  000BC8  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2073  000BCC  0E00               	movlw	0
  2074  000BCE  6EDF               	movwf	indf2,c
  2075  000BD0  0012               	return	
  2076  000BD2                     __end_of_sprintf:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodh	equ	0xFF4
  2083                           prodl	equ	0xFF3
  2084                           intcon	equ	0xFF2
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           postdec1	equ	0xFE5
  2088                           fsr1l	equ	0xFE1
  2089                           indf2	equ	0xFDF
  2090                           postinc2	equ	0xFDE
  2091                           postdec2	equ	0xFDD
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function ___lwmod *****************
  2097 ;; Defined at:
  2098 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  dividend        2   24[COMRAM] unsigned int 
  2101 ;;  divisor         2   26[COMRAM] unsigned int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  counter         1   28[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   24[COMRAM] unsigned int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2113 ;;      Params:         4       0       0       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2116 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        5 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_sprintf
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text10
  2128  001368                     __ptext10:
  2129                           	opt stack 0
  2130  001368                     ___lwmod:
  2131                           	opt stack 25
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;incstack = 0
  2135  001368  501B               	movf	___lwmod@divisor,w,c
  2136  00136A  101C               	iorwf	___lwmod@divisor+1,w,c
  2137  00136C  B4D8               	btfsc	status,2,c
  2138  00136E  D018               	goto	l851
  2139  001370  0E01               	movlw	1
  2140  001372  6E1D               	movwf	___lwmod@counter,c
  2141  001374  D004               	goto	l2442
  2142  001376                     l2440:
  2143  001376  90D8               	bcf	status,0,c
  2144  001378  361B               	rlcf	___lwmod@divisor,f,c
  2145  00137A  361C               	rlcf	___lwmod@divisor+1,f,c
  2146  00137C  2A1D               	incf	___lwmod@counter,f,c
  2147  00137E                     l2442:
  2148  00137E  AE1C               	btfss	___lwmod@divisor+1,7,c
  2149  001380  D7FA               	goto	l2440
  2150  001382                     l2444:
  2151  001382  501B               	movf	___lwmod@divisor,w,c
  2152  001384  5C19               	subwf	___lwmod@dividend,w,c
  2153  001386  501C               	movf	___lwmod@divisor+1,w,c
  2154  001388  581A               	subwfb	___lwmod@dividend+1,w,c
  2155  00138A  A0D8               	btfss	status,0,c
  2156  00138C  D004               	goto	l2448
  2157  00138E  501B               	movf	___lwmod@divisor,w,c
  2158  001390  5E19               	subwf	___lwmod@dividend,f,c
  2159  001392  501C               	movf	___lwmod@divisor+1,w,c
  2160  001394  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2161  001396                     l2448:
  2162  001396  90D8               	bcf	status,0,c
  2163  001398  321C               	rrcf	___lwmod@divisor+1,f,c
  2164  00139A  321B               	rrcf	___lwmod@divisor,f,c
  2165  00139C  2E1D               	decfsz	___lwmod@counter,f,c
  2166  00139E  D7F1               	goto	l2444
  2167  0013A0                     l851:
  2168  0013A0  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2169  0013A4  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2170  0013A8  0012               	return		;funcret
  2171  0013AA                     __end_of___lwmod:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           postdec1	equ	0xFE5
  2183                           fsr1l	equ	0xFE1
  2184                           indf2	equ	0xFDF
  2185                           postinc2	equ	0xFDE
  2186                           postdec2	equ	0xFDD
  2187                           fsr2h	equ	0xFDA
  2188                           fsr2l	equ	0xFD9
  2189                           status	equ	0xFD8
  2190                           
  2191 ;; *************** function ___lwdiv *****************
  2192 ;; Defined at:
  2193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  dividend        2   17[COMRAM] unsigned int 
  2196 ;;  divisor         2   19[COMRAM] unsigned int 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  quotient        2   22[COMRAM] unsigned int 
  2199 ;;  counter         1   21[COMRAM] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  2   17[COMRAM] unsigned int 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2209 ;;      Params:         4       0       0       0       0       0       0       0       0
  2210 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2212 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2213 ;;Total ram usage:        7 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_sprintf
  2220 ;;		_calcula_temperatura
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text11
  2225  0011E8                     __ptext11:
  2226                           	opt stack 0
  2227  0011E8                     ___lwdiv:
  2228                           	opt stack 25
  2229                           
  2230                           ;incstack = 0
  2231  0011E8  0E00               	movlw	0
  2232  0011EA  6E18               	movwf	___lwdiv@quotient+1,c
  2233  0011EC  0E00               	movlw	0
  2234  0011EE  6E17               	movwf	___lwdiv@quotient,c
  2235  0011F0  5014               	movf	___lwdiv@divisor,w,c
  2236  0011F2  1015               	iorwf	___lwdiv@divisor+1,w,c
  2237  0011F4  B4D8               	btfsc	status,2,c
  2238  0011F6  D01C               	goto	l841
  2239  0011F8  0E01               	movlw	1
  2240  0011FA  6E16               	movwf	___lwdiv@counter,c
  2241  0011FC  D004               	goto	l2422
  2242  0011FE                     l2420:
  2243  0011FE  90D8               	bcf	status,0,c
  2244  001200  3614               	rlcf	___lwdiv@divisor,f,c
  2245  001202  3615               	rlcf	___lwdiv@divisor+1,f,c
  2246  001204  2A16               	incf	___lwdiv@counter,f,c
  2247  001206                     l2422:
  2248  001206  AE15               	btfss	___lwdiv@divisor+1,7,c
  2249  001208  D7FA               	goto	l2420
  2250  00120A                     l2424:
  2251  00120A  90D8               	bcf	status,0,c
  2252  00120C  3617               	rlcf	___lwdiv@quotient,f,c
  2253  00120E  3618               	rlcf	___lwdiv@quotient+1,f,c
  2254  001210  5014               	movf	___lwdiv@divisor,w,c
  2255  001212  5C12               	subwf	___lwdiv@dividend,w,c
  2256  001214  5015               	movf	___lwdiv@divisor+1,w,c
  2257  001216  5813               	subwfb	___lwdiv@dividend+1,w,c
  2258  001218  A0D8               	btfss	status,0,c
  2259  00121A  D005               	goto	l2432
  2260  00121C  5014               	movf	___lwdiv@divisor,w,c
  2261  00121E  5E12               	subwf	___lwdiv@dividend,f,c
  2262  001220  5015               	movf	___lwdiv@divisor+1,w,c
  2263  001222  5A13               	subwfb	___lwdiv@dividend+1,f,c
  2264  001224  8017               	bsf	___lwdiv@quotient,0,c
  2265  001226                     l2432:
  2266  001226  90D8               	bcf	status,0,c
  2267  001228  3215               	rrcf	___lwdiv@divisor+1,f,c
  2268  00122A  3214               	rrcf	___lwdiv@divisor,f,c
  2269  00122C  2E16               	decfsz	___lwdiv@counter,f,c
  2270  00122E  D7ED               	goto	l2424
  2271  001230                     l841:
  2272  001230  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  2273  001234  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2274  001238  0012               	return		;funcret
  2275  00123A                     __end_of___lwdiv:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           prodh	equ	0xFF4
  2282                           prodl	equ	0xFF3
  2283                           intcon	equ	0xFF2
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           postdec1	equ	0xFE5
  2287                           fsr1l	equ	0xFE1
  2288                           indf2	equ	0xFDF
  2289                           postinc2	equ	0xFDE
  2290                           postdec2	equ	0xFDD
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _limpa_tela *****************
  2296 ;; Defined at:
  2297 ;;		line 134 in file "main.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    5
  2318 ;; This function calls:
  2319 ;;		_SetDDRamAddr
  2320 ;;		_putrsXLCD
  2321 ;; This function is called by:
  2322 ;;		_telas
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text12
  2327  0014E8                     __ptext12:
  2328                           	opt stack 0
  2329  0014E8                     _limpa_tela:
  2330                           	opt stack 23
  2331                           
  2332                           ;main.c: 135: SetDDRamAddr(0x00);
  2333                           
  2334                           ;incstack = 0
  2335  0014E8  0E00               	movlw	0
  2336  0014EA  EC1D  F009         	call	_SetDDRamAddr
  2337                           
  2338                           ;main.c: 136: putrsXLCD("                ");
  2339  0014EE  0E0B               	movlw	low STR_11
  2340  0014F0  6E14               	movwf	putrsXLCD@buffer,c
  2341  0014F2  0E08               	movlw	high STR_11
  2342  0014F4  6E15               	movwf	putrsXLCD@buffer+1,c
  2343  0014F6  EC1C  F008         	call	_putrsXLCD	;wreg free
  2344                           
  2345                           ;main.c: 137: SetDDRamAddr(0x40);
  2346  0014FA  0E40               	movlw	64
  2347  0014FC  EC1D  F009         	call	_SetDDRamAddr
  2348                           
  2349                           ;main.c: 138: putrsXLCD("                ");
  2350  001500  0E0B               	movlw	low STR_11
  2351  001502  6E14               	movwf	putrsXLCD@buffer,c
  2352  001504  0E08               	movlw	high STR_11
  2353  001506  6E15               	movwf	putrsXLCD@buffer+1,c
  2354  001508  EC1C  F008         	call	_putrsXLCD	;wreg free
  2355  00150C  0012               	return	
  2356  00150E                     __end_of_limpa_tela:
  2357                           	opt stack 0
  2358                           tblptru	equ	0xFF8
  2359                           tblptrh	equ	0xFF7
  2360                           tblptrl	equ	0xFF6
  2361                           tablat	equ	0xFF5
  2362                           prodh	equ	0xFF4
  2363                           prodl	equ	0xFF3
  2364                           intcon	equ	0xFF2
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           postdec1	equ	0xFE5
  2368                           fsr1l	equ	0xFE1
  2369                           indf2	equ	0xFDF
  2370                           postinc2	equ	0xFDE
  2371                           postdec2	equ	0xFDD
  2372                           fsr2h	equ	0xFDA
  2373                           fsr2l	equ	0xFD9
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function _putrsXLCD *****************
  2377 ;; Defined at:
  2378 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  2381 ;;		 -> STR_12(17), STR_11(17), STR_9(8), STR_7(11), 
  2382 ;;		 -> STR_5(7), STR_3(7), buffer(16), STR_1(7), 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2394 ;;      Params:         2       0       0       0       0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2397 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2398 ;;Total ram usage:        2 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    4
  2401 ;; This function calls:
  2402 ;;		_BusyXLCD
  2403 ;;		_WriteDataXLCD
  2404 ;; This function is called by:
  2405 ;;		_tela_1
  2406 ;;		_tela_2
  2407 ;;		_tela_3
  2408 ;;		_tela_4
  2409 ;;		_limpa_tela
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text13
  2414  001038                     __ptext13:
  2415                           	opt stack 0
  2416  001038                     _putrsXLCD:
  2417                           	opt stack 23
  2418                           
  2419                           ;incstack = 0
  2420  001038  D019               	goto	l1942
  2421  00103A                     l1936:
  2422  00103A  EC13  F00A         	call	_BusyXLCD	;wreg free
  2423  00103E  0900               	iorlw	0
  2424  001040  A4D8               	btfss	status,2,c
  2425  001042  D7FB               	goto	l1936
  2426  001044  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2427  001048  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2428  00104C  6AF8               	clrf	tblptru,c
  2429  00104E  0E07               	movlw	(high __ramtop+-1)
  2430  001050  64F7               	cpfsgt	tblptrh,c
  2431  001052  D003               	bra	u907
  2432  001054  0008               	tblrd		*
  2433  001056  50F5               	movf	tablat,w,c
  2434  001058  D005               	bra	u900
  2435  00105A                     u907:
  2436  00105A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2437  00105E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2438  001062  50EF               	movf	indf0,w,c
  2439  001064                     u900:
  2440  001064  ECD5  F009         	call	_WriteDataXLCD
  2441  001068  4A14               	infsnz	putrsXLCD@buffer,f,c
  2442  00106A  2A15               	incf	putrsXLCD@buffer+1,f,c
  2443  00106C                     l1942:
  2444  00106C  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2445  001070  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2446  001074  6AF8               	clrf	tblptru,c
  2447  001076  0E07               	movlw	(high __ramtop+-1)
  2448  001078  64F7               	cpfsgt	tblptrh,c
  2449  00107A  D003               	bra	u917
  2450  00107C  0008               	tblrd		*
  2451  00107E  50F5               	movf	tablat,w,c
  2452  001080  D005               	bra	u910
  2453  001082                     u917:
  2454  001082  CFF6 FFE9          	movff	tblptrl,fsr0l
  2455  001086  CFF7 FFEA          	movff	tblptrh,fsr0h
  2456  00108A  50EF               	movf	indf0,w,c
  2457  00108C                     u910:
  2458  00108C  0900               	iorlw	0
  2459  00108E  B4D8               	btfsc	status,2,c
  2460  001090  0012               	return	
  2461  001092  D7D3               	goto	l1936
  2462  001094                     __end_of_putrsXLCD:
  2463                           	opt stack 0
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           prodh	equ	0xFF4
  2469                           prodl	equ	0xFF3
  2470                           intcon	equ	0xFF2
  2471                           indf0	equ	0xFEF
  2472                           postinc0	equ	0xFEE
  2473                           fsr0h	equ	0xFEA
  2474                           fsr0l	equ	0xFE9
  2475                           wreg	equ	0xFE8
  2476                           postdec1	equ	0xFE5
  2477                           fsr1l	equ	0xFE1
  2478                           indf2	equ	0xFDF
  2479                           postinc2	equ	0xFDE
  2480                           postdec2	equ	0xFDD
  2481                           fsr2h	equ	0xFDA
  2482                           fsr2l	equ	0xFD9
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _WriteDataXLCD *****************
  2486 ;; Defined at:
  2487 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  data            1    wreg     unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  data            1   18[COMRAM] unsigned char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2501 ;;      Params:         0       0       0       0       0       0       0       0       0
  2502 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2504 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2505 ;;Total ram usage:        1 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    3
  2508 ;; This function calls:
  2509 ;;		_DelayFor18TCY
  2510 ;; This function is called by:
  2511 ;;		_putrsXLCD
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text14
  2516  0013AA                     __ptext14:
  2517                           	opt stack 0
  2518  0013AA                     _WriteDataXLCD:
  2519                           	opt stack 23
  2520                           
  2521                           ;incstack = 0
  2522                           ;WriteDataXLCD@data stored from wreg
  2523  0013AA  6E13               	movwf	WriteDataXLCD@data,c
  2524  0013AC  0EF0               	movlw	240
  2525  0013AE  1693               	andwf	3987,f,c	;volatile
  2526  0013B0  0EF0               	movlw	240
  2527  0013B2  1681               	andwf	3969,f,c	;volatile
  2528  0013B4  3813               	swapf	WriteDataXLCD@data,w,c
  2529  0013B6  0B0F               	andlw	15
  2530  0013B8  0B0F               	andlw	15
  2531  0013BA  1281               	iorwf	3969,f,c	;volatile
  2532  0013BC  8A8A               	bsf	3978,5,c	;volatile
  2533  0013BE  9C8A               	bcf	3978,6,c	;volatile
  2534  0013C0  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  2535  0013C4  888A               	bsf	3978,4,c	;volatile
  2536  0013C6  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  2537  0013CA  988A               	bcf	3978,4,c	;volatile
  2538  0013CC  0EF0               	movlw	240
  2539  0013CE  1681               	andwf	3969,f,c	;volatile
  2540  0013D0  5013               	movf	WriteDataXLCD@data,w,c
  2541  0013D2  0B0F               	andlw	15
  2542  0013D4  1281               	iorwf	3969,f,c	;volatile
  2543  0013D6  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  2544  0013DA  888A               	bsf	3978,4,c	;volatile
  2545  0013DC  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  2546  0013E0  988A               	bcf	3978,4,c	;volatile
  2547  0013E2  0E0F               	movlw	15
  2548  0013E4  1293               	iorwf	3987,f,c	;volatile
  2549  0013E6  0012               	return	
  2550  0013E8                     __end_of_WriteDataXLCD:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           intcon	equ	0xFF2
  2559                           indf0	equ	0xFEF
  2560                           postinc0	equ	0xFEE
  2561                           fsr0h	equ	0xFEA
  2562                           fsr0l	equ	0xFE9
  2563                           wreg	equ	0xFE8
  2564                           postdec1	equ	0xFE5
  2565                           fsr1l	equ	0xFE1
  2566                           indf2	equ	0xFDF
  2567                           postinc2	equ	0xFDE
  2568                           postdec2	equ	0xFDD
  2569                           fsr2h	equ	0xFDA
  2570                           fsr2l	equ	0xFD9
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _trata_data *****************
  2574 ;; Defined at:
  2575 ;;		line 203 in file "main.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:        0 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text15
  2604  0010EE                     __ptext15:
  2605                           	opt stack 0
  2606  0010EE                     _trata_data:
  2607                           	opt stack 29
  2608                           
  2609                           ;main.c: 204: if(hora == 24){
  2610                           
  2611                           ;incstack = 0
  2612  0010EE  0E18               	movlw	24
  2613  0010F0  182E               	xorwf	_hora,w,c
  2614  0010F2  A4D8               	btfss	status,2,c
  2615  0010F4  D004               	goto	l1638
  2616                           
  2617                           ;main.c: 205: dia+=1;
  2618  0010F6  2A49               	incf	_dia,f,c
  2619                           
  2620                           ;main.c: 206: hora = 0;
  2621  0010F8  0E00               	movlw	0
  2622  0010FA  6E2E               	movwf	_hora,c
  2623                           
  2624                           ;main.c: 207: return;
  2625  0010FC  0012               	return	
  2626  0010FE                     l1638:
  2627                           
  2628                           ;main.c: 208: }
  2629                           ;main.c: 209: if(mes == 2 && dia == 28){
  2630  0010FE  0E02               	movlw	2
  2631  001100  1848               	xorwf	_mes,w,c
  2632  001102  A4D8               	btfss	status,2,c
  2633  001104  D008               	goto	l1648
  2634  001106  0E1C               	movlw	28
  2635  001108  1849               	xorwf	_dia,w,c
  2636  00110A  A4D8               	btfss	status,2,c
  2637  00110C  D004               	goto	l1648
  2638                           
  2639                           ;main.c: 210: mes+=1;
  2640  00110E  2A48               	incf	_mes,f,c
  2641                           
  2642                           ;main.c: 211: dia = 1;
  2643  001110  0E01               	movlw	1
  2644  001112  6E49               	movwf	_dia,c
  2645                           
  2646                           ;main.c: 212: return;
  2647  001114  0012               	return	
  2648  001116                     l1648:
  2649                           
  2650                           ;main.c: 213: }
  2651                           ;main.c: 214: if(mes == 12 && dia == 30){
  2652  001116  0E0C               	movlw	12
  2653  001118  1848               	xorwf	_mes,w,c
  2654  00111A  A4D8               	btfss	status,2,c
  2655  00111C  D00B               	goto	l1660
  2656  00111E  0E1E               	movlw	30
  2657  001120  1849               	xorwf	_dia,w,c
  2658  001122  A4D8               	btfss	status,2,c
  2659  001124  D007               	goto	l1660
  2660                           
  2661                           ;main.c: 215: ano+=1;
  2662  001126  4A44               	infsnz	_ano,f,c
  2663  001128  2A45               	incf	_ano+1,f,c
  2664                           
  2665                           ;main.c: 216: mes = 1;
  2666  00112A  0E01               	movlw	1
  2667  00112C  6E48               	movwf	_mes,c
  2668                           
  2669                           ;main.c: 217: dia = 1;
  2670  00112E  0E01               	movlw	1
  2671  001130  6E49               	movwf	_dia,c
  2672                           
  2673                           ;main.c: 218: return;
  2674  001132  0012               	return	
  2675  001134                     l1660:
  2676                           
  2677                           ;main.c: 219: }
  2678                           ;main.c: 220: if(dia == 30){
  2679  001134  0E1E               	movlw	30
  2680  001136  1849               	xorwf	_dia,w,c
  2681  001138  A4D8               	btfss	status,2,c
  2682  00113A  0012               	return	
  2683                           
  2684                           ;main.c: 221: mes+=1;
  2685  00113C  2A48               	incf	_mes,f,c
  2686                           
  2687                           ;main.c: 222: dia = 1;
  2688  00113E  0E01               	movlw	1
  2689  001140  6E49               	movwf	_dia,c
  2690                           
  2691                           ;main.c: 223: return;
  2692  001142  0012               	return	
  2693  001144                     __end_of_trata_data:
  2694                           	opt stack 0
  2695                           tblptru	equ	0xFF8
  2696                           tblptrh	equ	0xFF7
  2697                           tblptrl	equ	0xFF6
  2698                           tablat	equ	0xFF5
  2699                           prodh	equ	0xFF4
  2700                           prodl	equ	0xFF3
  2701                           intcon	equ	0xFF2
  2702                           indf0	equ	0xFEF
  2703                           postinc0	equ	0xFEE
  2704                           fsr0h	equ	0xFEA
  2705                           fsr0l	equ	0xFE9
  2706                           wreg	equ	0xFE8
  2707                           postdec1	equ	0xFE5
  2708                           fsr1l	equ	0xFE1
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           postdec2	equ	0xFDD
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _maquinaEstado *****************
  2717 ;; Defined at:
  2718 ;;		line 496 in file "main.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    4
  2739 ;; This function calls:
  2740 ;;		_enviaByte
  2741 ;;		_trataComando
  2742 ;;		_tx_data
  2743 ;;		_verificaCRCBUFFCOM
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text16
  2750  0012DA                     __ptext16:
  2751                           	opt stack 0
  2752  0012DA                     _maquinaEstado:
  2753                           	opt stack 26
  2754                           
  2755                           ;main.c: 497: switch(estado){
  2756                           
  2757                           ;incstack = 0
  2758  0012DA  D011               	goto	l2778
  2759  0012DC                     l2766:
  2760                           
  2761                           ;main.c: 499: verificaCRCBUFFCOM();
  2762  0012DC  EC4A  F008         	call	_verificaCRCBUFFCOM	;wreg free
  2763                           
  2764                           ;main.c: 500: break;
  2765  0012E0  0012               	return	
  2766  0012E2                     l2768:
  2767                           
  2768                           ;main.c: 503: trataComando();
  2769  0012E2  EC31  F004         	call	_trataComando	;wreg free
  2770                           
  2771                           ;main.c: 504: break;
  2772  0012E6  0012               	return	
  2773  0012E8                     l2770:
  2774                           
  2775                           ;main.c: 507: tx_data();
  2776  0012E8  EC30  F00A         	call	_tx_data	;wreg free
  2777                           
  2778                           ;main.c: 508: break;
  2779  0012EC  0012               	return	
  2780  0012EE                     l2772:
  2781                           
  2782                           ;main.c: 511: enviaByte(0x05);
  2783  0012EE  0E05               	movlw	5
  2784  0012F0  EC97  F00A         	call	_enviaByte
  2785                           
  2786                           ;main.c: 512: break;
  2787  0012F4  0012               	return	
  2788  0012F6                     l2774:
  2789                           
  2790                           ;main.c: 515: enviaByte(0x15);
  2791  0012F6  0E15               	movlw	21
  2792  0012F8  EC97  F00A         	call	_enviaByte
  2793                           
  2794                           ;main.c: 522: }
  2795                           
  2796                           ;main.c: 521: break;
  2797                           
  2798                           ;main.c: 520: default:
  2799                           
  2800                           ;main.c: 519: break;
  2801                           
  2802                           ;main.c: 518: case 0:
  2803                           
  2804                           ;main.c: 516: break;
  2805  0012FC  0012               	return	
  2806  0012FE                     l2778:
  2807  0012FE  5031               	movf	_estado,w,c
  2808                           
  2809                           ; Switch size 1, requested type "space"
  2810                           ; Number of cases is 6, Range of values is 0 to 5
  2811                           ; switch strategies available:
  2812                           ; Name         Instructions Cycles
  2813                           ; simple_byte           19    10 (average)
  2814                           ;	Chosen strategy is simple_byte
  2815  001300  0A00               	xorlw	0	; case 0
  2816  001302  B4D8               	btfsc	status,2,c
  2817  001304  0012               	return	
  2818  001306  0A01               	xorlw	1	; case 1
  2819  001308  B4D8               	btfsc	status,2,c
  2820  00130A  D7E8               	goto	l2766
  2821  00130C  0A03               	xorlw	3	; case 2
  2822  00130E  B4D8               	btfsc	status,2,c
  2823  001310  D7E8               	goto	l2768
  2824  001312  0A01               	xorlw	1	; case 3
  2825  001314  B4D8               	btfsc	status,2,c
  2826  001316  D7E8               	goto	l2770
  2827  001318  0A07               	xorlw	7	; case 4
  2828  00131A  B4D8               	btfsc	status,2,c
  2829  00131C  D7E8               	goto	l2772
  2830  00131E  0A01               	xorlw	1	; case 5
  2831  001320  A4D8               	btfss	status,2,c
  2832  001322  0012               	return	
  2833  001324  D7E8               	goto	l2774
  2834  001326                     __end_of_maquinaEstado:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           prodh	equ	0xFF4
  2841                           prodl	equ	0xFF3
  2842                           intcon	equ	0xFF2
  2843                           indf0	equ	0xFEF
  2844                           postinc0	equ	0xFEE
  2845                           fsr0h	equ	0xFEA
  2846                           fsr0l	equ	0xFE9
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1l	equ	0xFE1
  2850                           indf2	equ	0xFDF
  2851                           postinc2	equ	0xFDE
  2852                           postdec2	equ	0xFDD
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function _verificaCRCBUFFCOM *****************
  2858 ;; Defined at:
  2859 ;;		line 483 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  crc             2    3[BANK0 ] unsigned int 
  2864 ;;  CRC_OK          1    2[BANK0 ] unsigned char 
  2865 ;;  crc2            1    1[BANK0 ] unsigned char 
  2866 ;;  crc1            1    0[BANK0 ] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        5 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    2
  2883 ;; This function calls:
  2884 ;;		_crc16
  2885 ;; This function is called by:
  2886 ;;		_maquinaEstado
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text17
  2891  001094                     __ptext17:
  2892                           	opt stack 0
  2893  001094                     _verificaCRCBUFFCOM:
  2894                           	opt stack 27
  2895                           
  2896                           ;main.c: 484: char CRC_OK;
  2897                           ;main.c: 485: unsigned int crc = crc16(BUFFCOM, 5);
  2898                           
  2899                           ;incstack = 0
  2900  001094  0E3A               	movlw	low _BUFFCOM
  2901  001096  6E12               	movwf	crc16@data_p,c
  2902  001098  0E00               	movlw	high _BUFFCOM
  2903  00109A  6E13               	movwf	crc16@data_p+1,c
  2904  00109C  0E00               	movlw	0
  2905  00109E  6E15               	movwf	crc16@length+1,c
  2906  0010A0  0E05               	movlw	5
  2907  0010A2  6E14               	movwf	crc16@length,c
  2908  0010A4  ECE9  F005         	call	_crc16	;wreg free
  2909  0010A8  C012  F063         	movff	?_crc16,verificaCRCBUFFCOM@crc
  2910  0010AC  C013  F064         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  2911                           
  2912                           ;main.c: 486: unsigned char crc1 = crc >> 8;
  2913  0010B0  0100               	movlb	0	; () banked
  2914  0010B2  5164               	movf	(verificaCRCBUFFCOM@crc+1)& (0+255),w,b
  2915  0010B4  0100               	movlb	0	; () banked
  2916  0010B6  6F60               	movwf	verificaCRCBUFFCOM@crc1& (0+255),b
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;main.c: 487: unsigned char crc2 = crc & 0xFF;
  2920  0010B8  C063  F061         	movff	verificaCRCBUFFCOM@crc,verificaCRCBUFFCOM@crc2
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;main.c: 489: if(crc1 == BUFFCOM[5] && BUFFCOM[6] == crc2) CRC_OK = 1;
  2924  0010BC  0100               	movlb	0	; () banked
  2925  0010BE  5160               	movf	verificaCRCBUFFCOM@crc1& (0+255),w,b
  2926  0010C0  183F               	xorwf	_BUFFCOM+5,w,c
  2927  0010C2  A4D8               	btfss	status,2,c
  2928  0010C4  D007               	goto	l2724
  2929                           
  2930                           ; BSR set to: 0
  2931  0010C6  0100               	movlb	0	; () banked
  2932  0010C8  5161               	movf	verificaCRCBUFFCOM@crc2& (0+255),w,b
  2933  0010CA  1840               	xorwf	_BUFFCOM+6,w,c
  2934  0010CC  A4D8               	btfss	status,2,c
  2935  0010CE  D002               	goto	l2724
  2936                           
  2937                           ; BSR set to: 0
  2938  0010D0  0E01               	movlw	1
  2939  0010D2  D001               	goto	L1
  2940  0010D4                     l2724:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;main.c: 490: else CRC_OK = 0;
  2944  0010D4  0E00               	movlw	0
  2945  0010D6                     L1:
  2946  0010D6  0100               	movlb	0	; () banked
  2947  0010D8  6F62               	movwf	verificaCRCBUFFCOM@CRC_OK& (0+255),b
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;main.c: 492: if(CRC_OK == 1) estado = 4;
  2951                           
  2952                           ; BSR set to: 0
  2953  0010DA  0100               	movlb	0	; () banked
  2954  0010DC  0562               	decf	verificaCRCBUFFCOM@CRC_OK& (0+255),w,b
  2955  0010DE  A4D8               	btfss	status,2,c
  2956  0010E0  D003               	goto	l2730
  2957                           
  2958                           ; BSR set to: 0
  2959  0010E2  0E04               	movlw	4
  2960  0010E4  6E31               	movwf	_estado,c
  2961  0010E6  0012               	return	
  2962  0010E8                     l2730:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;main.c: 493: else estado = 5;
  2966  0010E8  0E05               	movlw	5
  2967  0010EA  6E31               	movwf	_estado,c
  2968  0010EC  0012               	return	
  2969  0010EE                     __end_of_verificaCRCBUFFCOM:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           prodh	equ	0xFF4
  2976                           prodl	equ	0xFF3
  2977                           intcon	equ	0xFF2
  2978                           indf0	equ	0xFEF
  2979                           postinc0	equ	0xFEE
  2980                           fsr0h	equ	0xFEA
  2981                           fsr0l	equ	0xFE9
  2982                           wreg	equ	0xFE8
  2983                           postdec1	equ	0xFE5
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           postinc2	equ	0xFDE
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function _tx_data *****************
  2993 ;; Defined at:
  2994 ;;		line 537 in file "main.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  cont            2   17[COMRAM] int 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0
  3009 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3011 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3012 ;;Total ram usage:        2 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_maquinaEstado
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text18
  3023  001460                     __ptext18:
  3024                           	opt stack 0
  3025  001460                     _tx_data:
  3026                           	opt stack 28
  3027                           
  3028                           ;main.c: 538: int cont;
  3029                           ;main.c: 539: for(cont=0;cont<7;cont++){
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;incstack = 0
  3033  001460  0E00               	movlw	0
  3034  001462  6E13               	movwf	tx_data@cont+1,c
  3035  001464  0E00               	movlw	0
  3036  001466  6E12               	movwf	tx_data@cont,c
  3037  001468                     l1576:
  3038  001468  BE13               	btfsc	tx_data@cont+1,7,c
  3039  00146A  D006               	goto	l287
  3040  00146C  5013               	movf	tx_data@cont+1,w,c
  3041  00146E  E111               	bnz	l1586
  3042  001470  0E07               	movlw	7
  3043  001472  5C12               	subwf	tx_data@cont,w,c
  3044  001474  B0D8               	btfsc	status,0,c
  3045  001476  D00D               	goto	l1586
  3046  001478                     l287:
  3047  001478  A89E               	btfss	3998,4,c	;volatile
  3048  00147A  D7FE               	goto	l287
  3049                           
  3050                           ;main.c: 541: TXREG = BUFFRESP[cont];
  3051  00147C  0E33               	movlw	low _BUFFRESP
  3052  00147E  2412               	addwf	tx_data@cont,w,c
  3053  001480  6ED9               	movwf	fsr2l,c
  3054  001482  0E00               	movlw	high _BUFFRESP
  3055  001484  2013               	addwfc	tx_data@cont+1,w,c
  3056  001486  6EDA               	movwf	fsr2h,c
  3057  001488  50DF               	movf	indf2,w,c
  3058  00148A  6EAD               	movwf	4013,c	;volatile
  3059  00148C  4A12               	infsnz	tx_data@cont,f,c
  3060  00148E  2A13               	incf	tx_data@cont+1,f,c
  3061  001490  D7EB               	goto	l1576
  3062  001492                     l1586:
  3063                           
  3064                           ;main.c: 542: }
  3065                           ;main.c: 543: estado = 0;
  3066  001492  0E00               	movlw	0
  3067  001494  6E31               	movwf	_estado,c
  3068  001496  0012               	return		;funcret
  3069  001498                     __end_of_tx_data:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           indf0	equ	0xFEF
  3079                           postinc0	equ	0xFEE
  3080                           fsr0h	equ	0xFEA
  3081                           fsr0l	equ	0xFE9
  3082                           wreg	equ	0xFE8
  3083                           postdec1	equ	0xFE5
  3084                           fsr1l	equ	0xFE1
  3085                           indf2	equ	0xFDF
  3086                           postinc2	equ	0xFDE
  3087                           postdec2	equ	0xFDD
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092 ;; *************** function _trataComando *****************
  3093 ;; Defined at:
  3094 ;;		line 398 in file "main.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  iterator        2    6[BANK0 ] int 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0
  3109 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3110 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3111 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3112 ;;Total ram usage:        4 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		_calculaCRCBUFFRESP
  3117 ;;		_memcpy
  3118 ;; This function is called by:
  3119 ;;		_maquinaEstado
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text19
  3124  000862                     __ptext19:
  3125                           	opt stack 0
  3126  000862                     _trataComando:
  3127                           	opt stack 26
  3128                           
  3129                           ;main.c: 399: int iterator;
  3130                           ;main.c: 401: switch(BUFFCOM[0]){
  3131                           
  3132                           ;incstack = 0
  3133  000862  D0E8               	goto	l2708
  3134  000864                     l2674:
  3135                           
  3136                           ;main.c: 403: memcpy(&BUFFRESP[0], &BUFFCOM[0], sizeof(BUFFCOM[0]));
  3137  000864  0E33               	movlw	low _BUFFRESP
  3138  000866  6E12               	movwf	memcpy@d1,c
  3139  000868  0E00               	movlw	high _BUFFRESP
  3140  00086A  6E13               	movwf	memcpy@d1+1,c
  3141  00086C  0E3A               	movlw	low _BUFFCOM
  3142  00086E  6E14               	movwf	memcpy@s1,c
  3143  000870  0E00               	movlw	high _BUFFCOM
  3144  000872  6E15               	movwf	memcpy@s1+1,c
  3145  000874  5014               	movf	memcpy@s1,w,c
  3146  000876  1015               	iorwf	memcpy@s1+1,w,c
  3147  000878  A4D8               	btfss	status,2,c
  3148  00087A  0E20               	movlw	32
  3149  00087C  6E16               	movwf	memcpy@s1+2,c
  3150  00087E  0E00               	movlw	0
  3151  000880  6E18               	movwf	memcpy@n+1,c
  3152  000882  0E01               	movlw	1
  3153  000884  6E17               	movwf	memcpy@n,c
  3154  000886  ECEB  F007         	call	_memcpy	;wreg free
  3155                           
  3156                           ;main.c: 404: memcpy(&BUFFRESP[1], &BUFFCOM[1], sizeof(BUFFCOM[1]));
  3157  00088A  0E34               	movlw	low (_BUFFRESP+1)
  3158  00088C  6E12               	movwf	memcpy@d1,c
  3159  00088E  0E00               	movlw	high (_BUFFRESP+1)
  3160  000890  6E13               	movwf	memcpy@d1+1,c
  3161  000892  0E3B               	movlw	low (_BUFFCOM+1)
  3162  000894  6E14               	movwf	memcpy@s1,c
  3163  000896  0E00               	movlw	high (_BUFFCOM+1)
  3164  000898  6E15               	movwf	memcpy@s1+1,c
  3165  00089A  5014               	movf	memcpy@s1,w,c
  3166  00089C  1015               	iorwf	memcpy@s1+1,w,c
  3167  00089E  A4D8               	btfss	status,2,c
  3168  0008A0  0E20               	movlw	32
  3169  0008A2  6E16               	movwf	memcpy@s1+2,c
  3170  0008A4  0E00               	movlw	0
  3171  0008A6  6E18               	movwf	memcpy@n+1,c
  3172  0008A8  0E01               	movlw	1
  3173  0008AA  6E17               	movwf	memcpy@n,c
  3174  0008AC  ECEB  F007         	call	_memcpy	;wreg free
  3175                           
  3176                           ;main.c: 405: switch(BUFFCOM[1]){
  3177  0008B0  D04B               	goto	l2680
  3178  0008B2                     l2676:
  3179                           
  3180                           ;main.c: 408: memcpy(&BUFFRESP[2], &versao, sizeof(versao));
  3181  0008B2  0E35               	movlw	low (_BUFFRESP+2)
  3182  0008B4  6E12               	movwf	memcpy@d1,c
  3183  0008B6  0E00               	movlw	high (_BUFFRESP+2)
  3184  0008B8  6E13               	movwf	memcpy@d1+1,c
  3185  0008BA  0E4C               	movlw	low _versao
  3186  0008BC  6E14               	movwf	memcpy@s1,c
  3187  0008BE  0E00               	movlw	high _versao
  3188  0008C0  6E15               	movwf	memcpy@s1+1,c
  3189  0008C2  5014               	movf	memcpy@s1,w,c
  3190  0008C4  1015               	iorwf	memcpy@s1+1,w,c
  3191  0008C6  A4D8               	btfss	status,2,c
  3192  0008C8  0E20               	movlw	32
  3193  0008CA  6E16               	movwf	memcpy@s1+2,c
  3194  0008CC  0E00               	movlw	0
  3195  0008CE  6E18               	movwf	memcpy@n+1,c
  3196  0008D0  0E01               	movlw	1
  3197  0008D2  6E17               	movwf	memcpy@n,c
  3198  0008D4  ECEB  F007         	call	_memcpy	;wreg free
  3199                           
  3200                           ;main.c: 409: memcpy(&BUFFRESP[3], &revisao, sizeof(revisao));
  3201  0008D8  0E36               	movlw	low (_BUFFRESP+3)
  3202  0008DA  6E12               	movwf	memcpy@d1,c
  3203  0008DC  0E00               	movlw	high (_BUFFRESP+3)
  3204  0008DE  6E13               	movwf	memcpy@d1+1,c
  3205  0008E0  0E4B               	movlw	low _revisao
  3206  0008E2  6E14               	movwf	memcpy@s1,c
  3207  0008E4  0E00               	movlw	high _revisao
  3208  0008E6  6E15               	movwf	memcpy@s1+1,c
  3209  0008E8  5014               	movf	memcpy@s1,w,c
  3210  0008EA  1015               	iorwf	memcpy@s1+1,w,c
  3211  0008EC  A4D8               	btfss	status,2,c
  3212  0008EE  0E20               	movlw	32
  3213  0008F0  6E16               	movwf	memcpy@s1+2,c
  3214  0008F2  0E00               	movlw	0
  3215  0008F4  6E18               	movwf	memcpy@n+1,c
  3216  0008F6  0E01               	movlw	1
  3217  0008F8  6E17               	movwf	memcpy@n,c
  3218  0008FA  ECEB  F007         	call	_memcpy	;wreg free
  3219                           
  3220                           ;main.c: 410: memcpy(&BUFFRESP[4], 0x0, sizeof(char));
  3221  0008FE  0E37               	movlw	low (_BUFFRESP+4)
  3222  000900  6E12               	movwf	memcpy@d1,c
  3223  000902  0E00               	movlw	high (_BUFFRESP+4)
  3224  000904  6E13               	movwf	memcpy@d1+1,c
  3225  000906  0E00               	movlw	0
  3226  000908  6E14               	movwf	memcpy@s1,c
  3227  00090A  0E00               	movlw	0
  3228  00090C  6E15               	movwf	memcpy@s1+1,c
  3229  00090E  0E00               	movlw	0
  3230  000910  6E16               	movwf	memcpy@s1+2,c
  3231  000912  0E00               	movlw	0
  3232  000914  6E18               	movwf	memcpy@n+1,c
  3233  000916  0E01               	movlw	1
  3234  000918  6E17               	movwf	memcpy@n,c
  3235  00091A  ECEB  F007         	call	_memcpy	;wreg free
  3236                           
  3237                           ;main.c: 414: break;
  3238  00091E  D091               	goto	l2710
  3239  000920                     l240:
  3240                           
  3241                           ;main.c: 418: BUFFRESP[2] = hora;
  3242  000920  C02E  F035         	movff	_hora,_BUFFRESP+2
  3243                           
  3244                           ;main.c: 419: BUFFRESP[3] = minuto;
  3245  000924  C02D  F036         	movff	_minuto,_BUFFRESP+3
  3246                           
  3247                           ;main.c: 420: BUFFRESP[4] = segundo;
  3248  000928  C02C  F037         	movff	_segundo,_BUFFRESP+4
  3249                           
  3250                           ;main.c: 421: break;
  3251  00092C  D08A               	goto	l2710
  3252  00092E                     l241:
  3253                           
  3254                           ;main.c: 425: BUFFRESP[2] = dia;
  3255  00092E  C049  F035         	movff	_dia,_BUFFRESP+2
  3256                           
  3257                           ;main.c: 426: BUFFRESP[3] = mes;
  3258  000932  C048  F036         	movff	_mes,_BUFFRESP+3
  3259                           
  3260                           ;main.c: 427: BUFFRESP[4] = ano;
  3261  000936  C044  F037         	movff	_ano,_BUFFRESP+4
  3262                           
  3263                           ;main.c: 428: break;
  3264  00093A  D083               	goto	l2710
  3265  00093C                     l242:
  3266                           
  3267                           ;main.c: 432: BUFFRESP[2] = desp_hora;
  3268  00093C  C047  F035         	movff	_desp_hora,_BUFFRESP+2
  3269                           
  3270                           ;main.c: 433: BUFFRESP[3] = desp_min;
  3271  000940  C046  F036         	movff	_desp_min,_BUFFRESP+3
  3272                           
  3273                           ;main.c: 434: BUFFRESP[4] = 0xFF;
  3274  000944  6837               	setf	_BUFFRESP+4,c
  3275                           
  3276                           ;main.c: 439: }
  3277                           
  3278                           ;main.c: 438: break;
  3279                           
  3280                           ;main.c: 437: default:
  3281                           
  3282                           ;main.c: 435: break;
  3283  000946  D07D               	goto	l2710
  3284  000948                     l2680:
  3285  000948  503B               	movf	_BUFFCOM+1,w,c
  3286                           
  3287                           ; Switch size 1, requested type "space"
  3288                           ; Number of cases is 4, Range of values is 48 to 51
  3289                           ; switch strategies available:
  3290                           ; Name         Instructions Cycles
  3291                           ; simple_byte           13     7 (average)
  3292                           ;	Chosen strategy is simple_byte
  3293  00094A  0A30               	xorlw	48	; case 48
  3294  00094C  B4D8               	btfsc	status,2,c
  3295  00094E  D7B1               	goto	l2676
  3296  000950  0A01               	xorlw	1	; case 49
  3297  000952  B4D8               	btfsc	status,2,c
  3298  000954  D7E5               	goto	l240
  3299  000956  0A03               	xorlw	3	; case 50
  3300  000958  B4D8               	btfsc	status,2,c
  3301  00095A  D7E9               	goto	l241
  3302  00095C  0A01               	xorlw	1	; case 51
  3303  00095E  B4D8               	btfsc	status,2,c
  3304  000960  D7ED               	goto	l242
  3305                           
  3306                           ;main.c: 440: break;
  3307  000962  D06F               	goto	l2710
  3308  000964                     l2682:
  3309                           
  3310                           ;main.c: 443: for(iterator = 0; iterator < 5; iterator++){
  3311  000964  0E00               	movlw	0
  3312  000966  0100               	movlb	0	; () banked
  3313  000968  6F67               	movwf	(trataComando@iterator+1)& (0+255),b
  3314  00096A  0E00               	movlw	0
  3315  00096C  6F66               	movwf	trataComando@iterator& (0+255),b
  3316  00096E                     l2684:
  3317                           
  3318                           ; BSR set to: 0
  3319  00096E  0100               	movlb	0	; () banked
  3320  000970  BF67               	btfsc	(trataComando@iterator+1)& (0+255),7,b
  3321  000972  D008               	goto	l2688
  3322  000974  0100               	movlb	0	; () banked
  3323  000976  5167               	movf	(trataComando@iterator+1)& (0+255),w,b
  3324  000978  E14F               	bnz	l2704
  3325  00097A  0E05               	movlw	5
  3326  00097C  0100               	movlb	0	; () banked
  3327  00097E  5D66               	subwf	trataComando@iterator& (0+255),w,b
  3328  000980  B0D8               	btfsc	status,0,c
  3329  000982  D04A               	goto	l2704
  3330  000984                     l2688:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;main.c: 444: memcpy(&BUFFRESP[iterator], &BUFFCOM[iterator], sizeof(BUFFCOM[iterator]))
      +                          ;
  3334  000984  0E33               	movlw	low _BUFFRESP
  3335  000986  0100               	movlb	0	; () banked
  3336  000988  2566               	addwf	trataComando@iterator& (0+255),w,b
  3337  00098A  6E12               	movwf	memcpy@d1,c
  3338  00098C  0E00               	movlw	high _BUFFRESP
  3339  00098E  0100               	movlb	0	; () banked
  3340  000990  2167               	addwfc	(trataComando@iterator+1)& (0+255),w,b
  3341  000992  6E13               	movwf	memcpy@d1+1,c
  3342  000994  0E3A               	movlw	low _BUFFCOM
  3343  000996  0100               	movlb	0	; () banked
  3344  000998  2566               	addwf	trataComando@iterator& (0+255),w,b
  3345  00099A  0100               	movlb	0	; () banked
  3346  00099C  6F64               	movwf	??_trataComando& (0+255),b
  3347  00099E  0E00               	movlw	high _BUFFCOM
  3348  0009A0  0100               	movlb	0	; () banked
  3349  0009A2  2167               	addwfc	(trataComando@iterator+1)& (0+255),w,b
  3350  0009A4  0100               	movlb	0	; () banked
  3351  0009A6  6F65               	movwf	(??_trataComando+1)& (0+255),b
  3352  0009A8  C064  F014         	movff	??_trataComando,memcpy@s1
  3353  0009AC  C065  F015         	movff	??_trataComando+1,memcpy@s1+1
  3354  0009B0  5014               	movf	memcpy@s1,w,c
  3355  0009B2  1015               	iorwf	memcpy@s1+1,w,c
  3356  0009B4  A4D8               	btfss	status,2,c
  3357  0009B6  0E20               	movlw	32
  3358  0009B8  6E16               	movwf	memcpy@s1+2,c
  3359  0009BA  0E00               	movlw	0
  3360  0009BC  6E18               	movwf	memcpy@n+1,c
  3361  0009BE  0E01               	movlw	1
  3362  0009C0  6E17               	movwf	memcpy@n,c
  3363  0009C2  ECEB  F007         	call	_memcpy	;wreg free
  3364  0009C6  0100               	movlb	0	; () banked
  3365  0009C8  4B66               	infsnz	trataComando@iterator& (0+255),f,b
  3366  0009CA  2B67               	incf	(trataComando@iterator+1)& (0+255),f,b
  3367  0009CC  D7D0               	goto	l2684
  3368  0009CE                     l2694:
  3369                           
  3370                           ;main.c: 450: versao = BUFFCOM[2]-48;
  3371  0009CE  503C               	movf	_BUFFCOM+2,w,c
  3372  0009D0  0FD0               	addlw	208
  3373  0009D2  6E4C               	movwf	_versao,c
  3374                           
  3375                           ;main.c: 451: revisao = BUFFCOM[3]-48;
  3376  0009D4  503D               	movf	_BUFFCOM+3,w,c
  3377  0009D6  0FD0               	addlw	208
  3378  0009D8  6E4B               	movwf	_revisao,c
  3379                           
  3380                           ;main.c: 452: break;
  3381  0009DA  D033               	goto	l2710
  3382  0009DC                     l2696:
  3383                           
  3384                           ;main.c: 456: hora = (BUFFCOM[2]-48);
  3385  0009DC  503C               	movf	_BUFFCOM+2,w,c
  3386  0009DE  0FD0               	addlw	208
  3387  0009E0  6E2E               	movwf	_hora,c
  3388                           
  3389                           ;main.c: 457: minuto = (BUFFCOM[3]-48);
  3390  0009E2  503D               	movf	_BUFFCOM+3,w,c
  3391  0009E4  0FD0               	addlw	208
  3392  0009E6  6E2D               	movwf	_minuto,c
  3393                           
  3394                           ;main.c: 458: segundo = (BUFFCOM[4]-48);
  3395  0009E8  503E               	movf	_BUFFCOM+4,w,c
  3396  0009EA  0FD0               	addlw	208
  3397  0009EC  6E2C               	movwf	_segundo,c
  3398                           
  3399                           ;main.c: 459: break;
  3400  0009EE  D029               	goto	l2710
  3401  0009F0                     l2698:
  3402                           
  3403                           ;main.c: 463: dia = BUFFCOM[2]-48;
  3404  0009F0  503C               	movf	_BUFFCOM+2,w,c
  3405  0009F2  0FD0               	addlw	208
  3406  0009F4  6E49               	movwf	_dia,c
  3407                           
  3408                           ;main.c: 464: mes = BUFFCOM[3]-48;
  3409  0009F6  503D               	movf	_BUFFCOM+3,w,c
  3410  0009F8  0FD0               	addlw	208
  3411  0009FA  6E48               	movwf	_mes,c
  3412                           
  3413                           ;main.c: 465: ano = BUFFCOM[4]-48;
  3414  0009FC  0ED0               	movlw	208
  3415  0009FE  243E               	addwf	_BUFFCOM+4,w,c
  3416  000A00  6E44               	movwf	_ano,c
  3417  000A02  6A45               	clrf	_ano+1,c
  3418  000A04  0EFF               	movlw	255
  3419  000A06  2245               	addwfc	_ano+1,f,c
  3420                           
  3421                           ;main.c: 466: break;
  3422  000A08  D01C               	goto	l2710
  3423  000A0A                     l2700:
  3424                           
  3425                           ;main.c: 470: desp_hora = BUFFCOM[2]-48;
  3426  000A0A  503C               	movf	_BUFFCOM+2,w,c
  3427  000A0C  0FD0               	addlw	208
  3428  000A0E  6E47               	movwf	_desp_hora,c
  3429                           
  3430                           ;main.c: 471: desp_min = BUFFCOM[3]-48;
  3431  000A10  503D               	movf	_BUFFCOM+3,w,c
  3432  000A12  0FD0               	addlw	208
  3433  000A14  6E46               	movwf	_desp_min,c
  3434                           
  3435                           ;main.c: 475: }
  3436                           
  3437                           ;main.c: 474: break;
  3438                           
  3439                           ;main.c: 473: default:
  3440  000A16  D015               	goto	l2710
  3441  000A18                     l2704:
  3442  000A18  503B               	movf	_BUFFCOM+1,w,c
  3443                           
  3444                           ; Switch size 1, requested type "space"
  3445                           ; Number of cases is 4, Range of values is 48 to 51
  3446                           ; switch strategies available:
  3447                           ; Name         Instructions Cycles
  3448                           ; simple_byte           13     7 (average)
  3449                           ;	Chosen strategy is simple_byte
  3450  000A1A  0A30               	xorlw	48	; case 48
  3451  000A1C  B4D8               	btfsc	status,2,c
  3452  000A1E  D7D7               	goto	l2694
  3453  000A20  0A01               	xorlw	1	; case 49
  3454  000A22  B4D8               	btfsc	status,2,c
  3455  000A24  D7DB               	goto	l2696
  3456  000A26  0A03               	xorlw	3	; case 50
  3457  000A28  B4D8               	btfsc	status,2,c
  3458  000A2A  D7E2               	goto	l2698
  3459  000A2C  0A01               	xorlw	1	; case 51
  3460  000A2E  B4D8               	btfsc	status,2,c
  3461  000A30  D7EC               	goto	l2700
  3462                           
  3463                           ;main.c: 477: }
  3464                           
  3465                           ;main.c: 476: break;
  3466  000A32  D007               	goto	l2710
  3467  000A34                     l2708:
  3468  000A34  503A               	movf	_BUFFCOM,w,c
  3469                           
  3470                           ; Switch size 1, requested type "space"
  3471                           ; Number of cases is 2, Range of values is 49 to 50
  3472                           ; switch strategies available:
  3473                           ; Name         Instructions Cycles
  3474                           ; simple_byte            7     4 (average)
  3475                           ;	Chosen strategy is simple_byte
  3476  000A36  0A31               	xorlw	49	; case 49
  3477  000A38  B4D8               	btfsc	status,2,c
  3478  000A3A  D714               	goto	l2674
  3479  000A3C  0A03               	xorlw	3	; case 50
  3480  000A3E  B4D8               	btfsc	status,2,c
  3481  000A40  D791               	goto	l2682
  3482  000A42                     l2710:
  3483                           
  3484                           ;main.c: 478: calculaCRCBUFFRESP();
  3485  000A42  ECF7  F006         	call	_calculaCRCBUFFRESP	;wreg free
  3486  000A46  0012               	return		;funcret
  3487  000A48                     __end_of_trataComando:
  3488                           	opt stack 0
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           prodh	equ	0xFF4
  3494                           prodl	equ	0xFF3
  3495                           intcon	equ	0xFF2
  3496                           indf0	equ	0xFEF
  3497                           postinc0	equ	0xFEE
  3498                           fsr0h	equ	0xFEA
  3499                           fsr0l	equ	0xFE9
  3500                           wreg	equ	0xFE8
  3501                           postdec1	equ	0xFE5
  3502                           fsr1l	equ	0xFE1
  3503                           indf2	equ	0xFDF
  3504                           postinc2	equ	0xFDE
  3505                           postdec2	equ	0xFDD
  3506                           fsr2h	equ	0xFDA
  3507                           fsr2l	equ	0xFD9
  3508                           status	equ	0xFD8
  3509                           
  3510 ;; *************** function _calculaCRCBUFFRESP *****************
  3511 ;; Defined at:
  3512 ;;		line 389 in file "main.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  crc             2    2[BANK0 ] unsigned int 
  3517 ;;  crc2            1    1[BANK0 ] unsigned char 
  3518 ;;  crc1            1    0[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0
  3529 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3530 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3531 ;;      Totals:         3       4       0       0       0       0       0       0       0
  3532 ;;Total ram usage:        7 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    2
  3535 ;; This function calls:
  3536 ;;		_crc16
  3537 ;;		_memcpy
  3538 ;; This function is called by:
  3539 ;;		_trataComando
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text20
  3544  000DEE                     __ptext20:
  3545                           	opt stack 0
  3546  000DEE                     _calculaCRCBUFFRESP:
  3547                           	opt stack 26
  3548                           
  3549                           ;main.c: 390: unsigned int crc = crc16(BUFFCOM, 5);
  3550                           
  3551                           ;incstack = 0
  3552  000DEE  0E3A               	movlw	low _BUFFCOM
  3553  000DF0  6E12               	movwf	crc16@data_p,c
  3554  000DF2  0E00               	movlw	high _BUFFCOM
  3555  000DF4  6E13               	movwf	crc16@data_p+1,c
  3556  000DF6  0E00               	movlw	0
  3557  000DF8  6E15               	movwf	crc16@length+1,c
  3558  000DFA  0E05               	movlw	5
  3559  000DFC  6E14               	movwf	crc16@length,c
  3560  000DFE  ECE9  F005         	call	_crc16	;wreg free
  3561  000E02  C012  F062         	movff	?_crc16,calculaCRCBUFFRESP@crc
  3562  000E06  C013  F063         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  3563                           
  3564                           ;main.c: 391: unsigned char crc1 = crc >> 8;
  3565  000E0A  0100               	movlb	0	; () banked
  3566  000E0C  5163               	movf	(calculaCRCBUFFRESP@crc+1)& (0+255),w,b
  3567  000E0E  0100               	movlb	0	; () banked
  3568  000E10  6F60               	movwf	calculaCRCBUFFRESP@crc1& (0+255),b
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;main.c: 392: unsigned char crc2 = crc & 0xFF;
  3572  000E12  C062  F061         	movff	calculaCRCBUFFRESP@crc,calculaCRCBUFFRESP@crc2
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;main.c: 393: memcpy(&BUFFCOM[5], crc1, sizeof(BUFFCOM[5]));
  3576  000E16  0E3F               	movlw	low (_BUFFCOM+5)
  3577  000E18  6E12               	movwf	memcpy@d1,c
  3578  000E1A  0E00               	movlw	high (_BUFFCOM+5)
  3579  000E1C  6E13               	movwf	memcpy@d1+1,c
  3580  000E1E  0100               	movlb	0	; () banked
  3581  000E20  5160               	movf	calculaCRCBUFFRESP@crc1& (0+255),w,b
  3582  000E22  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3583  000E24  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3584  000E26  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3585  000E28  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3586  000E2C  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3587  000E30  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3588  000E34  0E00               	movlw	0
  3589  000E36  6E18               	movwf	memcpy@n+1,c
  3590  000E38  0E01               	movlw	1
  3591  000E3A  6E17               	movwf	memcpy@n,c
  3592  000E3C  ECEB  F007         	call	_memcpy	;wreg free
  3593                           
  3594                           ;main.c: 394: memcpy(&BUFFCOM[6], crc2, sizeof(BUFFCOM[6]));
  3595  000E40  0E40               	movlw	low (_BUFFCOM+6)
  3596  000E42  6E12               	movwf	memcpy@d1,c
  3597  000E44  0E00               	movlw	high (_BUFFCOM+6)
  3598  000E46  6E13               	movwf	memcpy@d1+1,c
  3599  000E48  0100               	movlb	0	; () banked
  3600  000E4A  5161               	movf	calculaCRCBUFFRESP@crc2& (0+255),w,b
  3601  000E4C  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3602  000E4E  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3603  000E50  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3604  000E52  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3605  000E56  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3606  000E5A  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3607  000E5E  0E00               	movlw	0
  3608  000E60  6E18               	movwf	memcpy@n+1,c
  3609  000E62  0E01               	movlw	1
  3610  000E64  6E17               	movwf	memcpy@n,c
  3611  000E66  ECEB  F007         	call	_memcpy	;wreg free
  3612                           
  3613                           ;main.c: 395: estado = 3;
  3614  000E6A  0E03               	movlw	3
  3615  000E6C  6E31               	movwf	_estado,c
  3616  000E6E  0012               	return		;funcret
  3617  000E70                     __end_of_calculaCRCBUFFRESP:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           indf0	equ	0xFEF
  3627                           postinc0	equ	0xFEE
  3628                           fsr0h	equ	0xFEA
  3629                           fsr0l	equ	0xFE9
  3630                           wreg	equ	0xFE8
  3631                           postdec1	equ	0xFE5
  3632                           fsr1l	equ	0xFE1
  3633                           indf2	equ	0xFDF
  3634                           postinc2	equ	0xFDE
  3635                           postdec2	equ	0xFDD
  3636                           fsr2h	equ	0xFDA
  3637                           fsr2l	equ	0xFD9
  3638                           status	equ	0xFD8
  3639                           
  3640 ;; *************** function _memcpy *****************
  3641 ;; Defined at:
  3642 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  d1              2   17[COMRAM] PTR void 
  3645 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3646 ;;  s1              3   19[COMRAM] PTR const void 
  3647 ;;		 -> ROM(32767), BUFFCOM(7), revisao(1), versao(1), 
  3648 ;;  n               2   22[COMRAM] unsigned int 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  s               3   24[COMRAM] PTR const unsigned char 
  3651 ;;		 -> ROM(32767), BUFFCOM(7), revisao(1), versao(1), 
  3652 ;;  d               2   27[COMRAM] PTR unsigned char 
  3653 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  2   17[COMRAM] PTR void 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3663 ;;      Params:         7       0       0       0       0       0       0       0       0
  3664 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3666 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3667 ;;Total ram usage:       12 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_calculaCRCBUFFRESP
  3674 ;;		_trataComando
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text21
  3679  000FD6                     __ptext21:
  3680                           	opt stack 0
  3681  000FD6                     _memcpy:
  3682                           	opt stack 27
  3683                           
  3684                           ;incstack = 0
  3685  000FD6  C014  F019         	movff	memcpy@s1,memcpy@s
  3686  000FDA  C015  F01A         	movff	memcpy@s1+1,memcpy@s+1
  3687  000FDE  C016  F01B         	movff	memcpy@s1+2,memcpy@s+2
  3688  000FE2  C012  F01C         	movff	memcpy@d1,memcpy@d
  3689  000FE6  C013  F01D         	movff	memcpy@d1+1,memcpy@d+1
  3690  000FEA  D01D               	goto	l2558
  3691  000FEC                     l2552:
  3692  000FEC  C019  FFF6         	movff	memcpy@s,tblptrl
  3693  000FF0  C01A  FFF7         	movff	memcpy@s+1,tblptrh
  3694  000FF4  C01B  FFF8         	movff	memcpy@s+2,tblptru
  3695  000FF8  C01C  FFD9         	movff	memcpy@d,fsr2l
  3696  000FFC  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  3697  001000  BAF8               	btfsc	tblptru,5,c
  3698  001002  D003               	bra	u1587
  3699  001004  0008               	tblrd		*
  3700  001006  50F5               	movf	tablat,w,c
  3701  001008  D005               	bra	u1580
  3702  00100A                     u1587:
  3703  00100A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3704  00100E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3705  001012  50EF               	movf	indf0,w,c
  3706  001014                     u1580:
  3707  001014  6EDF               	movwf	indf2,c
  3708  001016  0E01               	movlw	1
  3709  001018  2619               	addwf	memcpy@s,f,c
  3710  00101A  0E00               	movlw	0
  3711  00101C  221A               	addwfc	memcpy@s+1,f,c
  3712  00101E  0E00               	movlw	0
  3713  001020  221B               	addwfc	memcpy@s+2,f,c
  3714  001022  4A1C               	infsnz	memcpy@d,f,c
  3715  001024  2A1D               	incf	memcpy@d+1,f,c
  3716  001026                     l2558:
  3717  001026  0617               	decf	memcpy@n,f,c
  3718  001028  A0D8               	btfss	status,0,c
  3719  00102A  0618               	decf	memcpy@n+1,f,c
  3720  00102C  2817               	incf	memcpy@n,w,c
  3721  00102E  E1DE               	bnz	l2552
  3722  001030  2818               	incf	memcpy@n+1,w,c
  3723  001032  B4D8               	btfsc	status,2,c
  3724  001034  0012               	return	
  3725  001036  D7DA               	goto	l2552
  3726  001038                     __end_of_memcpy:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           indf0	equ	0xFEF
  3736                           postinc0	equ	0xFEE
  3737                           fsr0h	equ	0xFEA
  3738                           fsr0l	equ	0xFE9
  3739                           wreg	equ	0xFE8
  3740                           postdec1	equ	0xFE5
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           postinc2	equ	0xFDE
  3744                           postdec2	equ	0xFDD
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _crc16 *****************
  3750 ;; Defined at:
  3751 ;;		line 368 in file "main.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  data_p          2   17[COMRAM] PTR unsigned char 
  3754 ;;		 -> BUFFCOM(7), 
  3755 ;;  length          2   19[COMRAM] unsigned short 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  crc             2   28[COMRAM] unsigned int 
  3758 ;;  data            2   26[COMRAM] unsigned int 
  3759 ;;  i               1   25[COMRAM] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2   17[COMRAM] unsigned short 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3769 ;;      Params:         4       0       0       0       0       0       0       0       0
  3770 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3772 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3773 ;;Total ram usage:       13 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_calculaCRCBUFFRESP
  3780 ;;		_verificaCRCBUFFCOM
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text22
  3785  000BD2                     __ptext22:
  3786                           	opt stack 0
  3787  000BD2                     _crc16:
  3788                           	opt stack 27
  3789                           
  3790                           ;main.c: 369: unsigned char i;
  3791                           ;main.c: 370: unsigned int data;
  3792                           ;main.c: 371: unsigned int crc = 0xffff;
  3793                           
  3794                           ;incstack = 0
  3795  000BD2  681D               	setf	crc16@crc,c
  3796  000BD4  681E               	setf	crc16@crc+1,c
  3797                           
  3798                           ;main.c: 372: if (length == 0)
  3799  000BD6  5014               	movf	crc16@length,w,c
  3800  000BD8  1015               	iorwf	crc16@length+1,w,c
  3801  000BDA  A4D8               	btfss	status,2,c
  3802  000BDC  D005               	goto	l2520
  3803                           
  3804                           ;main.c: 373: return (~crc);
  3805  000BDE  1C1D               	comf	crc16@crc,w,c
  3806  000BE0  6E12               	movwf	?_crc16,c
  3807  000BE2  1C1E               	comf	crc16@crc+1,w,c
  3808  000BE4  6E13               	movwf	?_crc16+1,c
  3809  000BE6  0012               	return	
  3810  000BE8                     l2520:
  3811                           
  3812                           ;main.c: 375: for (i=0, data=(unsigned int)0xff & *data_p++; i < 8; i++, data >>= 1){
  3813  000BE8  0E00               	movlw	0
  3814  000BEA  6E1A               	movwf	crc16@i,c
  3815  000BEC  C012  FFD9         	movff	crc16@data_p,fsr2l
  3816  000BF0  C013  FFDA         	movff	crc16@data_p+1,fsr2h
  3817  000BF4  50DF               	movf	indf2,w,c
  3818  000BF6  6E16               	movwf	??_crc16& (0+255),c
  3819  000BF8  5016               	movf	??_crc16,w,c
  3820  000BFA  6E1B               	movwf	crc16@data,c
  3821  000BFC  6A1C               	clrf	crc16@data+1,c
  3822  000BFE  4A12               	infsnz	crc16@data_p,f,c
  3823  000C00  2A13               	incf	crc16@data_p+1,f,c
  3824  000C02                     l2526:
  3825  000C02  0E07               	movlw	7
  3826  000C04  641A               	cpfsgt	crc16@i,c
  3827  000C06  D001               	goto	l2530
  3828  000C08  D028               	goto	l2538
  3829  000C0A                     l2530:
  3830                           
  3831                           ;main.c: 376: if ((crc & 0x0001) ^ (data & 0x0001))
  3832  000C0A  0E01               	movlw	1
  3833  000C0C  141B               	andwf	crc16@data,w,c
  3834  000C0E  6E16               	movwf	??_crc16& (0+255),c
  3835  000C10  0E00               	movlw	0
  3836  000C12  141C               	andwf	crc16@data+1,w,c
  3837  000C14  6E17               	movwf	(??_crc16+1)& (0+255),c
  3838  000C16  0E01               	movlw	1
  3839  000C18  141D               	andwf	crc16@crc,w,c
  3840  000C1A  6E18               	movwf	(??_crc16+2)& (0+255),c
  3841  000C1C  0E00               	movlw	0
  3842  000C1E  141E               	andwf	crc16@crc+1,w,c
  3843  000C20  6E19               	movwf	(??_crc16+3)& (0+255),c
  3844  000C22  5016               	movf	??_crc16,w,c
  3845  000C24  1A18               	xorwf	??_crc16+2,f,c
  3846  000C26  5017               	movf	??_crc16+1,w,c
  3847  000C28  1A19               	xorwf	??_crc16+3,f,c
  3848  000C2A  5018               	movf	??_crc16+2,w,c
  3849  000C2C  1019               	iorwf	??_crc16+3,w,c
  3850  000C2E  B4D8               	btfsc	status,2,c
  3851  000C30  D00C               	goto	l2534
  3852                           
  3853                           ;main.c: 377: crc = (crc >> 1) ^ 0x8408;
  3854  000C32  90D8               	bcf	status,0,c
  3855  000C34  301E               	rrcf	crc16@crc+1,w,c
  3856  000C36  6E17               	movwf	(??_crc16+1)& (0+255),c
  3857  000C38  301D               	rrcf	crc16@crc,w,c
  3858  000C3A  6E16               	movwf	??_crc16& (0+255),c
  3859  000C3C  0E08               	movlw	8
  3860  000C3E  1816               	xorwf	??_crc16,w,c
  3861  000C40  6E1D               	movwf	crc16@crc,c
  3862  000C42  0E84               	movlw	132
  3863  000C44  1817               	xorwf	??_crc16+1,w,c
  3864  000C46  6E1E               	movwf	crc16@crc+1,c
  3865  000C48  D003               	goto	l228
  3866  000C4A                     l2534:
  3867                           
  3868                           ;main.c: 378: else crc >>= 1;
  3869  000C4A  90D8               	bcf	status,0,c
  3870  000C4C  321E               	rrcf	crc16@crc+1,f,c
  3871  000C4E  321D               	rrcf	crc16@crc,f,c
  3872  000C50                     l228:
  3873  000C50  2A1A               	incf	crc16@i,f,c
  3874  000C52  90D8               	bcf	status,0,c
  3875  000C54  321C               	rrcf	crc16@data+1,f,c
  3876  000C56  321B               	rrcf	crc16@data,f,c
  3877  000C58  D7D4               	goto	l2526
  3878  000C5A                     l2538:
  3879                           
  3880                           ;main.c: 379: }
  3881                           ;main.c: 380: } while (--length);
  3882  000C5A  0614               	decf	crc16@length,f,c
  3883  000C5C  A0D8               	btfss	status,0,c
  3884  000C5E  0615               	decf	crc16@length+1,f,c
  3885  000C60  5014               	movf	crc16@length,w,c
  3886  000C62  1015               	iorwf	crc16@length+1,w,c
  3887  000C64  A4D8               	btfss	status,2,c
  3888  000C66  D7C0               	goto	l2520
  3889                           
  3890                           ;main.c: 382: crc = ~crc;
  3891  000C68  1E1D               	comf	crc16@crc,f,c
  3892  000C6A  1E1E               	comf	crc16@crc+1,f,c
  3893                           
  3894                           ;main.c: 383: data = crc;
  3895  000C6C  C01D  F01B         	movff	crc16@crc,crc16@data
  3896  000C70  C01E  F01C         	movff	crc16@crc+1,crc16@data+1
  3897                           
  3898                           ;main.c: 384: crc = (crc << 8) | (data >> 8 & 0xff);
  3899  000C74  C01B  F016         	movff	crc16@data,??_crc16
  3900  000C78  C01C  F017         	movff	crc16@data+1,??_crc16+1
  3901  000C7C  C017  F016         	movff	??_crc16+1,??_crc16
  3902  000C80  6A17               	clrf	??_crc16+1,c
  3903  000C82  5016               	movf	??_crc16,w,c
  3904  000C84  C01D  F018         	movff	crc16@crc,??_crc16+2
  3905  000C88  C01E  F019         	movff	crc16@crc+1,??_crc16+3
  3906  000C8C  C018  F019         	movff	??_crc16+2,??_crc16+3
  3907  000C90  6A18               	clrf	??_crc16+2,c
  3908  000C92  1018               	iorwf	??_crc16+2,w,c
  3909  000C94  6E1D               	movwf	crc16@crc,c
  3910  000C96  5019               	movf	??_crc16+3,w,c
  3911  000C98  6E1E               	movwf	crc16@crc+1,c
  3912                           
  3913                           ;main.c: 385: return (crc);
  3914  000C9A  C01D  F012         	movff	crc16@crc,?_crc16
  3915  000C9E  C01E  F013         	movff	crc16@crc+1,?_crc16+1
  3916  000CA2  0012               	return	
  3917  000CA4                     __end_of_crc16:
  3918                           	opt stack 0
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           intcon	equ	0xFF2
  3926                           indf0	equ	0xFEF
  3927                           postinc0	equ	0xFEE
  3928                           fsr0h	equ	0xFEA
  3929                           fsr0l	equ	0xFE9
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           postdec2	equ	0xFDD
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function _enviaByte *****************
  3941 ;; Defined at:
  3942 ;;		line 525 in file "main.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  BYTE            1    wreg     unsigned char 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  BYTE            1   17[COMRAM] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0
  3957 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3959 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        1 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    1
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_maquinaEstado
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text23
  3971  00152E                     __ptext23:
  3972                           	opt stack 0
  3973  00152E                     _enviaByte:
  3974                           	opt stack 28
  3975                           
  3976                           ;incstack = 0
  3977                           ;enviaByte@BYTE stored from wreg
  3978  00152E  6E12               	movwf	enviaByte@BYTE,c
  3979  001530                     l277:
  3980  001530  A89E               	btfss	3998,4,c	;volatile
  3981  001532  D7FE               	goto	l277
  3982                           
  3983                           ;main.c: 527: TXREG = BYTE;
  3984  001534  C012  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  3985                           
  3986                           ;main.c: 529: if(BYTE==0x05)
  3987  001538  0E05               	movlw	5
  3988  00153A  1812               	xorwf	enviaByte@BYTE,w,c
  3989  00153C  A4D8               	btfss	status,2,c
  3990  00153E  D003               	goto	l1596
  3991                           
  3992                           ;main.c: 530: estado = 2;
  3993  001540  0E02               	movlw	2
  3994  001542  6E31               	movwf	_estado,c
  3995  001544  0012               	return	
  3996  001546                     l1596:
  3997                           
  3998                           ;main.c: 531: else
  3999                           ;main.c: 532: estado = 0;
  4000  001546  0E00               	movlw	0
  4001  001548  6E31               	movwf	_estado,c
  4002  00154A  0012               	return	
  4003  00154C                     __end_of_enviaByte:
  4004                           	opt stack 0
  4005                           tblptru	equ	0xFF8
  4006                           tblptrh	equ	0xFF7
  4007                           tblptrl	equ	0xFF6
  4008                           tablat	equ	0xFF5
  4009                           prodh	equ	0xFF4
  4010                           prodl	equ	0xFF3
  4011                           intcon	equ	0xFF2
  4012                           indf0	equ	0xFEF
  4013                           postinc0	equ	0xFEE
  4014                           fsr0h	equ	0xFEA
  4015                           fsr0l	equ	0xFE9
  4016                           wreg	equ	0xFE8
  4017                           postdec1	equ	0xFE5
  4018                           fsr1l	equ	0xFE1
  4019                           indf2	equ	0xFDF
  4020                           postinc2	equ	0xFDE
  4021                           postdec2	equ	0xFDD
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function _init_XLCD *****************
  4027 ;; Defined at:
  4028 ;;		line 251 in file "main.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    5
  4049 ;; This function calls:
  4050 ;;		_BusyXLCD
  4051 ;;		_OpenXLCD
  4052 ;;		_WriteCmdXLCD
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text24
  4059  00154C                     __ptext24:
  4060                           	opt stack 0
  4061  00154C                     _init_XLCD:
  4062                           	opt stack 25
  4063                           
  4064                           ;main.c: 252: OpenXLCD(0b00101100&0b00111000);
  4065                           
  4066                           ;incstack = 0
  4067  00154C  0E28               	movlw	40
  4068  00154E  ECA5  F006         	call	_OpenXLCD
  4069  001552                     l2344:
  4070  001552  EC13  F00A         	call	_BusyXLCD	;wreg free
  4071  001556  0900               	iorlw	0
  4072  001558  A4D8               	btfss	status,2,c
  4073  00155A  D7FB               	goto	l2344
  4074                           
  4075                           ;main.c: 254: WriteCmdXLCD(0x06);
  4076  00155C  0E06               	movlw	6
  4077  00155E  ECF4  F009         	call	_WriteCmdXLCD
  4078                           
  4079                           ;main.c: 255: WriteCmdXLCD(0x0C);
  4080  001562  0E0C               	movlw	12
  4081  001564  ECF4  F009         	call	_WriteCmdXLCD
  4082  001568  0012               	return		;funcret
  4083  00156A                     __end_of_init_XLCD:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           indf0	equ	0xFEF
  4093                           postinc0	equ	0xFEE
  4094                           fsr0h	equ	0xFEA
  4095                           fsr0l	equ	0xFE9
  4096                           wreg	equ	0xFE8
  4097                           postdec1	equ	0xFE5
  4098                           fsr1l	equ	0xFE1
  4099                           indf2	equ	0xFDF
  4100                           postinc2	equ	0xFDE
  4101                           postdec2	equ	0xFDD
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8
  4105                           
  4106 ;; *************** function _OpenXLCD *****************
  4107 ;; Defined at:
  4108 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  lcdtype         1    wreg     unsigned char 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  lcdtype         1   22[COMRAM] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0
  4123 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4125 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4126 ;;Total ram usage:        1 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    4
  4129 ;; This function calls:
  4130 ;;		_BusyXLCD
  4131 ;;		_Delay10KTCYx
  4132 ;;		_DelayPORXLCD
  4133 ;;		_SetDDRamAddr
  4134 ;;		_WriteCmdXLCD
  4135 ;; This function is called by:
  4136 ;;		_init_XLCD
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text25
  4141  000D4A                     __ptext25:
  4142                           	opt stack 0
  4143  000D4A                     _OpenXLCD:
  4144                           	opt stack 25
  4145                           
  4146                           ;incstack = 0
  4147                           ;OpenXLCD@lcdtype stored from wreg
  4148  000D4A  6E17               	movwf	OpenXLCD@lcdtype,c
  4149  000D4C  0EF0               	movlw	240
  4150  000D4E  1681               	andwf	3969,f,c	;volatile
  4151  000D50  0EF0               	movlw	240
  4152  000D52  1693               	andwf	3987,f,c	;volatile
  4153  000D54  9C93               	bcf	3987,6,c	;volatile
  4154  000D56  9A93               	bcf	3987,5,c	;volatile
  4155  000D58  9893               	bcf	3987,4,c	;volatile
  4156  000D5A  9C8A               	bcf	3978,6,c	;volatile
  4157  000D5C  9A8A               	bcf	3978,5,c	;volatile
  4158  000D5E  988A               	bcf	3978,4,c	;volatile
  4159  000D60  ECD6  F00A         	call	_DelayPORXLCD	;wreg free
  4160  000D64  0E30               	movlw	48
  4161  000D66  ECF4  F009         	call	_WriteCmdXLCD
  4162  000D6A  0E05               	movlw	5
  4163  000D6C  ECB5  F00A         	call	_Delay10KTCYx
  4164  000D70  0E30               	movlw	48
  4165  000D72  ECF4  F009         	call	_WriteCmdXLCD
  4166  000D76  0E01               	movlw	1
  4167  000D78  ECB5  F00A         	call	_Delay10KTCYx
  4168  000D7C  0E32               	movlw	50
  4169  000D7E  ECF4  F009         	call	_WriteCmdXLCD
  4170  000D82                     l2222:
  4171  000D82  EC13  F00A         	call	_BusyXLCD	;wreg free
  4172  000D86  0900               	iorlw	0
  4173  000D88  A4D8               	btfss	status,2,c
  4174  000D8A  D7FB               	goto	l2222
  4175  000D8C                     l2224:
  4176  000D8C  EC13  F00A         	call	_BusyXLCD	;wreg free
  4177  000D90  0900               	iorlw	0
  4178  000D92  A4D8               	btfss	status,2,c
  4179  000D94  D7FB               	goto	l2224
  4180  000D96  5017               	movf	OpenXLCD@lcdtype,w,c
  4181  000D98  ECF4  F009         	call	_WriteCmdXLCD
  4182  000D9C                     l2228:
  4183  000D9C  EC13  F00A         	call	_BusyXLCD	;wreg free
  4184  000DA0  0900               	iorlw	0
  4185  000DA2  A4D8               	btfss	status,2,c
  4186  000DA4  D7FB               	goto	l2228
  4187  000DA6  0E08               	movlw	8
  4188  000DA8  ECF4  F009         	call	_WriteCmdXLCD
  4189  000DAC                     l2232:
  4190  000DAC  EC13  F00A         	call	_BusyXLCD	;wreg free
  4191  000DB0  0900               	iorlw	0
  4192  000DB2  A4D8               	btfss	status,2,c
  4193  000DB4  D7FB               	goto	l2232
  4194  000DB6  0E0F               	movlw	15
  4195  000DB8  ECF4  F009         	call	_WriteCmdXLCD
  4196  000DBC                     l2236:
  4197  000DBC  EC13  F00A         	call	_BusyXLCD	;wreg free
  4198  000DC0  0900               	iorlw	0
  4199  000DC2  A4D8               	btfss	status,2,c
  4200  000DC4  D7FB               	goto	l2236
  4201  000DC6  0E01               	movlw	1
  4202  000DC8  ECF4  F009         	call	_WriteCmdXLCD
  4203  000DCC                     l2240:
  4204  000DCC  EC13  F00A         	call	_BusyXLCD	;wreg free
  4205  000DD0  0900               	iorlw	0
  4206  000DD2  A4D8               	btfss	status,2,c
  4207  000DD4  D7FB               	goto	l2240
  4208  000DD6  0E04               	movlw	4
  4209  000DD8  ECF4  F009         	call	_WriteCmdXLCD
  4210  000DDC                     l2244:
  4211  000DDC  EC13  F00A         	call	_BusyXLCD	;wreg free
  4212  000DE0  0900               	iorlw	0
  4213  000DE2  A4D8               	btfss	status,2,c
  4214  000DE4  D7FB               	goto	l2244
  4215  000DE6  0E80               	movlw	128
  4216  000DE8  EC1D  F009         	call	_SetDDRamAddr
  4217  000DEC  0012               	return	
  4218  000DEE                     __end_of_OpenXLCD:
  4219                           	opt stack 0
  4220                           tblptru	equ	0xFF8
  4221                           tblptrh	equ	0xFF7
  4222                           tblptrl	equ	0xFF6
  4223                           tablat	equ	0xFF5
  4224                           prodh	equ	0xFF4
  4225                           prodl	equ	0xFF3
  4226                           intcon	equ	0xFF2
  4227                           indf0	equ	0xFEF
  4228                           postinc0	equ	0xFEE
  4229                           fsr0h	equ	0xFEA
  4230                           fsr0l	equ	0xFE9
  4231                           wreg	equ	0xFE8
  4232                           postdec1	equ	0xFE5
  4233                           fsr1l	equ	0xFE1
  4234                           indf2	equ	0xFDF
  4235                           postinc2	equ	0xFDE
  4236                           postdec2	equ	0xFDD
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           status	equ	0xFD8
  4240                           
  4241 ;; *************** function _WriteCmdXLCD *****************
  4242 ;; Defined at:
  4243 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  cmd             1    wreg     unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  cmd             1   18[COMRAM] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4260 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4261 ;;Total ram usage:        1 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		_DelayFor18TCY
  4266 ;; This function is called by:
  4267 ;;		_init_XLCD
  4268 ;;		_OpenXLCD
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text26
  4273  0013E8                     __ptext26:
  4274                           	opt stack 0
  4275  0013E8                     _WriteCmdXLCD:
  4276                           	opt stack 26
  4277                           
  4278                           ;incstack = 0
  4279                           ;WriteCmdXLCD@cmd stored from wreg
  4280  0013E8  6E13               	movwf	WriteCmdXLCD@cmd,c
  4281  0013EA  0EF0               	movlw	240
  4282  0013EC  1693               	andwf	3987,f,c	;volatile
  4283  0013EE  0EF0               	movlw	240
  4284  0013F0  1681               	andwf	3969,f,c	;volatile
  4285  0013F2  3813               	swapf	WriteCmdXLCD@cmd,w,c
  4286  0013F4  0B0F               	andlw	15
  4287  0013F6  0B0F               	andlw	15
  4288  0013F8  1281               	iorwf	3969,f,c	;volatile
  4289  0013FA  9C8A               	bcf	3978,6,c	;volatile
  4290  0013FC  9A8A               	bcf	3978,5,c	;volatile
  4291  0013FE  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4292  001402  888A               	bsf	3978,4,c	;volatile
  4293  001404  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4294  001408  988A               	bcf	3978,4,c	;volatile
  4295  00140A  0EF0               	movlw	240
  4296  00140C  1681               	andwf	3969,f,c	;volatile
  4297  00140E  5013               	movf	WriteCmdXLCD@cmd,w,c
  4298  001410  0B0F               	andlw	15
  4299  001412  1281               	iorwf	3969,f,c	;volatile
  4300  001414  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4301  001418  888A               	bsf	3978,4,c	;volatile
  4302  00141A  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4303  00141E  988A               	bcf	3978,4,c	;volatile
  4304  001420  0E0F               	movlw	15
  4305  001422  1293               	iorwf	3987,f,c	;volatile
  4306  001424  0012               	return	
  4307  001426                     __end_of_WriteCmdXLCD:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           prodh	equ	0xFF4
  4314                           prodl	equ	0xFF3
  4315                           intcon	equ	0xFF2
  4316                           indf0	equ	0xFEF
  4317                           postinc0	equ	0xFEE
  4318                           fsr0h	equ	0xFEA
  4319                           fsr0l	equ	0xFE9
  4320                           wreg	equ	0xFE8
  4321                           postdec1	equ	0xFE5
  4322                           fsr1l	equ	0xFE1
  4323                           indf2	equ	0xFDF
  4324                           postinc2	equ	0xFDE
  4325                           postdec2	equ	0xFDD
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function _SetDDRamAddr *****************
  4331 ;; Defined at:
  4332 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  DDaddr          1    wreg     unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  DDaddr          1   21[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4346 ;;      Params:         0       0       0       0       0       0       0       0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4348 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4349 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4350 ;;Total ram usage:        4 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    3
  4353 ;; This function calls:
  4354 ;;		_DelayFor18TCY
  4355 ;; This function is called by:
  4356 ;;		_tela_1
  4357 ;;		_tela_2
  4358 ;;		_tela_3
  4359 ;;		_tela_4
  4360 ;;		_limpa_tela
  4361 ;;		_OpenXLCD
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text27
  4366  00123A                     __ptext27:
  4367                           	opt stack 0
  4368  00123A                     _SetDDRamAddr:
  4369                           	opt stack 24
  4370                           
  4371                           ;incstack = 0
  4372                           ;SetDDRamAddr@DDaddr stored from wreg
  4373  00123A  6E16               	movwf	SetDDRamAddr@DDaddr,c
  4374  00123C  0EF0               	movlw	240
  4375  00123E  1693               	andwf	3987,f,c	;volatile
  4376  001240  0EF0               	movlw	240
  4377  001242  1681               	andwf	3969,f,c	;volatile
  4378  001244  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4379  001246  6E13               	movwf	??_SetDDRamAddr& (0+255),c
  4380  001248  6A14               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4381  00124A  8E13               	bsf	??_SetDDRamAddr,7,c
  4382  00124C  0E04               	movlw	4
  4383  00124E  6E15               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4384  001250                     u885:
  4385  001250  3414               	rlcf	??_SetDDRamAddr+1,w,c
  4386  001252  3214               	rrcf	??_SetDDRamAddr+1,f,c
  4387  001254  3213               	rrcf	??_SetDDRamAddr,f,c
  4388  001256  2E15               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4389  001258  D7FB               	goto	u885
  4390  00125A  5013               	movf	??_SetDDRamAddr,w,c
  4391  00125C  0B0F               	andlw	15
  4392  00125E  1281               	iorwf	3969,f,c	;volatile
  4393  001260  9C8A               	bcf	3978,6,c	;volatile
  4394  001262  9A8A               	bcf	3978,5,c	;volatile
  4395  001264  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4396  001268  888A               	bsf	3978,4,c	;volatile
  4397  00126A  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4398  00126E  988A               	bcf	3978,4,c	;volatile
  4399  001270  0EF0               	movlw	240
  4400  001272  1681               	andwf	3969,f,c	;volatile
  4401  001274  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4402  001276  0B0F               	andlw	15
  4403  001278  1281               	iorwf	3969,f,c	;volatile
  4404  00127A  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4405  00127E  888A               	bsf	3978,4,c	;volatile
  4406  001280  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4407  001284  988A               	bcf	3978,4,c	;volatile
  4408  001286  0E0F               	movlw	15
  4409  001288  1293               	iorwf	3987,f,c	;volatile
  4410  00128A  0012               	return	
  4411  00128C                     __end_of_SetDDRamAddr:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           intcon	equ	0xFF2
  4420                           indf0	equ	0xFEF
  4421                           postinc0	equ	0xFEE
  4422                           fsr0h	equ	0xFEA
  4423                           fsr0l	equ	0xFE9
  4424                           wreg	equ	0xFE8
  4425                           postdec1	equ	0xFE5
  4426                           fsr1l	equ	0xFE1
  4427                           indf2	equ	0xFDF
  4428                           postinc2	equ	0xFDE
  4429                           postdec2	equ	0xFDD
  4430                           fsr2h	equ	0xFDA
  4431                           fsr2l	equ	0xFD9
  4432                           status	equ	0xFD8
  4433                           
  4434 ;; *************** function _DelayPORXLCD *****************
  4435 ;; Defined at:
  4436 ;;		line 357 in file "main.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    2
  4457 ;; This function calls:
  4458 ;;		_Delay1KTCYx
  4459 ;; This function is called by:
  4460 ;;		_OpenXLCD
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text28
  4465  0015AC                     __ptext28:
  4466                           	opt stack 0
  4467  0015AC                     _DelayPORXLCD:
  4468                           	opt stack 26
  4469                           
  4470                           ;main.c: 358: Delay1KTCYx(180);
  4471                           
  4472                           ;incstack = 0
  4473  0015AC  0EB4               	movlw	180
  4474  0015AE  ECC0  F00A         	call	_Delay1KTCYx
  4475  0015B2  0012               	return	
  4476  0015B4                     __end_of_DelayPORXLCD:
  4477                           	opt stack 0
  4478                           tblptru	equ	0xFF8
  4479                           tblptrh	equ	0xFF7
  4480                           tblptrl	equ	0xFF6
  4481                           tablat	equ	0xFF5
  4482                           prodh	equ	0xFF4
  4483                           prodl	equ	0xFF3
  4484                           intcon	equ	0xFF2
  4485                           indf0	equ	0xFEF
  4486                           postinc0	equ	0xFEE
  4487                           fsr0h	equ	0xFEA
  4488                           fsr0l	equ	0xFE9
  4489                           wreg	equ	0xFE8
  4490                           postdec1	equ	0xFE5
  4491                           fsr1l	equ	0xFE1
  4492                           indf2	equ	0xFDF
  4493                           postinc2	equ	0xFDE
  4494                           postdec2	equ	0xFDD
  4495                           fsr2h	equ	0xFDA
  4496                           fsr2l	equ	0xFD9
  4497                           status	equ	0xFD8
  4498                           
  4499 ;; *************** function _Delay1KTCYx *****************
  4500 ;; Defined at:
  4501 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  unit            1    wreg     unsigned char 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  unit            1   17[COMRAM] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		wreg
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4515 ;;      Params:         0       0       0       0       0       0       0       0       0
  4516 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4518 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4519 ;;Total ram usage:        1 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    1
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_DelayPORXLCD
  4526 ;;		_DelayXLCD
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text29
  4531  001580                     __ptext29:
  4532                           	opt stack 0
  4533  001580                     _Delay1KTCYx:
  4534                           	opt stack 26
  4535                           
  4536                           ;incstack = 0
  4537                           ;Delay1KTCYx@unit stored from wreg
  4538  001580  6E12               	movwf	Delay1KTCYx@unit,c
  4539  001582  0EC8               	movlw	200
  4540  001584                     u1867:
  4541  001584  D000               	nop2	
  4542  001586  2EE8               	decfsz	wreg,f,c
  4543  001588  D7FD               	bra	u1867
  4544  00158A  2E12               	decfsz	Delay1KTCYx@unit,f,c
  4545  00158C  D7FA               	goto	l1256
  4546  00158E  0012               	return	
  4547  001590                     __end_of_Delay1KTCYx:
  4548                           	opt stack 0
  4549                           tblptru	equ	0xFF8
  4550                           tblptrh	equ	0xFF7
  4551                           tblptrl	equ	0xFF6
  4552                           tablat	equ	0xFF5
  4553                           prodh	equ	0xFF4
  4554                           prodl	equ	0xFF3
  4555                           intcon	equ	0xFF2
  4556                           indf0	equ	0xFEF
  4557                           postinc0	equ	0xFEE
  4558                           fsr0h	equ	0xFEA
  4559                           fsr0l	equ	0xFE9
  4560                           wreg	equ	0xFE8
  4561                           postdec1	equ	0xFE5
  4562                           fsr1l	equ	0xFE1
  4563                           indf2	equ	0xFDF
  4564                           postinc2	equ	0xFDE
  4565                           postdec2	equ	0xFDD
  4566                           fsr2h	equ	0xFDA
  4567                           fsr2l	equ	0xFD9
  4568                           status	equ	0xFD8
  4569                           
  4570 ;; *************** function _Delay10KTCYx *****************
  4571 ;; Defined at:
  4572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  unit            1    wreg     unsigned char 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  unit            1   18[COMRAM] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0
  4587 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4588 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4589 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_OpenXLCD
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text30
  4601  00156A                     __ptext30:
  4602                           	opt stack 0
  4603  00156A                     _Delay10KTCYx:
  4604                           	opt stack 27
  4605                           
  4606                           ;incstack = 0
  4607                           ;Delay10KTCYx@unit stored from wreg
  4608  00156A  6E13               	movwf	Delay10KTCYx@unit,c
  4609  00156C  0E0D               	movlw	13
  4610  00156E  6E12               	movwf	??_Delay10KTCYx& (0+255),c
  4611  001570  0EFC               	movlw	252
  4612  001572                     u1877:
  4613  001572  2EE8               	decfsz	wreg,f,c
  4614  001574  D7FE               	bra	u1877
  4615  001576  2E12               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4616  001578  D7FC               	bra	u1877
  4617  00157A  2E13               	decfsz	Delay10KTCYx@unit,f,c
  4618  00157C  D7F7               	goto	l1408
  4619  00157E  0012               	return	
  4620  001580                     __end_of_Delay10KTCYx:
  4621                           	opt stack 0
  4622                           tblptru	equ	0xFF8
  4623                           tblptrh	equ	0xFF7
  4624                           tblptrl	equ	0xFF6
  4625                           tablat	equ	0xFF5
  4626                           prodh	equ	0xFF4
  4627                           prodl	equ	0xFF3
  4628                           intcon	equ	0xFF2
  4629                           indf0	equ	0xFEF
  4630                           postinc0	equ	0xFEE
  4631                           fsr0h	equ	0xFEA
  4632                           fsr0l	equ	0xFE9
  4633                           wreg	equ	0xFE8
  4634                           postdec1	equ	0xFE5
  4635                           fsr1l	equ	0xFE1
  4636                           indf2	equ	0xFDF
  4637                           postinc2	equ	0xFDE
  4638                           postdec2	equ	0xFDD
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _BusyXLCD *****************
  4644 ;; Defined at:
  4645 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      unsigned char 
  4652 ;; Registers used:
  4653 ;;		wreg, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4662 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4663 ;;Total ram usage:        0 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    3
  4666 ;; This function calls:
  4667 ;;		_DelayFor18TCY
  4668 ;; This function is called by:
  4669 ;;		_init_XLCD
  4670 ;;		_OpenXLCD
  4671 ;;		_putrsXLCD
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text31
  4676  001426                     __ptext31:
  4677                           	opt stack 0
  4678  001426                     _BusyXLCD:
  4679                           	opt stack 23
  4680                           
  4681                           ;incstack = 0
  4682  001426  8C8A               	bsf	3978,6,c	;volatile
  4683  001428  9A8A               	bcf	3978,5,c	;volatile
  4684  00142A  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4685  00142E  888A               	bsf	3978,4,c	;volatile
  4686  001430  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4687  001434  A681               	btfss	3969,3,c	;volatile
  4688  001436  D00A               	goto	l327
  4689  001438  988A               	bcf	3978,4,c	;volatile
  4690  00143A  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4691  00143E  888A               	bsf	3978,4,c	;volatile
  4692  001440  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4693  001444  988A               	bcf	3978,4,c	;volatile
  4694  001446  9C8A               	bcf	3978,6,c	;volatile
  4695  001448  0E01               	movlw	1
  4696  00144A  0012               	return	
  4697  00144C                     l327:
  4698  00144C  988A               	bcf	3978,4,c	;volatile
  4699  00144E  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4700  001452  888A               	bsf	3978,4,c	;volatile
  4701  001454  ECDA  F00A         	call	_DelayFor18TCY	;wreg free
  4702  001458  988A               	bcf	3978,4,c	;volatile
  4703  00145A  9C8A               	bcf	3978,6,c	;volatile
  4704  00145C  0E00               	movlw	0
  4705  00145E  0012               	return	
  4706  001460                     __end_of_BusyXLCD:
  4707                           	opt stack 0
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           prodh	equ	0xFF4
  4713                           prodl	equ	0xFF3
  4714                           intcon	equ	0xFF2
  4715                           indf0	equ	0xFEF
  4716                           postinc0	equ	0xFEE
  4717                           fsr0h	equ	0xFEA
  4718                           fsr0l	equ	0xFE9
  4719                           wreg	equ	0xFE8
  4720                           postdec1	equ	0xFE5
  4721                           fsr1l	equ	0xFE1
  4722                           indf2	equ	0xFDF
  4723                           postinc2	equ	0xFDE
  4724                           postdec2	equ	0xFDD
  4725                           fsr2h	equ	0xFDA
  4726                           fsr2l	equ	0xFD9
  4727                           status	equ	0xFD8
  4728                           
  4729 ;; *************** function _DelayFor18TCY *****************
  4730 ;; Defined at:
  4731 ;;		line 353 in file "main.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4745 ;;      Params:         0       0       0       0       0       0       0       0       0
  4746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4748 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4749 ;;Total ram usage:        0 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    2
  4752 ;; This function calls:
  4753 ;;		_Delay10TCYx
  4754 ;; This function is called by:
  4755 ;;		_BusyXLCD
  4756 ;;		_SetDDRamAddr
  4757 ;;		_WriteCmdXLCD
  4758 ;;		_WriteDataXLCD
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text32
  4763  0015B4                     __ptext32:
  4764                           	opt stack 0
  4765  0015B4                     _DelayFor18TCY:
  4766                           	opt stack 23
  4767                           
  4768                           ;main.c: 354: Delay10TCYx(120);
  4769                           
  4770                           ;incstack = 0
  4771  0015B4  0E78               	movlw	120
  4772  0015B6  ECC8  F00A         	call	_Delay10TCYx
  4773  0015BA  0012               	return		;funcret
  4774  0015BC                     __end_of_DelayFor18TCY:
  4775                           	opt stack 0
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           prodh	equ	0xFF4
  4781                           prodl	equ	0xFF3
  4782                           intcon	equ	0xFF2
  4783                           indf0	equ	0xFEF
  4784                           postinc0	equ	0xFEE
  4785                           fsr0h	equ	0xFEA
  4786                           fsr0l	equ	0xFE9
  4787                           wreg	equ	0xFE8
  4788                           postdec1	equ	0xFE5
  4789                           fsr1l	equ	0xFE1
  4790                           indf2	equ	0xFDF
  4791                           postinc2	equ	0xFDE
  4792                           postdec2	equ	0xFDD
  4793                           fsr2h	equ	0xFDA
  4794                           fsr2l	equ	0xFD9
  4795                           status	equ	0xFD8
  4796                           
  4797 ;; *************** function _Delay10TCYx *****************
  4798 ;; Defined at:
  4799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  unit            1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  unit            1   17[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0
  4814 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4816 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:        1 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_DelayFor18TCY
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text33
  4828  001590                     __ptext33:
  4829                           	opt stack 0
  4830  001590                     _Delay10TCYx:
  4831                           	opt stack 23
  4832                           
  4833                           ;incstack = 0
  4834                           ;Delay10TCYx@unit stored from wreg
  4835  001590  6E12               	movwf	Delay10TCYx@unit,c
  4836  001592  0E03               	movlw	3
  4837  001594                     u1887:
  4838  001594  2EE8               	decfsz	wreg,f,c
  4839  001596  D7FE               	bra	u1887
  4840  001598  F000               	nop	
  4841  00159A  2E12               	decfsz	Delay10TCYx@unit,f,c
  4842  00159C  D7FA               	goto	l1806
  4843  00159E  0012               	return	
  4844  0015A0                     __end_of_Delay10TCYx:
  4845                           	opt stack 0
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           prodh	equ	0xFF4
  4851                           prodl	equ	0xFF3
  4852                           intcon	equ	0xFF2
  4853                           indf0	equ	0xFEF
  4854                           postinc0	equ	0xFEE
  4855                           fsr0h	equ	0xFEA
  4856                           fsr0l	equ	0xFE9
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           fsr1l	equ	0xFE1
  4860                           indf2	equ	0xFDF
  4861                           postinc2	equ	0xFDE
  4862                           postdec2	equ	0xFDD
  4863                           fsr2h	equ	0xFDA
  4864                           fsr2l	equ	0xFD9
  4865                           status	equ	0xFD8
  4866                           
  4867 ;; *************** function _despertar *****************
  4868 ;; Defined at:
  4869 ;;		line 240 in file "main.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    1
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_main
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text34
  4898  0014C0                     __ptext34:
  4899                           	opt stack 0
  4900  0014C0                     _despertar:
  4901                           	opt stack 29
  4902                           
  4903                           ;main.c: 241: if((hora) == desp_hora && (minuto) == desp_min && despertou == 0){
  4904                           
  4905                           ;incstack = 0
  4906  0014C0  5047               	movf	_desp_hora,w,c
  4907  0014C2  182E               	xorwf	_hora,w,c
  4908  0014C4  A4D8               	btfss	status,2,c
  4909  0014C6  D009               	goto	l1694
  4910  0014C8  5046               	movf	_desp_min,w,c
  4911  0014CA  182D               	xorwf	_minuto,w,c
  4912  0014CC  A4D8               	btfss	status,2,c
  4913  0014CE  D005               	goto	l1694
  4914  0014D0  502A               	movf	_despertou,w,c
  4915  0014D2  A4D8               	btfss	status,2,c
  4916  0014D4  D002               	goto	l1694
  4917                           
  4918                           ;main.c: 242: PORTAbits.RA0 = 1;
  4919  0014D6  8080               	bsf	3968,0,c	;volatile
  4920                           
  4921                           ;main.c: 243: contador_alarme += 1;
  4922  0014D8  2A2B               	incf	_contador_alarme,f,c
  4923  0014DA                     l1694:
  4924                           
  4925                           ;main.c: 244: }
  4926                           ;main.c: 245: if(contador_alarme >= 15){
  4927  0014DA  0E0E               	movlw	14
  4928  0014DC  642B               	cpfsgt	_contador_alarme,c
  4929  0014DE  0012               	return	
  4930                           
  4931                           ;main.c: 246: PORTAbits.RA0 = 0;
  4932  0014E0  9080               	bcf	3968,0,c	;volatile
  4933                           
  4934                           ;main.c: 247: despertou = 1;
  4935  0014E2  0E01               	movlw	1
  4936  0014E4  6E2A               	movwf	_despertou,c
  4937  0014E6  0012               	return	
  4938  0014E8                     __end_of_despertar:
  4939                           	opt stack 0
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           prodh	equ	0xFF4
  4945                           prodl	equ	0xFF3
  4946                           intcon	equ	0xFF2
  4947                           indf0	equ	0xFEF
  4948                           postinc0	equ	0xFEE
  4949                           fsr0h	equ	0xFEA
  4950                           fsr0l	equ	0xFE9
  4951                           wreg	equ	0xFE8
  4952                           postdec1	equ	0xFE5
  4953                           fsr1l	equ	0xFE1
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           postdec2	equ	0xFDD
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _pic_isr *****************
  4962 ;; Defined at:
  4963 ;;		line 258 in file "main.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4979 ;;      Temps:         17       0       0       0       0       0       0       0       0
  4980 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4981 ;;Total ram usage:       17 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		Interrupt level 1
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	intcodelo
  4991  000018                     __pintcodelo:
  4992                           	opt stack 0
  4993  000018                     _pic_isr:
  4994                           	opt stack 23
  4995                           
  4996                           ;incstack = 0
  4997  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4998  00001A  CFD8 F001          	movff	status,??_pic_isr
  4999  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
  5000  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
  5001  000026  CFFA F004          	movff	pclath,??_pic_isr+3
  5002  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
  5003  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
  5004  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
  5005  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
  5006  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
  5007  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
  5008  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
  5009  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
  5010  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
  5011  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
  5012  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
  5013  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
  5014  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
  5015                           
  5016                           ;main.c: 259: if(TMR0IF){
  5017  00005E  A4F2               	btfss	intcon,2,c	;volatile
  5018  000060  D00E               	goto	i1l1740
  5019                           
  5020                           ;main.c: 260: TMR0 = 28021;
  5021  000062  0E6D               	movlw	109
  5022  000064  6ED7               	movwf	4055,c	;volatile
  5023  000066  0E75               	movlw	117
  5024  000068  6ED6               	movwf	4054,c	;volatile
  5025                           
  5026                           ;main.c: 262: INTCONbits.TMR0IF = 0;
  5027  00006A  94F2               	bcf	intcon,2,c	;volatile
  5028                           
  5029                           ;main.c: 263: contador_interrupcao++;
  5030  00006C  2A30               	incf	_contador_interrupcao,f,c
  5031                           
  5032                           ;main.c: 264: if(contador_interrupcao == 20){
  5033  00006E  0E14               	movlw	20
  5034  000070  1830               	xorwf	_contador_interrupcao,w,c
  5035  000072  A4D8               	btfss	status,2,c
  5036  000074  D004               	goto	i1l1740
  5037                           
  5038                           ;main.c: 265: contador_um_segundo += 1;
  5039  000076  2A2F               	incf	_contador_um_segundo,f,c
  5040                           
  5041                           ;main.c: 266: contador_interrupcao = 0;
  5042  000078  0E00               	movlw	0
  5043  00007A  6E30               	movwf	_contador_interrupcao,c
  5044                           
  5045                           ;main.c: 267: segundo+=1;
  5046  00007C  2A2C               	incf	_segundo,f,c
  5047  00007E                     i1l1740:
  5048                           
  5049                           ;main.c: 268: }
  5050                           ;main.c: 269: }
  5051                           ;main.c: 271: if(PIR1bits.RCIF == 1){
  5052  00007E  AA9E               	btfss	3998,5,c	;volatile
  5053  000080  D01B               	goto	i1l202
  5054  000082                     i1l198:
  5055  000082  AA9E               	btfss	3998,5,c	;volatile
  5056  000084  D7FE               	goto	i1l198
  5057                           
  5058                           ;main.c: 273: BUFFCOM[i]= RCREG;
  5059  000086  0E3A               	movlw	low _BUFFCOM
  5060  000088  2427               	addwf	_i,w,c
  5061  00008A  6ED9               	movwf	fsr2l,c
  5062  00008C  0E00               	movlw	high _BUFFCOM
  5063  00008E  2028               	addwfc	_i+1,w,c
  5064  000090  6EDA               	movwf	fsr2h,c
  5065  000092  CFAE FFDF          	movff	4014,indf2	;volatile
  5066                           
  5067                           ;main.c: 274: i++;
  5068  000096  4A27               	infsnz	_i,f,c
  5069  000098  2A28               	incf	_i+1,f,c
  5070                           
  5071                           ;main.c: 275: if(i>6){
  5072  00009A  BE28               	btfsc	_i+1,7,c
  5073  00009C  D00D               	goto	i1l202
  5074  00009E  5028               	movf	_i+1,w,c
  5075  0000A0  E104               	bnz	i1u78_20
  5076  0000A2  0E07               	movlw	7
  5077  0000A4  5C27               	subwf	_i,w,c
  5078  0000A6  A0D8               	btfss	status,0,c
  5079  0000A8  D007               	goto	i1l202
  5080  0000AA                     i1u78_20:
  5081                           
  5082                           ;main.c: 276: PIR1bits.RCIF = 0;
  5083  0000AA  9A9E               	bcf	3998,5,c	;volatile
  5084                           
  5085                           ;main.c: 277: i = 0;
  5086  0000AC  0E00               	movlw	0
  5087  0000AE  6E28               	movwf	_i+1,c
  5088  0000B0  0E00               	movlw	0
  5089  0000B2  6E27               	movwf	_i,c
  5090                           
  5091                           ;main.c: 278: estado = 1;
  5092  0000B4  0E01               	movlw	1
  5093  0000B6  6E31               	movwf	_estado,c
  5094  0000B8                     i1l202:
  5095  0000B8  C011  FFF5         	movff	??_pic_isr+16,tablat
  5096  0000BC  C010  FFF8         	movff	??_pic_isr+15,tblptru
  5097  0000C0  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
  5098  0000C4  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
  5099  0000C8  C00D  FFF4         	movff	??_pic_isr+12,prodh
  5100  0000CC  C00C  FFF3         	movff	??_pic_isr+11,prodl
  5101  0000D0  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
  5102  0000D4  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
  5103  0000D8  C009  FFE2         	movff	??_pic_isr+8,fsr1h
  5104  0000DC  C008  FFE1         	movff	??_pic_isr+7,fsr1l
  5105  0000E0  C007  FFEA         	movff	??_pic_isr+6,fsr0h
  5106  0000E4  C006  FFE9         	movff	??_pic_isr+5,fsr0l
  5107  0000E8  C005  FFFB         	movff	??_pic_isr+4,pclatu
  5108  0000EC  C004  FFFA         	movff	??_pic_isr+3,pclath
  5109  0000F0  C003  FFE0         	movff	??_pic_isr+2,bsr
  5110  0000F4  C002  FFE8         	movff	??_pic_isr+1,wreg
  5111  0000F8  C001  FFD8         	movff	??_pic_isr,status
  5112  0000FC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5113  0000FE  0010               	retfie	
  5114  000100                     __end_of_pic_isr:
  5115                           	opt stack 0
  5116                           pclatu	equ	0xFFB
  5117                           pclath	equ	0xFFA
  5118                           tblptru	equ	0xFF8
  5119                           tblptrh	equ	0xFF7
  5120                           tblptrl	equ	0xFF6
  5121                           tablat	equ	0xFF5
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           intcon	equ	0xFF2
  5125                           indf0	equ	0xFEF
  5126                           postinc0	equ	0xFEE
  5127                           fsr0h	equ	0xFEA
  5128                           fsr0l	equ	0xFE9
  5129                           wreg	equ	0xFE8
  5130                           postdec1	equ	0xFE5
  5131                           fsr1h	equ	0xFE2
  5132                           fsr1l	equ	0xFE1
  5133                           bsr	equ	0xFE0
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           postdec2	equ	0xFDD
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           pclatu	equ	0xFFB
  5141                           pclath	equ	0xFFA
  5142                           tblptru	equ	0xFF8
  5143                           tblptrh	equ	0xFF7
  5144                           tblptrl	equ	0xFF6
  5145                           tablat	equ	0xFF5
  5146                           prodh	equ	0xFF4
  5147                           prodl	equ	0xFF3
  5148                           intcon	equ	0xFF2
  5149                           indf0	equ	0xFEF
  5150                           postinc0	equ	0xFEE
  5151                           fsr0h	equ	0xFEA
  5152                           fsr0l	equ	0xFE9
  5153                           wreg	equ	0xFE8
  5154                           postdec1	equ	0xFE5
  5155                           fsr1h	equ	0xFE2
  5156                           fsr1l	equ	0xFE1
  5157                           bsr	equ	0xFE0
  5158                           indf2	equ	0xFDF
  5159                           postinc2	equ	0xFDE
  5160                           postdec2	equ	0xFDD
  5161                           fsr2h	equ	0xFDA
  5162                           fsr2l	equ	0xFD9
  5163                           status	equ	0xFD8
  5164                           
  5165                           	psect	rparam
  5166  0000                     pclatu	equ	0xFFB
  5167                           pclath	equ	0xFFA
  5168                           tblptru	equ	0xFF8
  5169                           tblptrh	equ	0xFF7
  5170                           tblptrl	equ	0xFF6
  5171                           tablat	equ	0xFF5
  5172                           prodh	equ	0xFF4
  5173                           prodl	equ	0xFF3
  5174                           intcon	equ	0xFF2
  5175                           indf0	equ	0xFEF
  5176                           postinc0	equ	0xFEE
  5177                           fsr0h	equ	0xFEA
  5178                           fsr0l	equ	0xFE9
  5179                           wreg	equ	0xFE8
  5180                           postdec1	equ	0xFE5
  5181                           fsr1h	equ	0xFE2
  5182                           fsr1l	equ	0xFE1
  5183                           bsr	equ	0xFE0
  5184                           indf2	equ	0xFDF
  5185                           postinc2	equ	0xFDE
  5186                           postdec2	equ	0xFDD
  5187                           fsr2h	equ	0xFDA
  5188                           fsr2l	equ	0xFD9
  5189                           status	equ	0xFD8
  5190                           
  5191                           	psect	temp
  5192  00004D                     btemp:
  5193                           	opt stack 0
  5194  00004D                     	ds	1
  5195  0000                     int$flags	set	btemp
  5196                           pclatu	equ	0xFFB
  5197                           pclath	equ	0xFFA
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           prodh	equ	0xFF4
  5203                           prodl	equ	0xFF3
  5204                           intcon	equ	0xFF2
  5205                           indf0	equ	0xFEF
  5206                           postinc0	equ	0xFEE
  5207                           fsr0h	equ	0xFEA
  5208                           fsr0l	equ	0xFE9
  5209                           wreg	equ	0xFE8
  5210                           postdec1	equ	0xFE5
  5211                           fsr1h	equ	0xFE2
  5212                           fsr1l	equ	0xFE1
  5213                           bsr	equ	0xFE0
  5214                           indf2	equ	0xFDF
  5215                           postinc2	equ	0xFDE
  5216                           postdec2	equ	0xFDD
  5217                           fsr2h	equ	0xFDA
  5218                           fsr2l	equ	0xFD9
  5219                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    10
    Data        12
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      76
    BANK0           160     17      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    memcpy@s1	PTR const void  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), BUFFCOM(COMRAM[7]), revisao(COMRAM[1]), versao(COMRAM[1]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), BUFFCOM(COMRAM[7]), revisao(COMRAM[1]), versao(COMRAM[1]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_9(CODE[8]), STR_7(CODE[11]), 
		 -> STR_5(CODE[7]), STR_3(CODE[7]), buffer(BANK0[16]), STR_1(CODE[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[5]), STR_8(CODE[6]), STR_6(CODE[6]), STR_4(CODE[9]), 
		 -> STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_trata_despertador
    _main->_troca_telas
    _troca_telas->_telas
    _trata_despertador->_telas
    _tela_4->_sprintf
    _tela_3->_sprintf
    _tela_2->_sprintf
    _tela_1->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _limpa_tela->_SetDDRamAddr
    _putrsXLCD->_WriteDataXLCD
    _verificaCRCBUFFCOM->_crc16
    _trataComando->_calculaCRCBUFFRESP
    _calculaCRCBUFFRESP->_crc16
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _tela_4->_sprintf
    _tela_3->_sprintf
    _tela_2->_sprintf
    _tela_1->_sprintf
    _maquinaEstado->_trataComando
    _trataComando->_calculaCRCBUFFRESP

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   49806
                          _despertar
                          _init_XLCD
                      _maquinaEstado
                              _telas
                         _trata_data
                  _trata_despertador
                         _trata_hora
                        _troca_telas
 ---------------------------------------------------------------------------------
 (1) _troca_telas                                          2     2      0   14470
                                             31 COMRAM     2     2      0
                              _telas
 ---------------------------------------------------------------------------------
 (1) _trata_hora                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trata_despertador                                    2     2      0   14470
                                             31 COMRAM     2     2      0
                              _telas
 ---------------------------------------------------------------------------------
 (2) _telas                                                1     1      0   14470
                                             30 COMRAM     1     1      0
                         _limpa_tela
                             _tela_1
                             _tela_2
                             _tela_3
                             _tela_4
 ---------------------------------------------------------------------------------
 (3) _tela_4                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _tela_3                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _tela_2                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _tela_1                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             27    17     10    2401
                                             29 COMRAM     1     1      0
                                              0 BANK0     17     7     10
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     549
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _limpa_tela                                           0     0      0     967
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (4) _putrsXLCD                                            2     0      2     901
                                             19 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (5) _WriteDataXLCD                                        1     1      0      66
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _trata_data                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0    6102
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   5     5      0     945
                                              0 BANK0      5     5      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      45
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         4     4      0    5082
                                              4 BANK0      4     4      0
                 _calculaCRCBUFFRESP
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   7     7      0    2930
                                             30 COMRAM     3     3      0
                                              0 BANK0      4     4      0
                              _crc16
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     5      7    2022
                                             17 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             17 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      30
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     294
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     206
                                             22 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _SetDDRamAddr                                         4     4      0      66
                                             18 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (6) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (7) _Delay10TCYx                                          1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _despertar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _despertar
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       _calculaCRCBUFFRESP
         _crc16
         _memcpy
       _memcpy
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _telas
     _limpa_tela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _tela_1
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _tela_2
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _tela_3
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _tela_4
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _trata_data
   _trata_despertador
     _telas
       _limpa_tela
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _tela_1
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_2
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_3
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_4
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _trata_hora
   _troca_telas
     _telas
       _limpa_tela
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _tela_1
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_2
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_3
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_4
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      21       5       20.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D      20        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Oct 31 16:19:37 2018

                          _i 0027         _contador_interrupcao 0030                           bsr 000FE0  
                        l151 14BA                          l240 0920                          l160 0F26  
                        l241 092E                          l242 093C                          l228 0C50  
                        l157 0F2A                          l166 0F60                          l327 144C  
                        l277 1530                          l287 1478                          l841 1230  
                        l851 13A0                          u900 1064                          u910 108C  
                        u907 105A                          u917 1082                          u885 1250  
                        _dia 0049                          _ano 0044                          _mes 0048  
      __size_of_WriteCmdXLCD 003E                          wreg 000FE8                  _troca_telas 1498  
                       l2222 0D82                         l1408 156C                         l1256 1582  
                       l2240 0DCC                         l2232 0DAC                         l2224 0D8C  
                       l2244 0DDC                         l2236 0DBC                         l2228 0D9C  
                       l2420 11FE                         l2422 1206                         l2344 1552  
                       l2520 0BE8                         l2432 1226                         l2424 120A  
                       l2440 1376                         l2504 0B9A                         l2530 0C0A  
                       l2442 137E                         l2506 0BA6                         l2700 0A0A  
                       l1660 1134                         l2444 1382                         l2508 0BC4  
                       l2460 0A74                         l1806 1592                         l2534 0C4A  
                       l2526 0C02                         l2710 0A42                         l1638 10FE  
                       l2454 0A56                         l2552 0FEC                         l2704 0A18  
                       l1576 1468                         l1648 1116                         l2448 1396  
                       l2538 0C5A                         l1586 1492                         l2730 10E8  
                       l2490 0B18                         l2466 0AA6                         l2650 0EB8  
                       l2642 0EA2                         l2634 0E8E                         l1596 1546  
                       l2708 0A34                         l2724 10D4                         l2476 0AD6  
                       l1676 151E                         l2812 0FA6                         l1694 14DA  
                       l2558 1026                         l1942 106C                         l2478 0ADC  
                       l2680 0948                         l1936 103A                         l2496 0B36  
                       l2656 0EC6                         l2760 0F56                         l2682 0964  
                       l2674 0864                         l2770 12E8                         l2498 0B3C  
                       l2746 0F1A                         l2826 0FC6                         l2684 096E  
                       l2676 08B2                         l2772 12EE                         l2748 0F1C  
                       l2694 09CE                         l2774 12F6                         l2766 12DC  
                       l2758 0F54                         l2696 09DC                         l2688 0984  
                       l2768 12E2                         l2698 09F0                         l2778 12FE  
                       STR_1 0841                         STR_2 0830                         STR_3 0848  
                       STR_4 0827                         STR_5 084F                         STR_6 0833  
                       STR_7 081C                         STR_8 0856                         STR_9 0839  
                       u1580 1014                         u1587 100A                         u1837 14A6  
                       u1847 0EFE                         u1857 0F38                         u1867 1584  
                       _PEIE 007F96                         u1877 1572                         u1887 1594  
                       _RCIE 007CED                         _RCIF 007CF5                         _RCIP 007CFD  
                       _TMR0 000FD6                         _TXIF 007CF4                         _main 0F66  
                       _hora 002E                         fsr0h 000FEA                         fsr1h 000FE2  
                       indf0 000FEF                         fsr2h 000FDA                         fsr0l 000FE9  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 004D       __size_of_WriteDataXLCD 003E                         prodh 000FF4  
                       prodl 000FF3                         start 0100       verificaCRCBUFFCOM@crc1 0060  
     verificaCRCBUFFCOM@crc2 0061                 ___param_bank 000000                  _Delay10TCYx 1590  
               _WriteCmdXLCD 13E8                  _Delay1KTCYx 1580                ?_SetDDRamAddr 0001  
                      ?_main 0001              _contador_alarme 002B                        STR_10 085C  
                      STR_11 080B                        STR_12 080B           _verificaCRCBUFFCOM 1094  
            __end_of___lwdiv 123A                        i1l202 00B8              __end_of___lwmod 13AA  
                      i1l198 0082                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _PORTB 000F81                        _TRISA 000F92  
                      _TRISB 000F93                        _TXREG 000FAD        __size_of_Delay10KTCYx 0016  
                      _TXSTA 000FAC                        _crc16 0BD2          ?_verificaCRCBUFFCOM 0001  
            __end_of_dpowers 080B                        _telas 0E70              __end_of_pic_isr 0100  
                      pclath 000FFA                        tablat 000FF5              __end_of_tx_data 1498  
                      status 000FD8              __end_of_sprintf 0BD2              __initialization 1326  
       ??_verificaCRCBUFFCOM 001F                 __end_of_main 0FD6             __end_of_BusyXLCD 1460  
               _Delay10KTCYx 156A        __size_of_DelayPORXLCD 0008               ??_SetDDRamAddr 0013  
           __end_of_OpenXLCD 0DEE   __end_of_calculaCRCBUFFRESP 0E70                       ??_main 0022  
              __activetblptr 000003                _WriteDataXLCD 13AA                       ?_crc16 0012  
                     ?_telas 0001                       i1l1740 007E                       _TMR0IF 007F92  
               _DelayPORXLCD 15AC                       crc16@i 001A       __size_of_maquinaEstado 004C  
                  ??___lwdiv 0016                    ??___lwmod 001D                       _buffer 0071  
                     _estado 0031                       _memcpy 0FD6                       clear_0 134C  
                     clear_1 1358                       _tela_1 0CA4                       _tela_2 1196  
                     _tela_3 1144                       _tela_4 128C                       _minuto 002D  
                     _versao 004C               ?_WriteDataXLCD 0001                 _calcula_temp 0029  
               __pdataCOMRAM 0041                    ??_pic_isr 0001                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                  ??_tx_data 0012                    ??_sprintf 001E     verificaCRCBUFFCOM@CRC_OK 0062  
                 __accesstop 0060      __end_of__initialization 135E              __CFG_PBADEN$OFF 000000  
              ___rparam_used 000001        calculaCRCBUFFRESP@crc 0062               __pcstackCOMRAM 0001  
            telas@troca_tela 001F                __end_of_crc16 0CA4                __end_of_telas 0EF0  
       trataComando@iterator 0066           __size_of_despertar 0028                 ?_troca_telas 0001  
                    ??_crc16 0016                _maquinaEstado 12DA                      ??_telas 001F  
     __size_of_DelayFor18TCY 0008                   __pbssBANK0 0071           __size_of_enviaByte 001E  
                  ?_BusyXLCD 0001              WriteCmdXLCD@cmd 0013         __end_of_SetDDRamAddr 128C  
         __size_of_init_XLCD 001E                    ?_OpenXLCD 0001            WriteDataXLCD@data 0013  
               ?_Delay10TCYx 0001              ??_WriteDataXLCD 0013                 ?_Delay1KTCYx 0001  
                    ?_memcpy 0012                      ?_tela_1 0001                      ?_tela_2 0001  
                    ?_tela_3 0001                      ?_tela_4 0001                      _BUFFCOM 003A  
                    i1u78_20 00AA               ?_maquinaEstado 0001           __size_of_putrsXLCD 005C  
                 ??_BusyXLCD 0013                   ??_OpenXLCD 0017                      __Hparam 0000  
                    __Lparam 0000            __end_of_despertar 14E8                _DelayFor18TCY 15B4  
                    ___lwdiv 11E8                      ___lwmod 1368                 __psmallconst 0800  
          __end_of_enviaByte 154C                      __pcinit 1326              __size_of_memcpy 0062  
            putrsXLCD@buffer 0014              Delay10TCYx@unit 0012                      __ramtop 0800  
            __size_of_tela_1 00A6              __size_of_tela_2 0052              __size_of_tela_3 0052  
            __size_of_tela_4 004E                      __ptext0 0F66                      __ptext1 1498  
                    __ptext2 150E                      __ptext3 0EF0                      __ptext4 0E70  
                    __ptext5 128C                      __ptext6 1144                      __ptext7 1196  
                    __ptext8 0CA4                      __ptext9 0A48            __end_of_init_XLCD 156A  
                 _limpa_tela 14E8                    _T0CONbits 000FD5                      _dpowers 0801  
                    _pic_isr 0018                      _segundo 002C                      _revisao 004B  
                    _tx_data 1460                      _sprintf 0A48         end_of_initialization 135E  
         _calculaCRCBUFFRESP 0DEE                      memcpy@d 001C                      memcpy@n 0017  
                    memcpy@s 0019                   _tela_atual 004A          ?_calculaCRCBUFFRESP 0001  
              enviaByte@BYTE 0012               ?_DelayFor18TCY 0001  __size_of_verificaCRCBUFFCOM 005A  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE            __end_of_putrsXLCD 1094                    _PORTAbits 000F80  
                  _PORTDbits 000F83         ??_calculaCRCBUFFRESP 001F              ??_maquinaEstado 0022  
                  _TRISBbits 000F93                    _TRISCbits 000F94                   _trata_data 10EE  
                 _trata_hora 150E        __size_of_SetDDRamAddr 0052         __size_of_troca_telas 0028  
     calculaCRCBUFFRESP@crc1 0060       calculaCRCBUFFRESP@crc2 0061            _trata_despertador 0EF0  
              ?_trataComando 0001           ?_trata_despertador 0001        verificaCRCBUFFCOM@crc 0063  
               _constante_ad 0041          ??_trata_despertador 0020         __size_of_Delay10TCYx 0010  
              __pidataCOMRAM 15A0               __end_of_memcpy 1038                  ?_limpa_tela 0001  
               _SetDDRamAddr 123A               __end_of_tela_1 0D4A               __end_of_tela_2 11E8  
             __end_of_tela_3 1196               __end_of_tela_4 12DA         __size_of_Delay1KTCYx 0010  
         SetDDRamAddr@DDaddr 0016          start_initialization 1326          _contador_um_segundo 002F  
  __end_of_trata_despertador 0F66               ??_trataComando 0064            __size_of_BusyXLCD 003A  
            ??_DelayFor18TCY 0013            __size_of_OpenXLCD 00A4                ?_WriteCmdXLCD 0001  
                tx_data@cont 0012                     ??_memcpy 0019                     ??_tela_1 001F  
                   ??_tela_2 001F                     ??_tela_3 001F                     ??_tela_4 001F  
                crc16@data_p 0012                  crc16@length 0014                  __pbssCOMRAM 0022  
              __pcstackBANK0 0060                  ?_trata_data 0001                  ?_trata_hora 0001  
            Delay1KTCYx@unit 0012                  sprintf@flag 006C                  sprintf@prec 006D  
                  crc16@data 001B          __size_of_limpa_tela 0026             ___lwdiv@dividend 0012  
             ??_WriteCmdXLCD 0013                    _desp_hora 0047                ?_Delay10KTCYx 0001  
                   ?___lwdiv 0012                     ?___lwmod 0019                    _despertar 14C0  
                  _despertou 002A                  __pintcodelo 0018        __end_of_WriteDataXLCD 13E8  
                __smallconst 0800                    _enviaByte 152E                     ?_pic_isr 0001  
                  _init_XLCD 154C               __size_of_crc16 00D2             ___lwdiv@quotient 0017  
                   ?_tx_data 0001                     ?_sprintf 0060                     _BUFFRESP 0033  
             __size_of_telas 0080                     _ADResult 0025   __size_of_trata_despertador 0076  
                   _LATBbits 000F8A                ?_DelayPORXLCD 0001                     _PIR1bits 000F9E  
            OpenXLCD@lcdtype 0017               ??_Delay10KTCYx 0012          __size_of_trata_data 0056  
        __size_of_trata_hora 0020                   ?_despertar 0001         __end_of_trataComando 0A48  
                 ?_enviaByte 0001                    _putrsXLCD 1038             Delay10KTCYx@unit 0013  
                 ?_init_XLCD 0001                    copy_data0 133A                     _BusyXLCD 1426  
             ??_DelayPORXLCD 0013                     _OpenXLCD 0D4A   __end_of_verificaCRCBUFFCOM 10EE  
                   __Hrparam 0000                     __Lrparam 0000             __size_of___lwdiv 0052  
           __size_of___lwmod 0042                 ??_limpa_tela 0017                   sprintf@val 006E  
                 ?_putrsXLCD 0014                     crc16@crc 001D  __size_of_calculaCRCBUFFRESP 0082  
              ??_troca_telas 0020             __size_of_pic_isr 00E8              ___lwdiv@divisor 0014  
            ___lwdiv@counter 0016        __end_of_maquinaEstado 1326                     __ptext10 1368  
                   __ptext11 11E8                     __ptext20 0DEE                     __ptext12 14E8  
                   __ptext21 0FD6                     __ptext13 1038                     __ptext30 156A  
                   __ptext22 0BD2                     __ptext14 13AA                     __ptext31 1426  
                   __ptext23 152E                     __ptext15 10EE                     __ptext32 15B4  
                   __ptext24 154C                     __ptext16 12DA                     __ptext33 1590  
                   __ptext25 0D4A                     __ptext17 1094                     __ptext34 14C0  
                   __ptext26 13E8                     __ptext18 1460                     __ptext27 123A  
                   __ptext19 0862                     __ptext28 15AC                     __ptext29 1580  
                   _desp_min 0046         __end_of_WriteCmdXLCD 1426             __size_of_tx_data 0038  
           __size_of_sprintf 018A                __size_of_main 0070           __end_of_limpa_tela 150E  
              ??_Delay10TCYx 0012                     int$flags 004D                  ??_despertar 0012  
              ??_Delay1KTCYx 0012                  ??_enviaByte 0012                   _INTCONbits 000FF2  
                   memcpy@d1 0012                     memcpy@s1 0014                  ??_init_XLCD 0018  
               ??_trata_data 0012                 ??_trata_hora 0012         __end_of_Delay10KTCYx 1580  
                   intlevel1 0000                    sprintf@ap 006A                    sprintf@sp 0060  
        __end_of_troca_telas 14C0             ___lwmod@dividend 0019                  _serial_data 0032  
      __end_of_DelayFor18TCY 15BC        __size_of_trataComando 01E6           __end_of_trata_data 1144  
         __end_of_trata_hora 152E          __end_of_Delay10TCYx 15A0                  _temperatura 0022  
                   sprintf@c 0070                     sprintf@f 0062         __end_of_DelayPORXLCD 15B4  
                ??_putrsXLCD 0016              ___lwmod@divisor 001B          __end_of_Delay1KTCYx 1590  
            ___lwmod@counter 001D                 _trataComando 0862  
