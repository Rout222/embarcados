

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Dec 03 11:13:41 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 1.41
    53                           ; Generated 25/01/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  001882                     __pidataCOMRAM:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _tela
    92  001882  0001               	dw	1
    93                           
    94                           ;initializer for _ano
    95  001884  07E2               	dw	2018
    96                           
    97                           ;initializer for _primeiraExec
    98  001886  01                 	db	1
    99                           
   100                           ;initializer for _desp_min
   101  001887  0A                 	db	10
   102                           
   103                           ;initializer for _desp_hora
   104  001888  05                 	db	5
   105                           
   106                           ;initializer for _mes
   107  001889  06                 	db	6
   108                           
   109                           ;initializer for _dia
   110  00188A  04                 	db	4
   111                           
   112                           ;initializer for _tela_atual
   113  00188B  01                 	db	1
   114                           
   115                           ;initializer for _revisao
   116  00188C  02                 	db	2
   117                           
   118                           ;initializer for _versao
   119  00188D  01                 	db	1
   120                           
   121                           	psect	idataBANK0
   122  00188E                     __pidataBANK0:
   123                           	opt stack 0
   124                           
   125                           ;initializer for _semanaPrint
   126  00188E  64                 	db	100
   127  00188F  73                 	db	115
   128  001890  74                 	db	116
   129  001891  71                 	db	113
   130  001892  71                 	db	113
   131  001893  73                 	db	115
   132  001894  73                 	db	115
   133                           
   134                           ;initializer for _constante_ad
   135  001895  280A               	dw	10250
   136  001897  3BA0               	dw	15264
   137                           
   138                           	psect	smallconst
   139  000800                     __psmallconst:
   140                           	opt stack 0
   141  000800  00                 	db	0
   142  000801                     _dpowers:
   143                           	opt stack 0
   144  000801  0001               	dw	1
   145  000803  000A               	dw	10
   146  000805  0064               	dw	100
   147  000807  03E8               	dw	1000
   148  000809  2710               	dw	10000
   149  00080B                     __end_of_dpowers:
   150                           	opt stack 0
   151  0000                     _TMR0	set	4054
   152  0000                     _TRISBbits	set	3987
   153  0000                     _TRISB	set	3987
   154  0000                     _PORTB	set	3969
   155  0000                     _LATBbits	set	3978
   156  0000                     _TXREG	set	4013
   157  0000                     _TRISCbits	set	3988
   158  0000                     _TXSTA	set	4012
   159  0000                     _RCSTA	set	4011
   160  0000                     _SPBRG	set	4015
   161  0000                     _TRISA	set	3986
   162  0000                     _T0CONbits	set	4053
   163  0000                     _RCREG	set	4014
   164  0000                     _PIR1bits	set	3998
   165  0000                     _INTCONbits	set	4082
   166  0000                     _PORTAbits	set	3968
   167  0000                     _PORTDbits	set	3971
   168  0000                     _TXIF	set	31988
   169  0000                     _PEIE	set	32662
   170  0000                     _RCIE	set	31981
   171  0000                     _RCIP	set	31997
   172  0000                     _RCIF	set	31989
   173  0000                     _TMR0IF	set	32658
   174  00080B                     STR_3:
   175  00080B  5B                 	db	91	;'['
   176  00080C  25                 	db	37
   177  00080D  63                 	db	99	;'c'
   178  00080E  20                 	db	32
   179  00080F  25                 	db	37
   180  000810  63                 	db	99	;'c'
   181  000811  20                 	db	32
   182  000812  25                 	db	37
   183  000813  63                 	db	99	;'c'
   184  000814  20                 	db	32
   185  000815  25                 	db	37
   186  000816  63                 	db	99	;'c'
   187  000817  20                 	db	32
   188  000818  25                 	db	37
   189  000819  63                 	db	99	;'c'
   190  00081A  20                 	db	32
   191  00081B  25                 	db	37
   192  00081C  63                 	db	99	;'c'
   193  00081D  20                 	db	32
   194  00081E  25                 	db	37
   195  00081F  63                 	db	99	;'c'
   196  000820  5D                 	db	93	;']'
   197  000821  00                 	db	0
   198  000822                     STR_5:
   199  000822  43                 	db	67	;'C'
   200  000823  4F                 	db	79	;'O'
   201  000824  4E                 	db	78	;'N'
   202  000825  53                 	db	83	;'S'
   203  000826  55                 	db	85	;'U'
   204  000827  4D                 	db	77	;'M'
   205  000828  4F                 	db	79	;'O'
   206  000829  20                 	db	32
   207  00082A  49                 	db	73	;'I'
   208  00082B  4E                 	db	78	;'N'
   209  00082C  53                 	db	83	;'S'
   210  00082D  54                 	db	84	;'T'
   211  00082E  41                 	db	65	;'A'
   212  00082F  4E                 	db	78	;'N'
   213  000830  54                 	db	84	;'T'
   214  000831  41                 	db	65	;'A'
   215  000832  4E                 	db	78	;'N'
   216  000833  45                 	db	69	;'E'
   217  000834  4F                 	db	79	;'O'
   218  000835  3A                 	db	58	;':'
   219  000836  20                 	db	32
   220  000837  00                 	db	0
   221  000838                     STR_4:
   222  000838  48                 	db	72	;'H'
   223  000839  6F                 	db	111	;'o'
   224  00083A  72                 	db	114	;'r'
   225  00083B  61                 	db	97	;'a'
   226  00083C  72                 	db	114	;'r'
   227  00083D  69                 	db	105	;'i'
   228  00083E  6F                 	db	111	;'o'
   229  00083F  20                 	db	32
   230  000840  3A                 	db	58	;':'
   231  000841  20                 	db	32
   232  000842  25                 	db	37
   233  000843  64                 	db	100	;'d'
   234  000844  3A                 	db	58	;':'
   235  000845  25                 	db	37
   236  000846  64                 	db	100	;'d'
   237  000847  3A                 	db	58	;':'
   238  000848  25                 	db	37
   239  000849  64                 	db	100	;'d'
   240  00084A  00                 	db	0
   241  00084B                     STR_1:
   242  00084B  20                 	db	32
   243  00084C  20                 	db	32
   244  00084D  20                 	db	32
   245  00084E  20                 	db	32
   246  00084F  20                 	db	32
   247  000850  20                 	db	32
   248  000851  20                 	db	32
   249  000852  20                 	db	32
   250  000853  20                 	db	32
   251  000854  20                 	db	32
   252  000855  20                 	db	32
   253  000856  20                 	db	32
   254  000857  20                 	db	32
   255  000858  20                 	db	32
   256  000859  20                 	db	32
   257  00085A  20                 	db	32
   258  00085B  00                 	db	0
   259  00085C                     STR_7:
   260  00085C  43                 	db	67	;'C'
   261  00085D  4F                 	db	79	;'O'
   262  00085E  4E                 	db	78	;'N'
   263  00085F  53                 	db	83	;'S'
   264  000860  55                 	db	85	;'U'
   265  000861  4D                 	db	77	;'M'
   266  000862  4F                 	db	79	;'O'
   267  000863  20                 	db	32
   268  000864  4D                 	db	77	;'M'
   269  000865  45                 	db	69	;'E'
   270  000866  4E                 	db	78	;'N'
   271  000867  53                 	db	83	;'S'
   272  000868  41                 	db	65	;'A'
   273  000869  4C                 	db	76	;'L'
   274  00086A  3A                 	db	58	;':'
   275  00086B  20                 	db	32
   276  00086C  00                 	db	0
   277  00086D                     STR_9:
   278  00086D  43                 	db	67	;'C'
   279  00086E  4F                 	db	79	;'O'
   280  00086F  4E                 	db	78	;'N'
   281  000870  53                 	db	83	;'S'
   282  000871  55                 	db	85	;'U'
   283  000872  4D                 	db	77	;'M'
   284  000873  4F                 	db	79	;'O'
   285  000874  20                 	db	32
   286  000875  41                 	db	65	;'A'
   287  000876  4E                 	db	78	;'N'
   288  000877  55                 	db	85	;'U'
   289  000878  41                 	db	65	;'A'
   290  000879  4C                 	db	76	;'L'
   291  00087A  3A                 	db	58	;':'
   292  00087B  20                 	db	32
   293  00087C  00                 	db	0
   294  00087D                     STR_13:
   295  00087D  43                 	db	67	;'C'
   296  00087E  4F                 	db	79	;'O'
   297  00087F  4E                 	db	78	;'N'
   298  000880  46                 	db	70	;'F'
   299  000881  49                 	db	73	;'I'
   300  000882  47                 	db	71	;'G'
   301  000883  2E                 	db	46
   302  000884  20                 	db	32
   303  000885  52                 	db	82	;'R'
   304  000886  45                 	db	69	;'E'
   305  000887  4C                 	db	76	;'L'
   306  000888  4F                 	db	79	;'O'
   307  000889  47                 	db	71	;'G'
   308  00088A  49                 	db	73	;'I'
   309  00088B  4F                 	db	79	;'O'
   310  00088C  00                 	db	0
   311  00088D                     STR_14:
   312  00088D  48                 	db	72	;'H'
   313  00088E  6F                 	db	111	;'o'
   314  00088F  72                 	db	114	;'r'
   315  000890  61                 	db	97	;'a'
   316  000891  72                 	db	114	;'r'
   317  000892  69                 	db	105	;'i'
   318  000893  6F                 	db	111	;'o'
   319  000894  20                 	db	32
   320  000895  3A                 	db	58	;':'
   321  000896  20                 	db	32
   322  000897  25                 	db	37
   323  000898  64                 	db	100	;'d'
   324  000899  3A                 	db	58	;':'
   325  00089A  25                 	db	37
   326  00089B  64                 	db	100	;'d'
   327  00089C  00                 	db	0
   328  00089D                     STR_15:
   329  00089D  48                 	db	72	;'H'
   330  00089E  4F                 	db	79	;'O'
   331  00089F  52                 	db	82	;'R'
   332  0008A0  41                 	db	65	;'A'
   333  0008A1  52                 	db	82	;'R'
   334  0008A2  49                 	db	73	;'I'
   335  0008A3  4F                 	db	79	;'O'
   336  0008A4  20                 	db	32
   337  0008A5  4C                 	db	76	;'L'
   338  0008A6  49                 	db	73	;'I'
   339  0008A7  47                 	db	71	;'G'
   340  0008A8  41                 	db	65	;'A'
   341  0008A9  52                 	db	82	;'R'
   342  0008AA  00                 	db	0
   343  0008AB                     STR_11:
   344  0008AB  43                 	db	67	;'C'
   345  0008AC  4F                 	db	79	;'O'
   346  0008AD  4E                 	db	78	;'N'
   347  0008AE  46                 	db	70	;'F'
   348  0008AF  49                 	db	73	;'I'
   349  0008B0  47                 	db	71	;'G'
   350  0008B1  2E                 	db	46
   351  0008B2  20                 	db	32
   352  0008B3  53                 	db	83	;'S'
   353  0008B4  45                 	db	69	;'E'
   354  0008B5  4D                 	db	77	;'M'
   355  0008B6  2E                 	db	46
   356  0008B7  00                 	db	0
   357  0008B8                     STR_17:
   358  0008B8  48                 	db	72	;'H'
   359  0008B9  4F                 	db	79	;'O'
   360  0008BA  52                 	db	82	;'R'
   361  0008BB  41                 	db	65	;'A'
   362  0008BC  52                 	db	82	;'R'
   363  0008BD  49                 	db	73	;'I'
   364  0008BE  4F                 	db	79	;'O'
   365  0008BF  20                 	db	32
   366  0008C0  44                 	db	68	;'D'
   367  0008C1  45                 	db	69	;'E'
   368  0008C2  53                 	db	83	;'S'
   369  0008C3  4C                 	db	76	;'L'
   370  0008C4  00                 	db	0
   371  0008C5                     STR_6:
   372  0008C5  20                 	db	32
   373  0008C6  20                 	db	32
   374  0008C7  20                 	db	32
   375  0008C8  20                 	db	32
   376  0008C9  20                 	db	32
   377  0008CA  20                 	db	32
   378  0008CB  20                 	db	32
   379  0008CC  20                 	db	32
   380  0008CD  25                 	db	37
   381  0008CE  64                 	db	100	;'d'
   382  0008CF  20                 	db	32
   383  0008D0  57                 	db	87	;'W'
   384  0008D1  00                 	db	0
   385  0008D2                     STR_19:
   386  0008D2  44                 	db	68	;'D'
   387  0008D3  65                 	db	101	;'e'
   388  0008D4  66                 	db	102	;'f'
   389  0008D5  61                 	db	97	;'a'
   390  0008D6  6C                 	db	108	;'l'
   391  0008D7  74                 	db	116	;'t'
   392  0008D8  6F                 	db	111	;'o'
   393  0008D9  73                 	db	115	;'s'
   394  0008DA  73                 	db	115	;'s'
   395  0008DB  00                 	db	0
   396  0008DC                     STR_20:
   397  0008DC  74                 	db	116	;'t'
   398  0008DD  65                 	db	101	;'e'
   399  0008DE  6C                 	db	108	;'l'
   400  0008DF  61                 	db	97	;'a'
   401  0008E0  20                 	db	32
   402  0008E1  25                 	db	37
   403  0008E2  69                 	db	105	;'i'
   404  0008E3  00                 	db	0
   405  0000                     
   406                           ; #config settings
   407  0008E4  00                 	db	0	; dummy byte at the end
   408  0000                     
   409                           	psect	cinit
   410  00134E                     __pcinit:
   411                           	opt stack 0
   412  00134E                     start_initialization:
   413                           	opt stack 0
   414  00134E                     __initialization:
   415                           	opt stack 0
   416                           
   417                           ; Initialize objects allocated to BANK0 (11 bytes)
   418                           ; load TBLPTR registers with __pidataBANK0
   419  00134E  0E8E               	movlw	low __pidataBANK0
   420  001350  6EF6               	movwf	tblptrl,c
   421  001352  0E18               	movlw	high __pidataBANK0
   422  001354  6EF7               	movwf	tblptrh,c
   423  001356  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   424  001358  6EF8               	movwf	tblptru,c
   425  00135A  EE00  F0B1         	lfsr	0,__pdataBANK0
   426  00135E  EE10 F00B          	lfsr	1,11
   427  001362                     copy_data0:
   428  001362  0009               	tblrd		*+
   429  001364  CFF5 FFEE          	movff	tablat,postinc0
   430  001368  50E5               	movf	postdec1,w,c
   431  00136A  50E1               	movf	fsr1l,w,c
   432  00136C  E1FA               	bnz	copy_data0
   433                           
   434                           ; Initialize objects allocated to COMRAM (12 bytes)
   435                           ; load TBLPTR registers with __pidataCOMRAM
   436  00136E  0E82               	movlw	low __pidataCOMRAM
   437  001370  6EF6               	movwf	tblptrl,c
   438  001372  0E18               	movlw	high __pidataCOMRAM
   439  001374  6EF7               	movwf	tblptrh,c
   440  001376  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   441  001378  6EF8               	movwf	tblptru,c
   442  00137A  EE00  F041         	lfsr	0,__pdataCOMRAM
   443  00137E  EE10 F00C          	lfsr	1,12
   444  001382                     copy_data1:
   445  001382  0009               	tblrd		*+
   446  001384  CFF5 FFEE          	movff	tablat,postinc0
   447  001388  50E5               	movf	postdec1,w,c
   448  00138A  50E1               	movf	fsr1l,w,c
   449  00138C  E1FA               	bnz	copy_data1
   450                           
   451                           ; Clear objects allocated to BANK1 (120 bytes)
   452  00138E  EE01  F000         	lfsr	0,__pbssBANK1
   453  001392  0E78               	movlw	120
   454  001394                     clear_0:
   455  001394  6AEE               	clrf	postinc0,c
   456  001396  06E8               	decf	wreg,f,c
   457  001398  E1FD               	bnz	clear_0
   458                           
   459                           ; Clear objects allocated to BANK0 (61 bytes)
   460  00139A  EE00  F060         	lfsr	0,__pbssBANK0
   461  00139E  0E3D               	movlw	61
   462  0013A0                     clear_1:
   463  0013A0  6AEE               	clrf	postinc0,c
   464  0013A2  06E8               	decf	wreg,f,c
   465  0013A4  E1FD               	bnz	clear_1
   466                           
   467                           ; Clear objects allocated to COMRAM (21 bytes)
   468  0013A6  EE00  F02C         	lfsr	0,__pbssCOMRAM
   469  0013AA  0E15               	movlw	21
   470  0013AC                     clear_2:
   471  0013AC  6AEE               	clrf	postinc0,c
   472  0013AE  06E8               	decf	wreg,f,c
   473  0013B0  E1FD               	bnz	clear_2
   474  0013B2                     end_of_initialization:
   475                           	opt stack 0
   476  0013B2                     __end_of__initialization:
   477                           	opt stack 0
   478  0013B2  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   479  0013B4  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   480  0013B6  0100               	movlb	0
   481  0013B8  EF35  F008         	goto	_main	;jump to C main() function
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491                           	psect	bssCOMRAM
   492  00002C                     __pbssCOMRAM:
   493                           	opt stack 0
   494  00002C                     _horaAtual:
   495                           	opt stack 0
   496  00002C                     	ds	3
   497  00002F                     _ADResult:
   498                           	opt stack 0
   499  00002F                     	ds	2
   500  000031                     _i:
   501                           	opt stack 0
   502  000031                     	ds	2
   503  000033                     _calcula_temp:
   504                           	opt stack 0
   505  000033                     	ds	1
   506  000034                     _despertou:
   507                           	opt stack 0
   508  000034                     	ds	1
   509  000035                     _contador_alarme:
   510                           	opt stack 0
   511  000035                     	ds	1
   512  000036                     _contador_um_segundo:
   513                           	opt stack 0
   514  000036                     	ds	1
   515  000037                     _contador_interrupcao:
   516                           	opt stack 0
   517  000037                     	ds	1
   518  000038                     _estado:
   519                           	opt stack 0
   520  000038                     	ds	1
   521  000039                     _serial_data:
   522                           	opt stack 0
   523  000039                     	ds	1
   524  00003A                     _BUFFCOM:
   525                           	opt stack 0
   526  00003A                     	ds	7
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           postdec1	equ	0xFE5
   534                           fsr1l	equ	0xFE1
   535                           
   536                           	psect	dataCOMRAM
   537  000041                     __pdataCOMRAM:
   538                           	opt stack 0
   539  000041                     _tela:
   540                           	opt stack 0
   541  000041                     	ds	2
   542  000043                     _ano:
   543                           	opt stack 0
   544  000043                     	ds	2
   545  000045                     _primeiraExec:
   546                           	opt stack 0
   547  000045                     	ds	1
   548  000046                     _desp_min:
   549                           	opt stack 0
   550  000046                     	ds	1
   551  000047                     _desp_hora:
   552                           	opt stack 0
   553  000047                     	ds	1
   554  000048                     _mes:
   555                           	opt stack 0
   556  000048                     	ds	1
   557  000049                     _dia:
   558                           	opt stack 0
   559  000049                     	ds	1
   560  00004A                     _tela_atual:
   561                           	opt stack 0
   562  00004A                     	ds	1
   563  00004B                     _revisao:
   564                           	opt stack 0
   565  00004B                     	ds	1
   566  00004C                     _versao:
   567                           	opt stack 0
   568  00004C                     	ds	1
   569                           tblptru	equ	0xFF8
   570                           tblptrh	equ	0xFF7
   571                           tblptrl	equ	0xFF6
   572                           tablat	equ	0xFF5
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           postdec1	equ	0xFE5
   576                           fsr1l	equ	0xFE1
   577                           
   578                           	psect	bssBANK0
   579  000060                     __pbssBANK0:
   580                           	opt stack 0
   581  000060                     _semanaAlarme:
   582                           	opt stack 0
   583  000060                     	ds	14
   584  00006E                     _temperatura:
   585                           	opt stack 0
   586  00006E                     	ds	4
   587  000072                     _telaAntiga:
   588                           	opt stack 0
   589  000072                     	ds	2
   590  000074                     _funcao:
   591                           	opt stack 0
   592  000074                     	ds	2
   593  000076                     _mensagemL2:
   594                           	opt stack 0
   595  000076                     	ds	16
   596  000086                     _mensagemL1:
   597                           	opt stack 0
   598  000086                     	ds	16
   599  000096                     _BUFFRESP:
   600                           	opt stack 0
   601  000096                     	ds	7
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           postdec1	equ	0xFE5
   609                           fsr1l	equ	0xFE1
   610                           
   611                           	psect	dataBANK0
   612  0000B1                     __pdataBANK0:
   613                           	opt stack 0
   614  0000B1                     _semanaPrint:
   615                           	opt stack 0
   616  0000B1                     	ds	7
   617  0000B8                     _constante_ad:
   618                           	opt stack 0
   619  0000B8                     	ds	4
   620                           tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           postinc0	equ	0xFEE
   625                           wreg	equ	0xFE8
   626                           postdec1	equ	0xFE5
   627                           fsr1l	equ	0xFE1
   628                           
   629                           	psect	bssBANK1
   630  000100                     __pbssBANK1:
   631                           	opt stack 0
   632  000100                     _energia:
   633                           	opt stack 0
   634  000100                     	ds	120
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1l	equ	0xFE1
   643                           
   644                           	psect	cstackBANK0
   645  00009D                     __pcstackBANK0:
   646                           	opt stack 0
   647  00009D                     ?_sprintf:
   648                           	opt stack 0
   649  00009D                     sprintf@sp:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x0
   653  00009D                     	ds	2
   654  00009F                     sprintf@f:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x2
   658  00009F                     	ds	16
   659  0000AF                     main@b:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x12
   663  0000AF                     	ds	2
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           	psect	cstackCOMRAM
   674  000001                     __pcstackCOMRAM:
   675                           	opt stack 0
   676  000001                     ??_pic_isr:
   677  000001                     
   678                           ; 1 bytes @ 0x0
   679  000001                     	ds	17
   680  000012                     ??_Delay10KTCYx:
   681  000012                     ??_troca_telas:
   682  000012                     ?_crc16:
   683                           	opt stack 0
   684  000012                     ?___lwdiv:
   685                           	opt stack 0
   686  000012                     enviaByte@BYTE:
   687                           	opt stack 0
   688  000012                     Delay10TCYx@unit:
   689                           	opt stack 0
   690  000012                     Delay1KTCYx@unit:
   691                           	opt stack 0
   692  000012                     crc16@data_p:
   693                           	opt stack 0
   694  000012                     tx_data@cont:
   695                           	opt stack 0
   696  000012                     ___lwdiv@dividend:
   697                           	opt stack 0
   698  000012                     memcpy@d1:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x11
   702  000012                     	ds	1
   703  000013                     ??_SetDDRamAddr:
   704  000013                     WriteCmdXLCD@cmd:
   705                           	opt stack 0
   706  000013                     WriteDataXLCD@data:
   707                           	opt stack 0
   708  000013                     Delay10KTCYx@unit:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x12
   712  000013                     	ds	1
   713  000014                     crc16@length:
   714                           	opt stack 0
   715  000014                     putrsXLCD@buffer:
   716                           	opt stack 0
   717  000014                     ___lwdiv@divisor:
   718                           	opt stack 0
   719  000014                     memcpy@s1:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x13
   723  000014                     	ds	2
   724  000016                     ??_crc16:
   725  000016                     SetDDRamAddr@DDaddr:
   726                           	opt stack 0
   727  000016                     ___lwdiv@counter:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x15
   731  000016                     	ds	1
   732  000017                     OpenXLCD@lcdtype:
   733                           	opt stack 0
   734  000017                     escreveMensagem@l1:
   735                           	opt stack 0
   736  000017                     ___lwdiv@quotient:
   737                           	opt stack 0
   738  000017                     memcpy@n:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x16
   742  000017                     	ds	1
   743  000018                     
   744                           ; 1 bytes @ 0x17
   745  000018                     	ds	1
   746  000019                     ?___lwmod:
   747                           	opt stack 0
   748  000019                     escreveMensagem@l2:
   749                           	opt stack 0
   750  000019                     ___lwmod@dividend:
   751                           	opt stack 0
   752  000019                     memcpy@s:
   753                           	opt stack 0
   754                           
   755                           ; 3 bytes @ 0x18
   756  000019                     	ds	1
   757  00001A                     crc16@i:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x19
   761  00001A                     	ds	1
   762  00001B                     crc16@data:
   763                           	opt stack 0
   764  00001B                     ___lwmod@divisor:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x1A
   768  00001B                     	ds	1
   769  00001C                     memcpy@d:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x1B
   773  00001C                     	ds	1
   774  00001D                     ___lwmod@counter:
   775                           	opt stack 0
   776  00001D                     crc16@crc:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x1C
   780  00001D                     	ds	1
   781  00001E                     ??_sprintf:
   782                           
   783                           ; 1 bytes @ 0x1D
   784  00001E                     	ds	1
   785  00001F                     ??_calculaCRCBUFFRESP:
   786  00001F                     verificaCRCBUFFCOM@crc1:
   787                           	opt stack 0
   788  00001F                     sprintf@flag:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x1E
   792  00001F                     	ds	1
   793  000020                     verificaCRCBUFFCOM@crc2:
   794                           	opt stack 0
   795  000020                     sprintf@prec:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x1F
   799  000020                     	ds	1
   800  000021                     verificaCRCBUFFCOM@CRC_OK:
   801                           	opt stack 0
   802  000021                     sprintf@ap:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x20
   806  000021                     	ds	1
   807  000022                     calculaCRCBUFFRESP@crc1:
   808                           	opt stack 0
   809  000022                     verificaCRCBUFFCOM@crc:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x21
   813  000022                     	ds	1
   814  000023                     calculaCRCBUFFRESP@crc2:
   815                           	opt stack 0
   816  000023                     sprintf@val:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x22
   820  000023                     	ds	1
   821  000024                     calculaCRCBUFFRESP@crc:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x23
   825  000024                     	ds	1
   826  000025                     sprintf@c:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x24
   830  000025                     	ds	1
   831  000026                     ??_telas:
   832  000026                     ??_trataComando:
   833                           
   834                           ; 1 bytes @ 0x25
   835  000026                     	ds	2
   836  000028                     trataComando@iterator:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x27
   840  000028                     	ds	2
   841  00002A                     ??_main:
   842                           
   843                           ; 1 bytes @ 0x29
   844  00002A                     	ds	2
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           postinc0	equ	0xFEE
   850                           wreg	equ	0xFE8
   851                           postdec1	equ	0xFE5
   852                           fsr1l	equ	0xFE1
   853                           
   854 ;;
   855 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   856 ;;
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 336 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  b               2   18[BANK0 ] int 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   873 ;;      Params:         0       0       0       0       0       0       0       0       0
   874 ;;      Locals:         0       2       0       0       0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0       0       0
   876 ;;      Totals:         2       2       0       0       0       0       0       0       0
   877 ;;Total ram usage:        4 bytes
   878 ;; Hardware stack levels required when called:    7
   879 ;; This function calls:
   880 ;;		_despertar
   881 ;;		_init_XLCD
   882 ;;		_maquinaEstado
   883 ;;		_telas
   884 ;;		_trata_data
   885 ;;		_trata_hora
   886 ;;		_troca_telas
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  00106A                     __ptext0:
   894                           	opt stack 0
   895  00106A                     _main:
   896                           	opt stack 24
   897                           
   898                           ;main.c: 337: T0CONbits.TMR0ON = 0;
   899                           
   900                           ;incstack = 0
   901  00106A  9ED5               	bcf	4053,7,c	;volatile
   902                           
   903                           ;main.c: 338: INTCONbits.TMR0IE = 1;
   904  00106C  8AF2               	bsf	intcon,5,c	;volatile
   905                           
   906                           ;main.c: 339: INTCONbits.TMR0IF = 0;
   907  00106E  94F2               	bcf	intcon,2,c	;volatile
   908                           
   909                           ;main.c: 340: T0CONbits.T08BIT = 0;
   910  001070  9CD5               	bcf	4053,6,c	;volatile
   911                           
   912                           ;main.c: 341: T0CONbits.PSA = 0;
   913  001072  96D5               	bcf	4053,3,c	;volatile
   914                           
   915                           ;main.c: 343: T0CONbits.T0PS0 = 1;
   916  001074  80D5               	bsf	4053,0,c	;volatile
   917                           
   918                           ;main.c: 344: T0CONbits.T0PS1 = 1;
   919  001076  82D5               	bsf	4053,1,c	;volatile
   920                           
   921                           ;main.c: 345: T0CONbits.T0PS2 = 0;
   922  001078  94D5               	bcf	4053,2,c	;volatile
   923                           
   924                           ;main.c: 347: T0CONbits.T0CS = 0;
   925  00107A  9AD5               	bcf	4053,5,c	;volatile
   926                           
   927                           ;main.c: 348: TMR0 = 32768;
   928  00107C  0E80               	movlw	128
   929  00107E  6ED7               	movwf	4055,c	;volatile
   930  001080  0E00               	movlw	0
   931  001082  6ED6               	movwf	4054,c	;volatile
   932                           
   933                           ;main.c: 349: T0CONbits.TMR0ON = 1;
   934  001084  8ED5               	bsf	4053,7,c	;volatile
   935                           
   936                           ;main.c: 350: INTCONbits.GIEH = 1;
   937  001086  8EF2               	bsf	intcon,7,c	;volatile
   938                           
   939                           ;main.c: 351: INTCONbits.GIEL = 1;
   940  001088  8CF2               	bsf	intcon,6,c	;volatile
   941                           
   942                           ;main.c: 354: TRISA = 0x00000000;
   943  00108A  0E00               	movlw	0
   944  00108C  6E92               	movwf	3986,c	;volatile
   945                           
   946                           ;main.c: 355: init_XLCD();
   947  00108E  EC17  F00C         	call	_init_XLCD	;wreg free
   948                           
   949                           ;main.c: 357: SPBRG = (((48000000/64)/9600)-1);
   950  001092  0E4D               	movlw	77
   951  001094  6EAF               	movwf	4015,c	;volatile
   952                           
   953                           ;main.c: 361: RCSTA = 0b10010000;
   954  001096  0E90               	movlw	144
   955  001098  6EAB               	movwf	4011,c	;volatile
   956                           
   957                           ;main.c: 362: TXSTA = 0b00100000;
   958  00109A  0E20               	movlw	32
   959  00109C  6EAC               	movwf	4012,c	;volatile
   960                           
   961                           ;main.c: 363: TRISCbits.RC6 = 0;
   962  00109E  9C94               	bcf	3988,6,c	;volatile
   963                           
   964                           ;main.c: 364: TRISCbits.RC7 = 1;
   965  0010A0  8E94               	bsf	3988,7,c	;volatile
   966                           
   967                           ;main.c: 366: RCIF = 0;
   968  0010A2  9A9E               	bcf	3998,5,c	;volatile
   969                           
   970                           ;main.c: 367: RCIP = 0;
   971  0010A4  9A9F               	bcf	3999,5,c	;volatile
   972                           
   973                           ;main.c: 368: RCIE = 1;
   974  0010A6  8A9D               	bsf	3997,5,c	;volatile
   975                           
   976                           ;main.c: 369: PEIE = 1;
   977  0010A8  8CF2               	bsf	intcon,6,c	;volatile
   978                           
   979                           ;main.c: 372: horaAtual.h = 0x0;
   980  0010AA  0E00               	movlw	0
   981  0010AC  6E2C               	movwf	_horaAtual,c
   982                           
   983                           ;main.c: 373: horaAtual.m = 0x0;
   984  0010AE  0E00               	movlw	0
   985  0010B0  6E2D               	movwf	_horaAtual+1,c
   986                           
   987                           ;main.c: 374: horaAtual.s = 0x0;
   988  0010B2  0E00               	movlw	0
   989  0010B4  6E2E               	movwf	_horaAtual+2,c
   990                           
   991                           ;main.c: 378: for (int b = 1; b<31; b++){
   992  0010B6  0E00               	movlw	0
   993  0010B8  0100               	movlb	0	; () banked
   994  0010BA  6FB0               	movwf	(main@b+1)& (0+255),b
   995  0010BC  0E01               	movlw	1
   996  0010BE  6FAF               	movwf	main@b& (0+255),b
   997  0010C0                     l3302:
   998                           
   999                           ; BSR set to: 0
  1000  0010C0  0100               	movlb	0	; () banked
  1001  0010C2  BFB0               	btfsc	(main@b+1)& (0+255),7,b
  1002  0010C4  D008               	goto	l3306
  1003  0010C6  0100               	movlb	0	; () banked
  1004  0010C8  51B0               	movf	(main@b+1)& (0+255),w,b
  1005  0010CA  E137               	bnz	l3312
  1006  0010CC  0E1F               	movlw	31
  1007  0010CE  0100               	movlb	0	; () banked
  1008  0010D0  5DAF               	subwf	main@b& (0+255),w,b
  1009  0010D2  B0D8               	btfsc	status,0,c
  1010  0010D4  D032               	goto	l3312
  1011  0010D6                     l3306:
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;main.c: 379: energia.consumoDia[b].potencia = 0;
  1015  0010D6  0E00               	movlw	low _energia
  1016  0010D8  6E2A               	movwf	??_main& (0+255),c
  1017  0010DA  0E01               	movlw	high _energia
  1018  0010DC  6E2B               	movwf	(??_main+1)& (0+255),c
  1019  0010DE  90D8               	bcf	status,0,c
  1020  0010E0  0100               	movlb	0	; () banked
  1021  0010E2  35AF               	rlcf	main@b& (0+255),w,b
  1022  0010E4  6ED9               	movwf	fsr2l,c
  1023  0010E6  0100               	movlb	0	; () banked
  1024  0010E8  35B0               	rlcf	(main@b+1)& (0+255),w,b
  1025  0010EA  6EDA               	movwf	fsr2h,c
  1026  0010EC  90D8               	bcf	status,0,c
  1027  0010EE  36D9               	rlcf	fsr2l,f,c
  1028  0010F0  36DA               	rlcf	fsr2h,f,c
  1029  0010F2  502A               	movf	??_main,w,c
  1030  0010F4  26D9               	addwf	fsr2l,f,c
  1031  0010F6  502B               	movf	??_main+1,w,c
  1032  0010F8  22DA               	addwfc	fsr2h,f,c
  1033  0010FA  0E00               	movlw	0
  1034  0010FC  6EDE               	movwf	postinc2,c
  1035  0010FE  0E00               	movlw	0
  1036  001100  6EDD               	movwf	postdec2,c
  1037                           
  1038                           ;main.c: 380: energia.consumoDia[b].dia = 0;
  1039  001102  C0AF  F02A         	movff	main@b,??_main
  1040  001106  C0B0  F02B         	movff	main@b+1,??_main+1
  1041  00110A  90D8               	bcf	status,0,c
  1042  00110C  362A               	rlcf	??_main,f,c
  1043  00110E  362B               	rlcf	??_main+1,f,c
  1044  001110  90D8               	bcf	status,0,c
  1045  001112  362A               	rlcf	??_main,f,c
  1046  001114  362B               	rlcf	??_main+1,f,c
  1047  001116  0E02               	movlw	2
  1048  001118  262A               	addwf	??_main,f,c
  1049  00111A  0E00               	movlw	0
  1050  00111C  222B               	addwfc	??_main+1,f,c
  1051  00111E  0E00               	movlw	low _energia
  1052  001120  242A               	addwf	??_main,w,c
  1053  001122  6ED9               	movwf	fsr2l,c
  1054  001124  0E01               	movlw	high _energia
  1055  001126  202B               	addwfc	??_main+1,w,c
  1056  001128  6EDA               	movwf	fsr2h,c
  1057  00112A  0E00               	movlw	0
  1058  00112C  6EDE               	movwf	postinc2,c
  1059  00112E  0E00               	movlw	0
  1060  001130  6EDD               	movwf	postdec2,c
  1061                           
  1062                           ; BSR set to: 0
  1063  001132  0100               	movlb	0	; () banked
  1064  001134  4BAF               	infsnz	main@b& (0+255),f,b
  1065  001136  2BB0               	incf	(main@b+1)& (0+255),f,b
  1066  001138  D7C3               	goto	l3302
  1067  00113A                     l3312:
  1068                           
  1069                           ;main.c: 385: if(contador_um_segundo == 1){
  1070  00113A  0436               	decf	_contador_um_segundo,w,c
  1071  00113C  A4D8               	btfss	status,2,c
  1072  00113E  D00C               	goto	l3326
  1073                           
  1074                           ;main.c: 386: contador_um_segundo = 0;
  1075  001140  0E00               	movlw	0
  1076  001142  6E36               	movwf	_contador_um_segundo,c
  1077                           
  1078                           ;main.c: 387: trata_hora();
  1079  001144  ECF8  F00B         	call	_trata_hora	;wreg free
  1080                           
  1081                           ;main.c: 388: trata_data();
  1082  001148  EC3D  F00A         	call	_trata_data	;wreg free
  1083                           
  1084                           ;main.c: 389: despertar();
  1085  00114C  ECBE  F00B         	call	_despertar	;wreg free
  1086                           
  1087                           ;main.c: 390: maquinaEstado();
  1088  001150  ECE1  F00A         	call	_maquinaEstado	;wreg free
  1089                           
  1090                           ;main.c: 391: telas();
  1091  001154  EC73  F004         	call	_telas	;wreg free
  1092  001158                     l3326:
  1093                           
  1094                           ;main.c: 392: }
  1095                           ;main.c: 393: troca_telas();
  1096  001158  EC28  F00B         	call	_troca_telas	;wreg free
  1097  00115C  D7EE               	goto	l3312
  1098  00115E                     __end_of_main:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           intcon	equ	0xFF2
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec1	equ	0xFE5
  1108                           fsr1l	equ	0xFE1
  1109                           postinc2	equ	0xFDE
  1110                           postdec2	equ	0xFDD
  1111                           fsr2h	equ	0xFDA
  1112                           fsr2l	equ	0xFD9
  1113                           status	equ	0xFD8
  1114                           
  1115 ;; *************** function _troca_telas *****************
  1116 ;; Defined at:
  1117 ;;		line 229 in file "main.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1133 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1134 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1135 ;;Total ram usage:        2 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text1
  1146  001650                     __ptext1:
  1147                           	opt stack 0
  1148  001650                     _troca_telas:
  1149                           	opt stack 29
  1150                           
  1151                           ;main.c: 230: if(PORTDbits.RD0){
  1152                           
  1153                           ;incstack = 0
  1154  001650  A083               	btfss	3971,0,c	;volatile
  1155  001652  0012               	return	
  1156                           
  1157                           ;main.c: 231: _delay((unsigned long)((150)*(48000000/4000.0)));
  1158  001654  0E0A               	movlw	10
  1159  001656  6E13               	movwf	(??_troca_telas+1)& (0+255),c
  1160  001658  0E22               	movlw	34
  1161  00165A  6E12               	movwf	??_troca_telas& (0+255),c
  1162  00165C  0EA1               	movlw	161
  1163  00165E                     u2247:
  1164  00165E  2EE8               	decfsz	wreg,f,c
  1165  001660  D7FE               	bra	u2247
  1166  001662  2E12               	decfsz	??_troca_telas& (0+255),f,c
  1167  001664  D7FC               	bra	u2247
  1168  001666  2E13               	decfsz	(??_troca_telas+1)& (0+255),f,c
  1169  001668  D7FA               	bra	u2247
  1170  00166A  F000               	nop	
  1171                           
  1172                           ;main.c: 233: tela ++;
  1173  00166C  4A41               	infsnz	_tela,f,c
  1174  00166E  2A42               	incf	_tela+1,f,c
  1175                           
  1176                           ;main.c: 234: if(tela>8){tela = 1;}
  1177  001670  BE42               	btfsc	_tela+1,7,c
  1178  001672  D00A               	goto	l160
  1179  001674  5042               	movf	_tela+1,w,c
  1180  001676  E104               	bnz	u2070
  1181  001678  0E09               	movlw	9
  1182  00167A  5C41               	subwf	_tela,w,c
  1183  00167C  A0D8               	btfss	status,0,c
  1184  00167E  D004               	goto	l160
  1185  001680                     u2070:
  1186  001680  0E00               	movlw	0
  1187  001682  6E42               	movwf	_tela+1,c
  1188  001684  0E01               	movlw	1
  1189  001686  6E41               	movwf	_tela,c
  1190  001688                     l160:
  1191  001688  A083               	btfss	3971,0,c	;volatile
  1192  00168A  0012               	return	
  1193  00168C  D7FD               	goto	l160
  1194  00168E                     __end_of_troca_telas:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           intcon	equ	0xFF2
  1201                           postinc0	equ	0xFEE
  1202                           wreg	equ	0xFE8
  1203                           postdec1	equ	0xFE5
  1204                           fsr1l	equ	0xFE1
  1205                           postinc2	equ	0xFDE
  1206                           postdec2	equ	0xFDD
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _trata_hora *****************
  1212 ;; Defined at:
  1213 ;;		line 269 in file "main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1227 ;;      Params:         0       0       0       0       0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1230 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text2
  1242  0017F0                     __ptext2:
  1243                           	opt stack 0
  1244  0017F0                     _trata_hora:
  1245                           	opt stack 29
  1246                           
  1247                           ;main.c: 270: if((horaAtual.s) == 60){
  1248                           
  1249                           ;incstack = 0
  1250  0017F0  0E3C               	movlw	60
  1251  0017F2  182E               	xorwf	_horaAtual+2,w,c
  1252  0017F4  A4D8               	btfss	status,2,c
  1253  0017F6  D004               	goto	l3222
  1254                           
  1255                           ;main.c: 271: horaAtual.m += 1;
  1256  0017F8  2A2D               	incf	_horaAtual+1,f,c
  1257                           
  1258                           ;main.c: 272: horaAtual.s = 0;
  1259  0017FA  0E00               	movlw	0
  1260  0017FC  6E2E               	movwf	_horaAtual+2,c
  1261                           
  1262                           ;main.c: 273: return;
  1263  0017FE  0012               	return	
  1264  001800                     l3222:
  1265                           
  1266                           ;main.c: 274: }
  1267                           ;main.c: 275: if((horaAtual.m) == 60){
  1268  001800  0E3C               	movlw	60
  1269  001802  182D               	xorwf	_horaAtual+1,w,c
  1270  001804  A4D8               	btfss	status,2,c
  1271  001806  0012               	return	
  1272                           
  1273                           ;main.c: 276: horaAtual.h+=1;
  1274  001808  2A2C               	incf	_horaAtual,f,c
  1275                           
  1276                           ;main.c: 277: horaAtual.m = 0;
  1277  00180A  0E00               	movlw	0
  1278  00180C  6E2D               	movwf	_horaAtual+1,c
  1279                           
  1280                           ;main.c: 278: return;
  1281  00180E  0012               	return	
  1282  001810                     __end_of_trata_hora:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           intcon	equ	0xFF2
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           postdec1	equ	0xFE5
  1292                           fsr1l	equ	0xFE1
  1293                           postinc2	equ	0xFDE
  1294                           postdec2	equ	0xFDD
  1295                           fsr2h	equ	0xFDA
  1296                           fsr2l	equ	0xFD9
  1297                           status	equ	0xFD8
  1298                           
  1299 ;; *************** function _trata_data *****************
  1300 ;; Defined at:
  1301 ;;		line 245 in file "main.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1315 ;;      Params:         0       0       0       0       0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1318 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1319 ;;Total ram usage:        0 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text3
  1330  00147A                     __ptext3:
  1331                           	opt stack 0
  1332  00147A                     _trata_data:
  1333                           	opt stack 29
  1334                           
  1335                           ;main.c: 246: if(horaAtual.h == 24){
  1336                           
  1337                           ;incstack = 0
  1338  00147A  0E18               	movlw	24
  1339  00147C  182C               	xorwf	_horaAtual,w,c
  1340  00147E  A4D8               	btfss	status,2,c
  1341  001480  D004               	goto	l3184
  1342                           
  1343                           ;main.c: 247: dia+=1;
  1344  001482  2A49               	incf	_dia,f,c
  1345                           
  1346                           ;main.c: 248: horaAtual.h = 0;
  1347  001484  0E00               	movlw	0
  1348  001486  6E2C               	movwf	_horaAtual,c
  1349                           
  1350                           ;main.c: 249: return;
  1351  001488  0012               	return	
  1352  00148A                     l3184:
  1353                           
  1354                           ;main.c: 250: }
  1355                           ;main.c: 251: if(mes == 2 && dia == 28){
  1356  00148A  0E02               	movlw	2
  1357  00148C  1848               	xorwf	_mes,w,c
  1358  00148E  A4D8               	btfss	status,2,c
  1359  001490  D008               	goto	l3194
  1360  001492  0E1C               	movlw	28
  1361  001494  1849               	xorwf	_dia,w,c
  1362  001496  A4D8               	btfss	status,2,c
  1363  001498  D004               	goto	l3194
  1364                           
  1365                           ;main.c: 252: mes+=1;
  1366  00149A  2A48               	incf	_mes,f,c
  1367                           
  1368                           ;main.c: 253: dia = 1;
  1369  00149C  0E01               	movlw	1
  1370  00149E  6E49               	movwf	_dia,c
  1371                           
  1372                           ;main.c: 254: return;
  1373  0014A0  0012               	return	
  1374  0014A2                     l3194:
  1375                           
  1376                           ;main.c: 255: }
  1377                           ;main.c: 256: if(mes == 12 && dia == 30){
  1378  0014A2  0E0C               	movlw	12
  1379  0014A4  1848               	xorwf	_mes,w,c
  1380  0014A6  A4D8               	btfss	status,2,c
  1381  0014A8  D00B               	goto	l3206
  1382  0014AA  0E1E               	movlw	30
  1383  0014AC  1849               	xorwf	_dia,w,c
  1384  0014AE  A4D8               	btfss	status,2,c
  1385  0014B0  D007               	goto	l3206
  1386                           
  1387                           ;main.c: 257: ano+=1;
  1388  0014B2  4A43               	infsnz	_ano,f,c
  1389  0014B4  2A44               	incf	_ano+1,f,c
  1390                           
  1391                           ;main.c: 258: mes = 1;
  1392  0014B6  0E01               	movlw	1
  1393  0014B8  6E48               	movwf	_mes,c
  1394                           
  1395                           ;main.c: 259: dia = 1;
  1396  0014BA  0E01               	movlw	1
  1397  0014BC  6E49               	movwf	_dia,c
  1398                           
  1399                           ;main.c: 260: return;
  1400  0014BE  0012               	return	
  1401  0014C0                     l3206:
  1402                           
  1403                           ;main.c: 261: }
  1404                           ;main.c: 262: if(dia == 30){
  1405  0014C0  0E1E               	movlw	30
  1406  0014C2  1849               	xorwf	_dia,w,c
  1407  0014C4  A4D8               	btfss	status,2,c
  1408  0014C6  0012               	return	
  1409                           
  1410                           ;main.c: 263: mes+=1;
  1411  0014C8  2A48               	incf	_mes,f,c
  1412                           
  1413                           ;main.c: 264: dia = 1;
  1414  0014CA  0E01               	movlw	1
  1415  0014CC  6E49               	movwf	_dia,c
  1416                           
  1417                           ;main.c: 265: return;
  1418  0014CE  0012               	return	
  1419  0014D0                     __end_of_trata_data:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           intcon	equ	0xFF2
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           postinc2	equ	0xFDE
  1431                           postdec2	equ	0xFDD
  1432                           fsr2h	equ	0xFDA
  1433                           fsr2l	equ	0xFD9
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _telas *****************
  1437 ;; Defined at:
  1438 ;;		line 155 in file "main.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1454 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1455 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    6
  1459 ;; This function calls:
  1460 ;;		_escreveMensagem
  1461 ;;		_limpaTela
  1462 ;;		_sprintf
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text4
  1469  0008E6                     __ptext4:
  1470                           	opt stack 0
  1471  0008E6                     _telas:
  1472                           	opt stack 24
  1473                           
  1474                           ;main.c: 157: switch(tela){
  1475                           
  1476                           ;incstack = 0
  1477  0008E6  D1F5               	goto	l3162
  1478  0008E8                     l3106:
  1479                           
  1480                           ;main.c: 159: limpaTela();
  1481  0008E8  ECD2  F00B         	call	_limpaTela	;wreg free
  1482                           
  1483                           ;main.c: 160: sprintf(mensagemL1,"[%c %c %c %c %c %c %c]", semanaPrint[0], semanaPrint[1
      +                          ], semanaPrint[2], semanaPrint[3], semanaPrint[4], semanaPrint[5], semanaPrint[6]);
  1484  0008EC  0E86               	movlw	low _mensagemL1
  1485  0008EE  0100               	movlb	0	; () banked
  1486  0008F0  6F9D               	movwf	sprintf@sp& (0+255),b
  1487  0008F2  0E00               	movlw	high _mensagemL1
  1488  0008F4  0100               	movlb	0	; () banked
  1489  0008F6  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1490  0008F8  0E0B               	movlw	low STR_3
  1491  0008FA  0100               	movlb	0	; () banked
  1492  0008FC  6F9F               	movwf	sprintf@f& (0+255),b
  1493  0008FE  0E08               	movlw	high STR_3
  1494  000900  0100               	movlb	0	; () banked
  1495  000902  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1496  000904  C0B1  F0A1         	movff	_semanaPrint,?_sprintf+4
  1497  000908  0100               	movlb	0	; () banked
  1498  00090A  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1499  00090C  C0B2  F0A3         	movff	_semanaPrint+1,?_sprintf+6
  1500  000910  0100               	movlb	0	; () banked
  1501  000912  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1502  000914  C0B3  F0A5         	movff	_semanaPrint+2,?_sprintf+8
  1503  000918  0100               	movlb	0	; () banked
  1504  00091A  6BA6               	clrf	(?_sprintf+9)& (0+255),b
  1505  00091C  C0B4  F0A7         	movff	_semanaPrint+3,?_sprintf+10
  1506  000920  0100               	movlb	0	; () banked
  1507  000922  6BA8               	clrf	(?_sprintf+11)& (0+255),b
  1508  000924  C0B5  F0A9         	movff	_semanaPrint+4,?_sprintf+12
  1509  000928  0100               	movlb	0	; () banked
  1510  00092A  6BAA               	clrf	(?_sprintf+13)& (0+255),b
  1511  00092C  C0B6  F0AB         	movff	_semanaPrint+5,?_sprintf+14
  1512  000930  0100               	movlb	0	; () banked
  1513  000932  6BAC               	clrf	(?_sprintf+15)& (0+255),b
  1514  000934  C0B7  F0AD         	movff	_semanaPrint+6,?_sprintf+16
  1515  000938  0100               	movlb	0	; () banked
  1516  00093A  6BAE               	clrf	(?_sprintf+17)& (0+255),b
  1517  00093C  EC74  F007         	call	_sprintf	;wreg free
  1518                           
  1519                           ;main.c: 161: sprintf(mensagemL2,"Horario : %d:%d:%d",horaAtual.h , horaAtual.m, horaAtu
      +                          al.s);
  1520  000940  0E76               	movlw	low _mensagemL2
  1521  000942  0100               	movlb	0	; () banked
  1522  000944  6F9D               	movwf	sprintf@sp& (0+255),b
  1523  000946  0E00               	movlw	high _mensagemL2
  1524  000948  0100               	movlb	0	; () banked
  1525  00094A  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1526  00094C  0E38               	movlw	low STR_4
  1527  00094E  0100               	movlb	0	; () banked
  1528  000950  6F9F               	movwf	sprintf@f& (0+255),b
  1529  000952  0E08               	movlw	high STR_4
  1530  000954  0100               	movlb	0	; () banked
  1531  000956  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1532  000958  C02C  F0A1         	movff	_horaAtual,?_sprintf+4
  1533  00095C  0100               	movlb	0	; () banked
  1534  00095E  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1535  000960  C02D  F0A3         	movff	_horaAtual+1,?_sprintf+6
  1536  000964  0100               	movlb	0	; () banked
  1537  000966  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1538  000968  C02E  F0A5         	movff	_horaAtual+2,?_sprintf+8
  1539  00096C  0100               	movlb	0	; () banked
  1540  00096E  6BA6               	clrf	(?_sprintf+9)& (0+255),b
  1541  000970  EC74  F007         	call	_sprintf	;wreg free
  1542                           
  1543                           ;main.c: 162: escreveMensagem(mensagemL1,mensagemL2);
  1544  000974  0E86               	movlw	low _mensagemL1
  1545  000976  6E17               	movwf	escreveMensagem@l1,c
  1546  000978  0E00               	movlw	high _mensagemL1
  1547  00097A  6E18               	movwf	escreveMensagem@l1+1,c
  1548  00097C  0E76               	movlw	low _mensagemL2
  1549  00097E  6E19               	movwf	escreveMensagem@l2,c
  1550  000980  0E00               	movlw	high _mensagemL2
  1551  000982  6E1A               	movwf	escreveMensagem@l2+1,c
  1552  000984  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1553                           
  1554                           ;main.c: 163: break;
  1555  000988  0012               	return	
  1556  00098A                     l3112:
  1557                           
  1558                           ;main.c: 166: limpaTela();
  1559  00098A  ECD2  F00B         	call	_limpaTela	;wreg free
  1560                           
  1561                           ;main.c: 167: sprintf(mensagemL1,"CONSUMO INSTANTANEO: ");
  1562  00098E  0E86               	movlw	low _mensagemL1
  1563  000990  0100               	movlb	0	; () banked
  1564  000992  6F9D               	movwf	sprintf@sp& (0+255),b
  1565  000994  0E00               	movlw	high _mensagemL1
  1566  000996  0100               	movlb	0	; () banked
  1567  000998  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1568  00099A  0E22               	movlw	low STR_5
  1569  00099C  0100               	movlb	0	; () banked
  1570  00099E  6F9F               	movwf	sprintf@f& (0+255),b
  1571  0009A0  0E08               	movlw	high STR_5
  1572  0009A2  0100               	movlb	0	; () banked
  1573  0009A4  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1574  0009A6  EC74  F007         	call	_sprintf	;wreg free
  1575                           
  1576                           ;main.c: 168: sprintf(mensagemL2,"        %d W",energia.consumoDia[dia].potencia);
  1577  0009AA  0E76               	movlw	low _mensagemL2
  1578  0009AC  0100               	movlb	0	; () banked
  1579  0009AE  6F9D               	movwf	sprintf@sp& (0+255),b
  1580  0009B0  0E00               	movlw	high _mensagemL2
  1581  0009B2  0100               	movlb	0	; () banked
  1582  0009B4  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1583  0009B6  0EC5               	movlw	low STR_6
  1584  0009B8  0100               	movlb	0	; () banked
  1585  0009BA  6F9F               	movwf	sprintf@f& (0+255),b
  1586  0009BC  0E08               	movlw	high STR_6
  1587  0009BE  0100               	movlb	0	; () banked
  1588  0009C0  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1589  0009C2  5049               	movf	_dia,w,c
  1590  0009C4  0D04               	mullw	4
  1591  0009C6  0E00               	movlw	low _energia
  1592  0009C8  24F3               	addwf	prodl,w,c
  1593  0009CA  6ED9               	movwf	fsr2l,c
  1594  0009CC  0E01               	movlw	high _energia
  1595  0009CE  20F4               	addwfc	prodh,w,c
  1596  0009D0  6EDA               	movwf	fsr2h,c
  1597  0009D2  CFDE F0A1          	movff	postinc2,?_sprintf+4
  1598  0009D6  CFDD F0A2          	movff	postdec2,?_sprintf+5
  1599  0009DA  EC74  F007         	call	_sprintf	;wreg free
  1600                           
  1601                           ;main.c: 169: escreveMensagem(mensagemL1,mensagemL2);
  1602  0009DE  0E86               	movlw	low _mensagemL1
  1603  0009E0  6E17               	movwf	escreveMensagem@l1,c
  1604  0009E2  0E00               	movlw	high _mensagemL1
  1605  0009E4  6E18               	movwf	escreveMensagem@l1+1,c
  1606  0009E6  0E76               	movlw	low _mensagemL2
  1607  0009E8  6E19               	movwf	escreveMensagem@l2,c
  1608  0009EA  0E00               	movlw	high _mensagemL2
  1609  0009EC  6E1A               	movwf	escreveMensagem@l2+1,c
  1610  0009EE  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1611                           
  1612                           ;main.c: 171: break;
  1613  0009F2  0012               	return	
  1614  0009F4                     l3118:
  1615                           
  1616                           ;main.c: 174: limpaTela();
  1617  0009F4  ECD2  F00B         	call	_limpaTela	;wreg free
  1618                           
  1619                           ;main.c: 175: sprintf(mensagemL1,"CONSUMO MENSAL: ");
  1620  0009F8  0E86               	movlw	low _mensagemL1
  1621  0009FA  0100               	movlb	0	; () banked
  1622  0009FC  6F9D               	movwf	sprintf@sp& (0+255),b
  1623  0009FE  0E00               	movlw	high _mensagemL1
  1624  000A00  0100               	movlb	0	; () banked
  1625  000A02  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1626  000A04  0E5C               	movlw	low STR_7
  1627  000A06  0100               	movlb	0	; () banked
  1628  000A08  6F9F               	movwf	sprintf@f& (0+255),b
  1629  000A0A  0E08               	movlw	high STR_7
  1630  000A0C  0100               	movlb	0	; () banked
  1631  000A0E  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1632  000A10  EC74  F007         	call	_sprintf	;wreg free
  1633                           
  1634                           ;main.c: 176: sprintf(mensagemL2,"        %d W",energia.consumoDia[dia].potencia);
  1635  000A14  0E76               	movlw	low _mensagemL2
  1636  000A16  0100               	movlb	0	; () banked
  1637  000A18  6F9D               	movwf	sprintf@sp& (0+255),b
  1638  000A1A  0E00               	movlw	high _mensagemL2
  1639  000A1C  0100               	movlb	0	; () banked
  1640  000A1E  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1641  000A20  0EC5               	movlw	low STR_6
  1642  000A22  0100               	movlb	0	; () banked
  1643  000A24  6F9F               	movwf	sprintf@f& (0+255),b
  1644  000A26  0E08               	movlw	high STR_6
  1645  000A28  0100               	movlb	0	; () banked
  1646  000A2A  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1647  000A2C  5049               	movf	_dia,w,c
  1648  000A2E  0D04               	mullw	4
  1649  000A30  0E00               	movlw	low _energia
  1650  000A32  24F3               	addwf	prodl,w,c
  1651  000A34  6ED9               	movwf	fsr2l,c
  1652  000A36  0E01               	movlw	high _energia
  1653  000A38  20F4               	addwfc	prodh,w,c
  1654  000A3A  6EDA               	movwf	fsr2h,c
  1655  000A3C  CFDE F0A1          	movff	postinc2,?_sprintf+4
  1656  000A40  CFDD F0A2          	movff	postdec2,?_sprintf+5
  1657  000A44  EC74  F007         	call	_sprintf	;wreg free
  1658                           
  1659                           ;main.c: 177: escreveMensagem(mensagemL1,mensagemL2);
  1660  000A48  0E86               	movlw	low _mensagemL1
  1661  000A4A  6E17               	movwf	escreveMensagem@l1,c
  1662  000A4C  0E00               	movlw	high _mensagemL1
  1663  000A4E  6E18               	movwf	escreveMensagem@l1+1,c
  1664  000A50  0E76               	movlw	low _mensagemL2
  1665  000A52  6E19               	movwf	escreveMensagem@l2,c
  1666  000A54  0E00               	movlw	high _mensagemL2
  1667  000A56  6E1A               	movwf	escreveMensagem@l2+1,c
  1668  000A58  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1669                           
  1670                           ;main.c: 179: break;
  1671  000A5C  0012               	return	
  1672  000A5E                     l3124:
  1673                           
  1674                           ;main.c: 182: limpaTela();
  1675  000A5E  ECD2  F00B         	call	_limpaTela	;wreg free
  1676                           
  1677                           ;main.c: 183: sprintf(mensagemL1,"CONSUMO ANUAL: ");
  1678  000A62  0E86               	movlw	low _mensagemL1
  1679  000A64  0100               	movlb	0	; () banked
  1680  000A66  6F9D               	movwf	sprintf@sp& (0+255),b
  1681  000A68  0E00               	movlw	high _mensagemL1
  1682  000A6A  0100               	movlb	0	; () banked
  1683  000A6C  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1684  000A6E  0E6D               	movlw	low STR_9
  1685  000A70  0100               	movlb	0	; () banked
  1686  000A72  6F9F               	movwf	sprintf@f& (0+255),b
  1687  000A74  0E08               	movlw	high STR_9
  1688  000A76  0100               	movlb	0	; () banked
  1689  000A78  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1690  000A7A  EC74  F007         	call	_sprintf	;wreg free
  1691                           
  1692                           ;main.c: 184: sprintf(mensagemL2,"        %d W",energia.consumoDia[dia].potencia);
  1693  000A7E  0E76               	movlw	low _mensagemL2
  1694  000A80  0100               	movlb	0	; () banked
  1695  000A82  6F9D               	movwf	sprintf@sp& (0+255),b
  1696  000A84  0E00               	movlw	high _mensagemL2
  1697  000A86  0100               	movlb	0	; () banked
  1698  000A88  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1699  000A8A  0EC5               	movlw	low STR_6
  1700  000A8C  0100               	movlb	0	; () banked
  1701  000A8E  6F9F               	movwf	sprintf@f& (0+255),b
  1702  000A90  0E08               	movlw	high STR_6
  1703  000A92  0100               	movlb	0	; () banked
  1704  000A94  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1705  000A96  5049               	movf	_dia,w,c
  1706  000A98  0D04               	mullw	4
  1707  000A9A  0E00               	movlw	low _energia
  1708  000A9C  24F3               	addwf	prodl,w,c
  1709  000A9E  6ED9               	movwf	fsr2l,c
  1710  000AA0  0E01               	movlw	high _energia
  1711  000AA2  20F4               	addwfc	prodh,w,c
  1712  000AA4  6EDA               	movwf	fsr2h,c
  1713  000AA6  CFDE F0A1          	movff	postinc2,?_sprintf+4
  1714  000AAA  CFDD F0A2          	movff	postdec2,?_sprintf+5
  1715  000AAE  EC74  F007         	call	_sprintf	;wreg free
  1716                           
  1717                           ;main.c: 185: escreveMensagem(mensagemL1,mensagemL2);
  1718  000AB2  0E86               	movlw	low _mensagemL1
  1719  000AB4  6E17               	movwf	escreveMensagem@l1,c
  1720  000AB6  0E00               	movlw	high _mensagemL1
  1721  000AB8  6E18               	movwf	escreveMensagem@l1+1,c
  1722  000ABA  0E76               	movlw	low _mensagemL2
  1723  000ABC  6E19               	movwf	escreveMensagem@l2,c
  1724  000ABE  0E00               	movlw	high _mensagemL2
  1725  000AC0  6E1A               	movwf	escreveMensagem@l2+1,c
  1726  000AC2  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1727                           
  1728                           ;main.c: 187: break;
  1729  000AC6  0012               	return	
  1730  000AC8                     l3130:
  1731                           
  1732                           ;main.c: 190: limpaTela();
  1733  000AC8  ECD2  F00B         	call	_limpaTela	;wreg free
  1734                           
  1735                           ;main.c: 191: sprintf(mensagemL1,"CONFIG. SEM.");
  1736  000ACC  0E86               	movlw	low _mensagemL1
  1737  000ACE  0100               	movlb	0	; () banked
  1738  000AD0  6F9D               	movwf	sprintf@sp& (0+255),b
  1739  000AD2  0E00               	movlw	high _mensagemL1
  1740  000AD4  0100               	movlb	0	; () banked
  1741  000AD6  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1742  000AD8  0EAB               	movlw	low STR_11
  1743  000ADA  0100               	movlb	0	; () banked
  1744  000ADC  6F9F               	movwf	sprintf@f& (0+255),b
  1745  000ADE  0E08               	movlw	high STR_11
  1746  000AE0  0100               	movlb	0	; () banked
  1747  000AE2  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1748  000AE4  EC74  F007         	call	_sprintf	;wreg free
  1749                           
  1750                           ;main.c: 192: sprintf(mensagemL2,"[%c %c %c %c %c %c %c]", semanaPrint[0], semanaPrint[1
      +                          ], semanaPrint[2], semanaPrint[3], semanaPrint[4], semanaPrint[5], semanaPrint[6]);
  1751  000AE8  0E76               	movlw	low _mensagemL2
  1752  000AEA  0100               	movlb	0	; () banked
  1753  000AEC  6F9D               	movwf	sprintf@sp& (0+255),b
  1754  000AEE  0E00               	movlw	high _mensagemL2
  1755  000AF0  0100               	movlb	0	; () banked
  1756  000AF2  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1757  000AF4  0E0B               	movlw	low STR_3
  1758  000AF6  0100               	movlb	0	; () banked
  1759  000AF8  6F9F               	movwf	sprintf@f& (0+255),b
  1760  000AFA  0E08               	movlw	high STR_3
  1761  000AFC  0100               	movlb	0	; () banked
  1762  000AFE  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1763  000B00  C0B1  F0A1         	movff	_semanaPrint,?_sprintf+4
  1764  000B04  0100               	movlb	0	; () banked
  1765  000B06  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1766  000B08  C0B2  F0A3         	movff	_semanaPrint+1,?_sprintf+6
  1767  000B0C  0100               	movlb	0	; () banked
  1768  000B0E  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1769  000B10  C0B3  F0A5         	movff	_semanaPrint+2,?_sprintf+8
  1770  000B14  0100               	movlb	0	; () banked
  1771  000B16  6BA6               	clrf	(?_sprintf+9)& (0+255),b
  1772  000B18  C0B4  F0A7         	movff	_semanaPrint+3,?_sprintf+10
  1773  000B1C  0100               	movlb	0	; () banked
  1774  000B1E  6BA8               	clrf	(?_sprintf+11)& (0+255),b
  1775  000B20  C0B5  F0A9         	movff	_semanaPrint+4,?_sprintf+12
  1776  000B24  0100               	movlb	0	; () banked
  1777  000B26  6BAA               	clrf	(?_sprintf+13)& (0+255),b
  1778  000B28  C0B6  F0AB         	movff	_semanaPrint+5,?_sprintf+14
  1779  000B2C  0100               	movlb	0	; () banked
  1780  000B2E  6BAC               	clrf	(?_sprintf+15)& (0+255),b
  1781  000B30  C0B7  F0AD         	movff	_semanaPrint+6,?_sprintf+16
  1782  000B34  0100               	movlb	0	; () banked
  1783  000B36  6BAE               	clrf	(?_sprintf+17)& (0+255),b
  1784  000B38  EC74  F007         	call	_sprintf	;wreg free
  1785                           
  1786                           ;main.c: 193: escreveMensagem(mensagemL1,mensagemL2);
  1787  000B3C  0E86               	movlw	low _mensagemL1
  1788  000B3E  6E17               	movwf	escreveMensagem@l1,c
  1789  000B40  0E00               	movlw	high _mensagemL1
  1790  000B42  6E18               	movwf	escreveMensagem@l1+1,c
  1791  000B44  0E76               	movlw	low _mensagemL2
  1792  000B46  6E19               	movwf	escreveMensagem@l2,c
  1793  000B48  0E00               	movlw	high _mensagemL2
  1794  000B4A  6E1A               	movwf	escreveMensagem@l2+1,c
  1795  000B4C  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1796                           
  1797                           ;main.c: 194: break;
  1798  000B50  0012               	return	
  1799  000B52                     l3136:
  1800                           
  1801                           ;main.c: 197: limpaTela();
  1802  000B52  ECD2  F00B         	call	_limpaTela	;wreg free
  1803                           
  1804                           ;main.c: 198: sprintf(mensagemL1,"CONFIG. RELOGIO");
  1805  000B56  0E86               	movlw	low _mensagemL1
  1806  000B58  0100               	movlb	0	; () banked
  1807  000B5A  6F9D               	movwf	sprintf@sp& (0+255),b
  1808  000B5C  0E00               	movlw	high _mensagemL1
  1809  000B5E  0100               	movlb	0	; () banked
  1810  000B60  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1811  000B62  0E7D               	movlw	low STR_13
  1812  000B64  0100               	movlb	0	; () banked
  1813  000B66  6F9F               	movwf	sprintf@f& (0+255),b
  1814  000B68  0E08               	movlw	high STR_13
  1815  000B6A  0100               	movlb	0	; () banked
  1816  000B6C  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1817  000B6E  EC74  F007         	call	_sprintf	;wreg free
  1818                           
  1819                           ;main.c: 199: sprintf(mensagemL2,"Horario : %d:%d",horaAtual.h , horaAtual.m);
  1820  000B72  0E76               	movlw	low _mensagemL2
  1821  000B74  0100               	movlb	0	; () banked
  1822  000B76  6F9D               	movwf	sprintf@sp& (0+255),b
  1823  000B78  0E00               	movlw	high _mensagemL2
  1824  000B7A  0100               	movlb	0	; () banked
  1825  000B7C  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1826  000B7E  0E8D               	movlw	low STR_14
  1827  000B80  0100               	movlb	0	; () banked
  1828  000B82  6F9F               	movwf	sprintf@f& (0+255),b
  1829  000B84  0E08               	movlw	high STR_14
  1830  000B86  0100               	movlb	0	; () banked
  1831  000B88  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1832  000B8A  C02C  F0A1         	movff	_horaAtual,?_sprintf+4
  1833  000B8E  0100               	movlb	0	; () banked
  1834  000B90  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1835  000B92  C02D  F0A3         	movff	_horaAtual+1,?_sprintf+6
  1836  000B96  0100               	movlb	0	; () banked
  1837  000B98  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1838  000B9A  EC74  F007         	call	_sprintf	;wreg free
  1839                           
  1840                           ;main.c: 200: escreveMensagem(mensagemL1,mensagemL2);
  1841  000B9E  0E86               	movlw	low _mensagemL1
  1842  000BA0  6E17               	movwf	escreveMensagem@l1,c
  1843  000BA2  0E00               	movlw	high _mensagemL1
  1844  000BA4  6E18               	movwf	escreveMensagem@l1+1,c
  1845  000BA6  0E76               	movlw	low _mensagemL2
  1846  000BA8  6E19               	movwf	escreveMensagem@l2,c
  1847  000BAA  0E00               	movlw	high _mensagemL2
  1848  000BAC  6E1A               	movwf	escreveMensagem@l2+1,c
  1849  000BAE  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1850                           
  1851                           ;main.c: 201: break;
  1852  000BB2  0012               	return	
  1853  000BB4                     l3142:
  1854                           
  1855                           ;main.c: 204: limpaTela();
  1856  000BB4  ECD2  F00B         	call	_limpaTela	;wreg free
  1857                           
  1858                           ;main.c: 205: sprintf(mensagemL1,"HORARIO LIGAR");
  1859  000BB8  0E86               	movlw	low _mensagemL1
  1860  000BBA  0100               	movlb	0	; () banked
  1861  000BBC  6F9D               	movwf	sprintf@sp& (0+255),b
  1862  000BBE  0E00               	movlw	high _mensagemL1
  1863  000BC0  0100               	movlb	0	; () banked
  1864  000BC2  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1865  000BC4  0E9D               	movlw	low STR_15
  1866  000BC6  0100               	movlb	0	; () banked
  1867  000BC8  6F9F               	movwf	sprintf@f& (0+255),b
  1868  000BCA  0E08               	movlw	high STR_15
  1869  000BCC  0100               	movlb	0	; () banked
  1870  000BCE  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1871  000BD0  EC74  F007         	call	_sprintf	;wreg free
  1872                           
  1873                           ;main.c: 206: sprintf(mensagemL2,"Horario : %d:%d",horaAtual.h , horaAtual.m);
  1874  000BD4  0E76               	movlw	low _mensagemL2
  1875  000BD6  0100               	movlb	0	; () banked
  1876  000BD8  6F9D               	movwf	sprintf@sp& (0+255),b
  1877  000BDA  0E00               	movlw	high _mensagemL2
  1878  000BDC  0100               	movlb	0	; () banked
  1879  000BDE  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1880  000BE0  0E8D               	movlw	low STR_14
  1881  000BE2  0100               	movlb	0	; () banked
  1882  000BE4  6F9F               	movwf	sprintf@f& (0+255),b
  1883  000BE6  0E08               	movlw	high STR_14
  1884  000BE8  0100               	movlb	0	; () banked
  1885  000BEA  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1886  000BEC  C02C  F0A1         	movff	_horaAtual,?_sprintf+4
  1887  000BF0  0100               	movlb	0	; () banked
  1888  000BF2  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1889  000BF4  C02D  F0A3         	movff	_horaAtual+1,?_sprintf+6
  1890  000BF8  0100               	movlb	0	; () banked
  1891  000BFA  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1892  000BFC  EC74  F007         	call	_sprintf	;wreg free
  1893                           
  1894                           ;main.c: 207: escreveMensagem(mensagemL1,mensagemL2);
  1895  000C00  0E86               	movlw	low _mensagemL1
  1896  000C02  6E17               	movwf	escreveMensagem@l1,c
  1897  000C04  0E00               	movlw	high _mensagemL1
  1898  000C06  6E18               	movwf	escreveMensagem@l1+1,c
  1899  000C08  0E76               	movlw	low _mensagemL2
  1900  000C0A  6E19               	movwf	escreveMensagem@l2,c
  1901  000C0C  0E00               	movlw	high _mensagemL2
  1902  000C0E  6E1A               	movwf	escreveMensagem@l2+1,c
  1903  000C10  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1904                           
  1905                           ;main.c: 209: break;
  1906  000C14  0012               	return	
  1907  000C16                     l3148:
  1908                           
  1909                           ;main.c: 212: limpaTela();
  1910  000C16  ECD2  F00B         	call	_limpaTela	;wreg free
  1911                           
  1912                           ;main.c: 213: sprintf(mensagemL1,"HORARIO DESL");
  1913  000C1A  0E86               	movlw	low _mensagemL1
  1914  000C1C  0100               	movlb	0	; () banked
  1915  000C1E  6F9D               	movwf	sprintf@sp& (0+255),b
  1916  000C20  0E00               	movlw	high _mensagemL1
  1917  000C22  0100               	movlb	0	; () banked
  1918  000C24  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1919  000C26  0EB8               	movlw	low STR_17
  1920  000C28  0100               	movlb	0	; () banked
  1921  000C2A  6F9F               	movwf	sprintf@f& (0+255),b
  1922  000C2C  0E08               	movlw	high STR_17
  1923  000C2E  0100               	movlb	0	; () banked
  1924  000C30  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1925  000C32  EC74  F007         	call	_sprintf	;wreg free
  1926                           
  1927                           ;main.c: 214: sprintf(mensagemL2,"Horario : %d:%d",horaAtual.h , horaAtual.m);
  1928  000C36  0E76               	movlw	low _mensagemL2
  1929  000C38  0100               	movlb	0	; () banked
  1930  000C3A  6F9D               	movwf	sprintf@sp& (0+255),b
  1931  000C3C  0E00               	movlw	high _mensagemL2
  1932  000C3E  0100               	movlb	0	; () banked
  1933  000C40  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1934  000C42  0E8D               	movlw	low STR_14
  1935  000C44  0100               	movlb	0	; () banked
  1936  000C46  6F9F               	movwf	sprintf@f& (0+255),b
  1937  000C48  0E08               	movlw	high STR_14
  1938  000C4A  0100               	movlb	0	; () banked
  1939  000C4C  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1940  000C4E  C02C  F0A1         	movff	_horaAtual,?_sprintf+4
  1941  000C52  0100               	movlb	0	; () banked
  1942  000C54  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1943  000C56  C02D  F0A3         	movff	_horaAtual+1,?_sprintf+6
  1944  000C5A  0100               	movlb	0	; () banked
  1945  000C5C  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1946  000C5E  EC74  F007         	call	_sprintf	;wreg free
  1947                           
  1948                           ;main.c: 215: escreveMensagem(mensagemL1,mensagemL2);
  1949  000C62  0E86               	movlw	low _mensagemL1
  1950  000C64  6E17               	movwf	escreveMensagem@l1,c
  1951  000C66  0E00               	movlw	high _mensagemL1
  1952  000C68  6E18               	movwf	escreveMensagem@l1+1,c
  1953  000C6A  0E76               	movlw	low _mensagemL2
  1954  000C6C  6E19               	movwf	escreveMensagem@l2,c
  1955  000C6E  0E00               	movlw	high _mensagemL2
  1956  000C70  6E1A               	movwf	escreveMensagem@l2+1,c
  1957  000C72  ECE5  F00B         	call	_escreveMensagem	;wreg free
  1958                           
  1959                           ;main.c: 217: break;
  1960  000C76  0012               	return	
  1961  000C78                     l3154:
  1962                           
  1963                           ;main.c: 220: limpaTela();
  1964  000C78  ECD2  F00B         	call	_limpaTela	;wreg free
  1965                           
  1966                           ;main.c: 221: sprintf(mensagemL1,"Defaltoss");
  1967  000C7C  0E86               	movlw	low _mensagemL1
  1968  000C7E  0100               	movlb	0	; () banked
  1969  000C80  6F9D               	movwf	sprintf@sp& (0+255),b
  1970  000C82  0E00               	movlw	high _mensagemL1
  1971  000C84  0100               	movlb	0	; () banked
  1972  000C86  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1973  000C88  0ED2               	movlw	low STR_19
  1974  000C8A  0100               	movlb	0	; () banked
  1975  000C8C  6F9F               	movwf	sprintf@f& (0+255),b
  1976  000C8E  0E08               	movlw	high STR_19
  1977  000C90  0100               	movlb	0	; () banked
  1978  000C92  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1979  000C94  EC74  F007         	call	_sprintf	;wreg free
  1980                           
  1981                           ;main.c: 222: sprintf(mensagemL2,"tela %i", tela);
  1982  000C98  0E76               	movlw	low _mensagemL2
  1983  000C9A  0100               	movlb	0	; () banked
  1984  000C9C  6F9D               	movwf	sprintf@sp& (0+255),b
  1985  000C9E  0E00               	movlw	high _mensagemL2
  1986  000CA0  0100               	movlb	0	; () banked
  1987  000CA2  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1988  000CA4  0EDC               	movlw	low STR_20
  1989  000CA6  0100               	movlb	0	; () banked
  1990  000CA8  6F9F               	movwf	sprintf@f& (0+255),b
  1991  000CAA  0E08               	movlw	high STR_20
  1992  000CAC  0100               	movlb	0	; () banked
  1993  000CAE  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1994  000CB0  C041  F0A1         	movff	_tela,?_sprintf+4
  1995  000CB4  C042  F0A2         	movff	_tela+1,?_sprintf+5
  1996  000CB8  EC74  F007         	call	_sprintf	;wreg free
  1997                           
  1998                           ;main.c: 223: escreveMensagem(mensagemL1,mensagemL2);
  1999  000CBC  0E86               	movlw	low _mensagemL1
  2000  000CBE  6E17               	movwf	escreveMensagem@l1,c
  2001  000CC0  0E00               	movlw	high _mensagemL1
  2002  000CC2  6E18               	movwf	escreveMensagem@l1+1,c
  2003  000CC4  0E76               	movlw	low _mensagemL2
  2004  000CC6  6E19               	movwf	escreveMensagem@l2,c
  2005  000CC8  0E00               	movlw	high _mensagemL2
  2006  000CCA  6E1A               	movwf	escreveMensagem@l2+1,c
  2007  000CCC  ECE5  F00B         	call	_escreveMensagem	;wreg free
  2008                           
  2009                           ;main.c: 225: }
  2010                           
  2011                           ;main.c: 224: break;
  2012  000CD0  0012               	return	
  2013  000CD2                     l3162:
  2014  000CD2  C041  F026         	movff	_tela,??_telas
  2015  000CD6  C042  F027         	movff	_tela+1,??_telas+1
  2016                           
  2017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2018                           ; Switch size 1, requested type "space"
  2019                           ; Number of cases is 1, Range of values is 0 to 0
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte            4     3 (average)
  2023                           ;	Chosen strategy is simple_byte
  2024  000CDA  5027               	movf	??_telas+1,w,c
  2025  000CDC  0A00               	xorlw	0	; case 0
  2026  000CDE  A4D8               	btfss	status,2,c
  2027  000CE0  D7CB               	goto	l3154
  2028                           
  2029                           ; Switch size 1, requested type "space"
  2030                           ; Number of cases is 8, Range of values is 1 to 8
  2031                           ; switch strategies available:
  2032                           ; Name         Instructions Cycles
  2033                           ; simple_byte           25    13 (average)
  2034                           ;	Chosen strategy is simple_byte
  2035  000CE2  5026               	movf	??_telas,w,c
  2036  000CE4  0A01               	xorlw	1	; case 1
  2037  000CE6  B4D8               	btfsc	status,2,c
  2038  000CE8  D5FF               	goto	l3106
  2039  000CEA  0A03               	xorlw	3	; case 2
  2040  000CEC  B4D8               	btfsc	status,2,c
  2041  000CEE  D64D               	goto	l3112
  2042  000CF0  0A01               	xorlw	1	; case 3
  2043  000CF2  B4D8               	btfsc	status,2,c
  2044  000CF4  D67F               	goto	l3118
  2045  000CF6  0A07               	xorlw	7	; case 4
  2046  000CF8  B4D8               	btfsc	status,2,c
  2047  000CFA  D6B1               	goto	l3124
  2048  000CFC  0A01               	xorlw	1	; case 5
  2049  000CFE  B4D8               	btfsc	status,2,c
  2050  000D00  D6E3               	goto	l3130
  2051  000D02  0A03               	xorlw	3	; case 6
  2052  000D04  B4D8               	btfsc	status,2,c
  2053  000D06  D725               	goto	l3136
  2054  000D08  0A01               	xorlw	1	; case 7
  2055  000D0A  B4D8               	btfsc	status,2,c
  2056  000D0C  D753               	goto	l3142
  2057  000D0E  0A0F               	xorlw	15	; case 8
  2058  000D10  B4D8               	btfsc	status,2,c
  2059  000D12  D781               	goto	l3148
  2060  000D14  D7B1               	goto	l3154
  2061  000D16                     __end_of_telas:
  2062                           	opt stack 0
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           prodh	equ	0xFF4
  2068                           prodl	equ	0xFF3
  2069                           intcon	equ	0xFF2
  2070                           postinc0	equ	0xFEE
  2071                           wreg	equ	0xFE8
  2072                           postdec1	equ	0xFE5
  2073                           fsr1l	equ	0xFE1
  2074                           postinc2	equ	0xFDE
  2075                           postdec2	equ	0xFDD
  2076                           fsr2h	equ	0xFDA
  2077                           fsr2l	equ	0xFD9
  2078                           status	equ	0xFD8
  2079                           
  2080 ;; *************** function _sprintf *****************
  2081 ;; Defined at:
  2082 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  2085 ;;		 -> mensagemL2(16), mensagemL1(16), 
  2086 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  2087 ;;		 -> STR_20(8), STR_19(10), STR_18(16), STR_17(13), 
  2088 ;;		 -> STR_16(16), STR_15(14), STR_14(16), STR_13(16), 
  2089 ;;		 -> STR_12(23), STR_11(13), STR_10(13), STR_9(16), 
  2090 ;;		 -> STR_8(13), STR_7(17), STR_6(13), STR_5(22), 
  2091 ;;		 -> STR_4(19), STR_3(23), 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  tmpval          4    0        struct .
  2094 ;;  cp              3    0        PTR const unsigned char 
  2095 ;;  val             2   34[COMRAM] unsigned int 
  2096 ;;  ap              2   32[COMRAM] PTR void [1]
  2097 ;;		 -> ?_sprintf(2), 
  2098 ;;  len             2    0        unsigned int 
  2099 ;;  c               1   36[COMRAM] char 
  2100 ;;  prec            1   31[COMRAM] char 
  2101 ;;  flag            1   30[COMRAM] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2    0[BANK0 ] int 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2111 ;;      Params:         0      18       0       0       0       0       0       0       0
  2112 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2113 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2114 ;;      Totals:         8      18       0       0       0       0       0       0       0
  2115 ;;Total ram usage:       26 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    2
  2118 ;; This function calls:
  2119 ;;		___lwdiv
  2120 ;;		___lwmod
  2121 ;; This function is called by:
  2122 ;;		_telas
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text5
  2127  000EE8                     __ptext5:
  2128                           	opt stack 0
  2129  000EE8                     _sprintf:
  2130                           	opt stack 27
  2131                           
  2132                           ;doprnt.c: 494: va_list ap;
  2133                           ;doprnt.c: 499: signed char c;
  2134                           ;doprnt.c: 506: signed char prec;
  2135                           ;doprnt.c: 508: unsigned char flag;
  2136                           ;doprnt.c: 523: union {
  2137                           ;doprnt.c: 524: unsigned long vd;
  2138                           ;doprnt.c: 525: double integ;
  2139                           ;doprnt.c: 526: } tmpval;
  2140                           ;doprnt.c: 528: unsigned int val;
  2141                           ;doprnt.c: 529: unsigned len;
  2142                           ;doprnt.c: 530: const char * cp;
  2143                           ;doprnt.c: 533: *ap = __va_start();
  2144                           
  2145                           ;incstack = 0
  2146  000EE8  0EA1               	movlw	low (?_sprintf+4)
  2147  000EEA  6E21               	movwf	sprintf@ap,c
  2148  000EEC  0E00               	movlw	high (?_sprintf+4)
  2149  000EEE  6E22               	movwf	sprintf@ap+1,c
  2150                           
  2151                           ;doprnt.c: 536: while(c = *f++) {
  2152  000EF0  D0A7               	goto	l3008
  2153  000EF2                     l2948:
  2154                           
  2155                           ;doprnt.c: 538: if(c != '%')
  2156  000EF2  0E25               	movlw	37
  2157  000EF4  1825               	xorwf	sprintf@c,w,c
  2158  000EF6  B4D8               	btfsc	status,2,c
  2159  000EF8  D005               	goto	l2954
  2160  000EFA  D011               	goto	l2960
  2161  000EFC                     l2952:
  2162  000EFC  0100               	movlb	0	; () banked
  2163  000EFE  4B9D               	infsnz	sprintf@sp& (0+255),f,b
  2164  000F00  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
  2165                           
  2166                           ;doprnt.c: 542: continue;
  2167  000F02  D09E               	goto	l3008
  2168  000F04                     l2954:
  2169                           
  2170                           ;doprnt.c: 543: }
  2171                           ;doprnt.c: 548: flag = 0;
  2172  000F04  0E00               	movlw	0
  2173  000F06  6E1F               	movwf	sprintf@flag,c
  2174                           
  2175                           ;doprnt.c: 635: switch(c = *f++) {
  2176  000F08  D011               	goto	l2966
  2177  000F0A                     l2956:
  2178                           
  2179                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2180  000F0A  C021  FFD9         	movff	sprintf@ap,fsr2l
  2181  000F0E  C022  FFDA         	movff	sprintf@ap+1,fsr2h
  2182  000F12  50DF               	movf	indf2,w,c
  2183  000F14  6E25               	movwf	sprintf@c,c
  2184  000F16  0E02               	movlw	2
  2185  000F18  2621               	addwf	sprintf@ap,f,c
  2186  000F1A  0E00               	movlw	0
  2187  000F1C  2222               	addwfc	sprintf@ap+1,f,c
  2188  000F1E                     l2960:
  2189                           
  2190                           ;doprnt.c: 809: ((*sp++ = (c)));
  2191  000F1E  C09D  FFD9         	movff	sprintf@sp,fsr2l
  2192  000F22  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  2193  000F26  C025  FFDF         	movff	sprintf@c,indf2
  2194  000F2A  D7E8               	goto	l2952
  2195  000F2C                     l2966:
  2196  000F2C  C09F  FFF6         	movff	sprintf@f,tblptrl
  2197  000F30  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
  2198  000F34  0100               	movlb	0	; () banked
  2199  000F36  4B9F               	infsnz	sprintf@f& (0+255),f,b
  2200  000F38  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
  2201  000F3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2202  000F3A  6AF8               	clrf	tblptru,c
  2203  000F3C                     	endif
  2204  000F3C                     	if	0	;tblptru may be non-zero
  2205  000F3C                     	endif
  2206  000F3C  0008               	tblrd		*
  2207  000F3E  CFF5 F025          	movff	tablat,sprintf@c
  2208  000F42  5025               	movf	sprintf@c,w,c
  2209                           
  2210                           ; Switch size 1, requested type "space"
  2211                           ; Number of cases is 4, Range of values is 0 to 105
  2212                           ; switch strategies available:
  2213                           ; Name         Instructions Cycles
  2214                           ; simple_byte           13     7 (average)
  2215                           ;	Chosen strategy is simple_byte
  2216  000F44  0A00               	xorlw	0	; case 0
  2217  000F46  B4D8               	btfsc	status,2,c
  2218  000F48  D089               	goto	l3010
  2219  000F4A  0A63               	xorlw	99	; case 99
  2220  000F4C  B4D8               	btfsc	status,2,c
  2221  000F4E  D7DD               	goto	l2956
  2222  000F50  0A07               	xorlw	7	; case 100
  2223  000F52  B4D8               	btfsc	status,2,c
  2224  000F54  D003               	goto	l2968
  2225  000F56  0A0D               	xorlw	13	; case 105
  2226  000F58  A4D8               	btfss	status,2,c
  2227  000F5A  D7E1               	goto	l2960
  2228  000F5C                     l2968:
  2229                           
  2230                           ;doprnt.c: 1253: {
  2231                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2232  000F5C  C021  FFD9         	movff	sprintf@ap,fsr2l
  2233  000F60  C022  FFDA         	movff	sprintf@ap+1,fsr2h
  2234  000F64  CFDE F023          	movff	postinc2,sprintf@val
  2235  000F68  CFDD F024          	movff	postdec2,sprintf@val+1
  2236  000F6C  0E02               	movlw	2
  2237  000F6E  2621               	addwf	sprintf@ap,f,c
  2238  000F70  0E00               	movlw	0
  2239  000F72  2222               	addwfc	sprintf@ap+1,f,c
  2240                           
  2241                           ;doprnt.c: 1261: if((int)val < 0) {
  2242  000F74  AE24               	btfss	sprintf@val+1,7,c
  2243  000F76  D006               	goto	l2978
  2244                           
  2245                           ;doprnt.c: 1262: flag |= 0x03;
  2246  000F78  0E03               	movlw	3
  2247  000F7A  121F               	iorwf	sprintf@flag,f,c
  2248                           
  2249                           ;doprnt.c: 1263: val = -val;
  2250  000F7C  6C23               	negf	sprintf@val,c
  2251  000F7E  1E24               	comf	sprintf@val+1,f,c
  2252  000F80  B0D8               	btfsc	status,0,c
  2253  000F82  2A24               	incf	sprintf@val+1,f,c
  2254  000F84                     l2978:
  2255                           
  2256                           ;doprnt.c: 1264: }
  2257                           ;doprnt.c: 1266: }
  2258                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2259  000F84  0E01               	movlw	1
  2260  000F86  6E25               	movwf	sprintf@c,c
  2261  000F88                     l2980:
  2262  000F88  0E05               	movlw	5
  2263  000F8A  1825               	xorwf	sprintf@c,w,c
  2264  000F8C  B4D8               	btfsc	status,2,c
  2265  000F8E  D015               	goto	l2992
  2266                           
  2267                           ;doprnt.c: 1306: if(val < dpowers[c])
  2268  000F90  5025               	movf	sprintf@c,w,c
  2269  000F92  0D02               	mullw	2
  2270  000F94  0E01               	movlw	low _dpowers
  2271  000F96  24F3               	addwf	prodl,w,c
  2272  000F98  6EF6               	movwf	tblptrl,c
  2273  000F9A  0E08               	movlw	high _dpowers
  2274  000F9C  20F4               	addwfc	prodh,w,c
  2275  000F9E  6EF7               	movwf	tblptrh,c
  2276  000FA0                     	if	1	;There are 3 active tblptr bytes
  2277  000FA0  6AF8               	clrf	tblptru,c
  2278  000FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  2279  000FA4  22F8               	addwfc	tblptru,f,c
  2280  000FA6                     	endif
  2281  000FA6  0009               	tblrd		*+
  2282  000FA8  50F5               	movf	tablat,w,c
  2283  000FAA  5C23               	subwf	sprintf@val,w,c
  2284  000FAC  0009               	tblrd		*+
  2285  000FAE  50F5               	movf	tablat,w,c
  2286  000FB0  5824               	subwfb	sprintf@val+1,w,c
  2287  000FB2  A0D8               	btfss	status,0,c
  2288  000FB4  D002               	goto	l2992
  2289                           
  2290                           ;doprnt.c: 1307: break;
  2291  000FB6  2A25               	incf	sprintf@c,f,c
  2292  000FB8  D7E7               	goto	l2980
  2293  000FBA                     l2992:
  2294                           
  2295                           ;doprnt.c: 1422: {
  2296                           ;doprnt.c: 1438: if(flag & 0x03)
  2297  000FBA  C01F  F01E         	movff	sprintf@flag,??_sprintf
  2298  000FBE  0E03               	movlw	3
  2299  000FC0  161E               	andwf	??_sprintf,f,c
  2300  000FC2  B4D8               	btfsc	status,2,c
  2301  000FC4  D009               	goto	l2998
  2302                           
  2303                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2304  000FC6  C09D  FFD9         	movff	sprintf@sp,fsr2l
  2305  000FCA  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  2306  000FCE  0E2D               	movlw	45
  2307  000FD0  6EDF               	movwf	indf2,c
  2308  000FD2  0100               	movlb	0	; () banked
  2309  000FD4  4B9D               	infsnz	sprintf@sp& (0+255),f,b
  2310  000FD6  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
  2311  000FD8                     l2998:
  2312                           
  2313                           ;doprnt.c: 1469: }
  2314                           ;doprnt.c: 1472: prec = c;
  2315  000FD8  C025  F020         	movff	sprintf@c,sprintf@prec
  2316                           
  2317                           ;doprnt.c: 1474: while(prec--) {
  2318  000FDC  D02D               	goto	l3006
  2319  000FDE                     l3000:
  2320                           
  2321                           ;doprnt.c: 1478: {
  2322                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2323  000FDE  5020               	movf	sprintf@prec,w,c
  2324  000FE0  0D02               	mullw	2
  2325  000FE2  0E01               	movlw	low _dpowers
  2326  000FE4  24F3               	addwf	prodl,w,c
  2327  000FE6  6EF6               	movwf	tblptrl,c
  2328  000FE8  0E08               	movlw	high _dpowers
  2329  000FEA  20F4               	addwfc	prodh,w,c
  2330  000FEC  6EF7               	movwf	tblptrh,c
  2331  000FEE                     	if	1	;There are 3 active tblptr bytes
  2332  000FEE  6AF8               	clrf	tblptru,c
  2333  000FF0  0E00               	movlw	low (__mediumconst shr (0+16))
  2334  000FF2  22F8               	addwfc	tblptru,f,c
  2335  000FF4                     	endif
  2336  000FF4  0009               	tblrd		*+
  2337  000FF6  CFF5 F014          	movff	tablat,___lwdiv@divisor
  2338  000FFA  000A               	tblrd		*-
  2339  000FFC  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  2340  001000  C023  F012         	movff	sprintf@val,___lwdiv@dividend
  2341  001004  C024  F013         	movff	sprintf@val+1,___lwdiv@dividend+1
  2342  001008  EC68  F00A         	call	___lwdiv	;wreg free
  2343  00100C  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  2344  001010  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2345  001014  0E00               	movlw	0
  2346  001016  6E1C               	movwf	___lwmod@divisor+1,c
  2347  001018  0E0A               	movlw	10
  2348  00101A  6E1B               	movwf	___lwmod@divisor,c
  2349  00101C  EC07  F00B         	call	___lwmod	;wreg free
  2350  001020  5019               	movf	?___lwmod,w,c
  2351  001022  0F30               	addlw	48
  2352  001024  6E25               	movwf	sprintf@c,c
  2353                           
  2354                           ;doprnt.c: 1523: }
  2355                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2356  001026  C09D  FFD9         	movff	sprintf@sp,fsr2l
  2357  00102A  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  2358  00102E  C025  FFDF         	movff	sprintf@c,indf2
  2359  001032  0100               	movlb	0	; () banked
  2360  001034  4B9D               	infsnz	sprintf@sp& (0+255),f,b
  2361  001036  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
  2362  001038                     l3006:
  2363  001038  0620               	decf	sprintf@prec,f,c
  2364  00103A  2820               	incf	sprintf@prec,w,c
  2365  00103C  A4D8               	btfss	status,2,c
  2366  00103E  D7CF               	goto	l3000
  2367  001040                     l3008:
  2368  001040  C09F  FFF6         	movff	sprintf@f,tblptrl
  2369  001044  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
  2370  001048  0100               	movlb	0	; () banked
  2371  00104A  4B9F               	infsnz	sprintf@f& (0+255),f,b
  2372  00104C  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
  2373  00104E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2374  00104E  6AF8               	clrf	tblptru,c
  2375  001050                     	endif
  2376  001050                     	if	0	;tblptru may be non-zero
  2377  001050                     	endif
  2378  001050  0008               	tblrd		*
  2379  001052  CFF5 F025          	movff	tablat,sprintf@c
  2380  001056  5025               	movf	sprintf@c,w,c
  2381  001058  A4D8               	btfss	status,2,c
  2382  00105A  D74B               	goto	l2948
  2383  00105C                     l3010:
  2384                           
  2385                           ;doprnt.c: 1538: *sp = 0;
  2386  00105C  C09D  FFD9         	movff	sprintf@sp,fsr2l
  2387  001060  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  2388  001064  0E00               	movlw	0
  2389  001066  6EDF               	movwf	indf2,c
  2390  001068  0012               	return	
  2391  00106A                     __end_of_sprintf:
  2392                           	opt stack 0
  2393                           tblptru	equ	0xFF8
  2394                           tblptrh	equ	0xFF7
  2395                           tblptrl	equ	0xFF6
  2396                           tablat	equ	0xFF5
  2397                           prodh	equ	0xFF4
  2398                           prodl	equ	0xFF3
  2399                           intcon	equ	0xFF2
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           postdec1	equ	0xFE5
  2403                           fsr1l	equ	0xFE1
  2404                           indf2	equ	0xFDF
  2405                           postinc2	equ	0xFDE
  2406                           postdec2	equ	0xFDD
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function ___lwmod *****************
  2412 ;; Defined at:
  2413 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  dividend        2   24[COMRAM] unsigned int 
  2416 ;;  divisor         2   26[COMRAM] unsigned int 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  counter         1   28[COMRAM] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2   24[COMRAM] unsigned int 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         4       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        5 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_sprintf
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text6
  2443  00160E                     __ptext6:
  2444                           	opt stack 0
  2445  00160E                     ___lwmod:
  2446                           	opt stack 27
  2447                           
  2448                           ;incstack = 0
  2449  00160E  501B               	movf	___lwmod@divisor,w,c
  2450  001610  101C               	iorwf	___lwmod@divisor+1,w,c
  2451  001612  B4D8               	btfsc	status,2,c
  2452  001614  D018               	goto	l841
  2453  001616  0E01               	movlw	1
  2454  001618  6E1D               	movwf	___lwmod@counter,c
  2455  00161A  D004               	goto	l2870
  2456  00161C                     l2868:
  2457  00161C  90D8               	bcf	status,0,c
  2458  00161E  361B               	rlcf	___lwmod@divisor,f,c
  2459  001620  361C               	rlcf	___lwmod@divisor+1,f,c
  2460  001622  2A1D               	incf	___lwmod@counter,f,c
  2461  001624                     l2870:
  2462  001624  AE1C               	btfss	___lwmod@divisor+1,7,c
  2463  001626  D7FA               	goto	l2868
  2464  001628                     l2872:
  2465  001628  501B               	movf	___lwmod@divisor,w,c
  2466  00162A  5C19               	subwf	___lwmod@dividend,w,c
  2467  00162C  501C               	movf	___lwmod@divisor+1,w,c
  2468  00162E  581A               	subwfb	___lwmod@dividend+1,w,c
  2469  001630  A0D8               	btfss	status,0,c
  2470  001632  D004               	goto	l2876
  2471  001634  501B               	movf	___lwmod@divisor,w,c
  2472  001636  5E19               	subwf	___lwmod@dividend,f,c
  2473  001638  501C               	movf	___lwmod@divisor+1,w,c
  2474  00163A  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2475  00163C                     l2876:
  2476  00163C  90D8               	bcf	status,0,c
  2477  00163E  321C               	rrcf	___lwmod@divisor+1,f,c
  2478  001640  321B               	rrcf	___lwmod@divisor,f,c
  2479  001642  2E1D               	decfsz	___lwmod@counter,f,c
  2480  001644  D7F1               	goto	l2872
  2481  001646                     l841:
  2482  001646  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2483  00164A  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2484  00164E  0012               	return		;funcret
  2485  001650                     __end_of___lwmod:
  2486                           	opt stack 0
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           intcon	equ	0xFF2
  2494                           postinc0	equ	0xFEE
  2495                           wreg	equ	0xFE8
  2496                           postdec1	equ	0xFE5
  2497                           fsr1l	equ	0xFE1
  2498                           indf2	equ	0xFDF
  2499                           postinc2	equ	0xFDE
  2500                           postdec2	equ	0xFDD
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function ___lwdiv *****************
  2506 ;; Defined at:
  2507 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  dividend        2   17[COMRAM] unsigned int 
  2510 ;;  divisor         2   19[COMRAM] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  quotient        2   22[COMRAM] unsigned int 
  2513 ;;  counter         1   21[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2   17[COMRAM] unsigned int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2523 ;;      Params:         4       0       0       0       0       0       0       0       0
  2524 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2526 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2527 ;;Total ram usage:        7 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_sprintf
  2534 ;;		_calcula_temperatura
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text7
  2539  0014D0                     __ptext7:
  2540                           	opt stack 0
  2541  0014D0                     ___lwdiv:
  2542                           	opt stack 27
  2543                           
  2544                           ;incstack = 0
  2545  0014D0  0E00               	movlw	0
  2546  0014D2  6E18               	movwf	___lwdiv@quotient+1,c
  2547  0014D4  0E00               	movlw	0
  2548  0014D6  6E17               	movwf	___lwdiv@quotient,c
  2549  0014D8  5014               	movf	___lwdiv@divisor,w,c
  2550  0014DA  1015               	iorwf	___lwdiv@divisor+1,w,c
  2551  0014DC  B4D8               	btfsc	status,2,c
  2552  0014DE  D01C               	goto	l831
  2553  0014E0  0E01               	movlw	1
  2554  0014E2  6E16               	movwf	___lwdiv@counter,c
  2555  0014E4  D004               	goto	l2850
  2556  0014E6                     l2848:
  2557  0014E6  90D8               	bcf	status,0,c
  2558  0014E8  3614               	rlcf	___lwdiv@divisor,f,c
  2559  0014EA  3615               	rlcf	___lwdiv@divisor+1,f,c
  2560  0014EC  2A16               	incf	___lwdiv@counter,f,c
  2561  0014EE                     l2850:
  2562  0014EE  AE15               	btfss	___lwdiv@divisor+1,7,c
  2563  0014F0  D7FA               	goto	l2848
  2564  0014F2                     l2852:
  2565  0014F2  90D8               	bcf	status,0,c
  2566  0014F4  3617               	rlcf	___lwdiv@quotient,f,c
  2567  0014F6  3618               	rlcf	___lwdiv@quotient+1,f,c
  2568  0014F8  5014               	movf	___lwdiv@divisor,w,c
  2569  0014FA  5C12               	subwf	___lwdiv@dividend,w,c
  2570  0014FC  5015               	movf	___lwdiv@divisor+1,w,c
  2571  0014FE  5813               	subwfb	___lwdiv@dividend+1,w,c
  2572  001500  A0D8               	btfss	status,0,c
  2573  001502  D005               	goto	l2860
  2574  001504  5014               	movf	___lwdiv@divisor,w,c
  2575  001506  5E12               	subwf	___lwdiv@dividend,f,c
  2576  001508  5015               	movf	___lwdiv@divisor+1,w,c
  2577  00150A  5A13               	subwfb	___lwdiv@dividend+1,f,c
  2578  00150C  8017               	bsf	___lwdiv@quotient,0,c
  2579  00150E                     l2860:
  2580  00150E  90D8               	bcf	status,0,c
  2581  001510  3215               	rrcf	___lwdiv@divisor+1,f,c
  2582  001512  3214               	rrcf	___lwdiv@divisor,f,c
  2583  001514  2E16               	decfsz	___lwdiv@counter,f,c
  2584  001516  D7ED               	goto	l2852
  2585  001518                     l831:
  2586  001518  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  2587  00151C  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2588  001520  0012               	return		;funcret
  2589  001522                     __end_of___lwdiv:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           intcon	equ	0xFF2
  2598                           postinc0	equ	0xFEE
  2599                           wreg	equ	0xFE8
  2600                           postdec1	equ	0xFE5
  2601                           fsr1l	equ	0xFE1
  2602                           indf2	equ	0xFDF
  2603                           postinc2	equ	0xFDE
  2604                           postdec2	equ	0xFDD
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           status	equ	0xFD8
  2608                           
  2609 ;; *************** function _limpaTela *****************
  2610 ;; Defined at:
  2611 ;;		line 147 in file "main.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2625 ;;      Params:         0       0       0       0       0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    5
  2632 ;; This function calls:
  2633 ;;		_SetDDRamAddr
  2634 ;;		_putrsXLCD
  2635 ;; This function is called by:
  2636 ;;		_telas
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text8
  2641  0017A4                     __ptext8:
  2642                           	opt stack 0
  2643  0017A4                     _limpaTela:
  2644                           	opt stack 24
  2645                           
  2646                           ;main.c: 148: SetDDRamAddr(0x00);
  2647                           
  2648                           ;incstack = 0
  2649  0017A4  0E00               	movlw	0
  2650  0017A6  EC91  F00A         	call	_SetDDRamAddr
  2651                           
  2652                           ;main.c: 149: putrsXLCD("                ");
  2653  0017AA  0E4B               	movlw	low STR_1
  2654  0017AC  6E14               	movwf	putrsXLCD@buffer,c
  2655  0017AE  0E08               	movlw	high STR_1
  2656  0017B0  6E15               	movwf	putrsXLCD@buffer+1,c
  2657  0017B2  EC0F  F00A         	call	_putrsXLCD	;wreg free
  2658                           
  2659                           ;main.c: 150: SetDDRamAddr(0x40);
  2660  0017B6  0E40               	movlw	64
  2661  0017B8  EC91  F00A         	call	_SetDDRamAddr
  2662                           
  2663                           ;main.c: 151: putrsXLCD("                ");
  2664  0017BC  0E4B               	movlw	low STR_1
  2665  0017BE  6E14               	movwf	putrsXLCD@buffer,c
  2666  0017C0  0E08               	movlw	high STR_1
  2667  0017C2  6E15               	movwf	putrsXLCD@buffer+1,c
  2668  0017C4  EC0F  F00A         	call	_putrsXLCD	;wreg free
  2669  0017C8  0012               	return		;funcret
  2670  0017CA                     __end_of_limpaTela:
  2671                           	opt stack 0
  2672                           tblptru	equ	0xFF8
  2673                           tblptrh	equ	0xFF7
  2674                           tblptrl	equ	0xFF6
  2675                           tablat	equ	0xFF5
  2676                           prodh	equ	0xFF4
  2677                           prodl	equ	0xFF3
  2678                           intcon	equ	0xFF2
  2679                           postinc0	equ	0xFEE
  2680                           wreg	equ	0xFE8
  2681                           postdec1	equ	0xFE5
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           postinc2	equ	0xFDE
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _escreveMensagem *****************
  2691 ;; Defined at:
  2692 ;;		line 139 in file "main.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  l1              2   22[COMRAM] PTR unsigned char 
  2695 ;;		 -> mensagemL1(16), 
  2696 ;;  l2              2   24[COMRAM] PTR unsigned char 
  2697 ;;		 -> mensagemL2(16), 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:         4       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        4 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    5
  2716 ;; This function calls:
  2717 ;;		_SetDDRamAddr
  2718 ;;		_putrsXLCD
  2719 ;; This function is called by:
  2720 ;;		_telas
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text9
  2725  0017CA                     __ptext9:
  2726                           	opt stack 0
  2727  0017CA                     _escreveMensagem:
  2728                           	opt stack 24
  2729                           
  2730                           ;main.c: 140: SetDDRamAddr(0x00);
  2731                           
  2732                           ;incstack = 0
  2733  0017CA  0E00               	movlw	0
  2734  0017CC  EC91  F00A         	call	_SetDDRamAddr
  2735                           
  2736                           ;main.c: 141: putrsXLCD(l1);
  2737  0017D0  C017  F014         	movff	escreveMensagem@l1,putrsXLCD@buffer
  2738  0017D4  C018  F015         	movff	escreveMensagem@l1+1,putrsXLCD@buffer+1
  2739  0017D8  EC0F  F00A         	call	_putrsXLCD	;wreg free
  2740                           
  2741                           ;main.c: 142: SetDDRamAddr(0x40);
  2742  0017DC  0E40               	movlw	64
  2743  0017DE  EC91  F00A         	call	_SetDDRamAddr
  2744                           
  2745                           ;main.c: 143: putrsXLCD(l2);
  2746  0017E2  C019  F014         	movff	escreveMensagem@l2,putrsXLCD@buffer
  2747  0017E6  C01A  F015         	movff	escreveMensagem@l2+1,putrsXLCD@buffer+1
  2748  0017EA  EC0F  F00A         	call	_putrsXLCD	;wreg free
  2749  0017EE  0012               	return		;funcret
  2750  0017F0                     __end_of_escreveMensagem:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           prodh	equ	0xFF4
  2757                           prodl	equ	0xFF3
  2758                           intcon	equ	0xFF2
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1l	equ	0xFE1
  2763                           indf2	equ	0xFDF
  2764                           postinc2	equ	0xFDE
  2765                           postdec2	equ	0xFDD
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function _putrsXLCD *****************
  2771 ;; Defined at:
  2772 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  2775 ;;		 -> mensagemL2(16), mensagemL1(16), STR_2(17), STR_1(17), 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2787 ;;      Params:         2       0       0       0       0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2790 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:        2 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    4
  2794 ;; This function calls:
  2795 ;;		_BusyXLCD
  2796 ;;		_WriteDataXLCD
  2797 ;; This function is called by:
  2798 ;;		_escreveMensagem
  2799 ;;		_limpaTela
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text10
  2804  00141E                     __ptext10:
  2805                           	opt stack 0
  2806  00141E                     _putrsXLCD:
  2807                           	opt stack 24
  2808                           
  2809                           ;incstack = 0
  2810  00141E  D019               	goto	l2820
  2811  001420                     l2814:
  2812  001420  EC85  F00B         	call	_BusyXLCD	;wreg free
  2813  001424  0900               	iorlw	0
  2814  001426  A4D8               	btfss	status,2,c
  2815  001428  D7FB               	goto	l2814
  2816  00142A  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2817  00142E  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2818  001432  6AF8               	clrf	tblptru,c
  2819  001434  0E07               	movlw	(high __ramtop+-1)
  2820  001436  64F7               	cpfsgt	tblptrh,c
  2821  001438  D003               	bra	u1717
  2822  00143A  0008               	tblrd		*
  2823  00143C  50F5               	movf	tablat,w,c
  2824  00143E  D005               	bra	u1710
  2825  001440                     u1717:
  2826  001440  CFF6 FFE9          	movff	tblptrl,fsr0l
  2827  001444  CFF7 FFEA          	movff	tblptrh,fsr0h
  2828  001448  50EF               	movf	indf0,w,c
  2829  00144A                     u1710:
  2830  00144A  EC47  F00B         	call	_WriteDataXLCD
  2831  00144E  4A14               	infsnz	putrsXLCD@buffer,f,c
  2832  001450  2A15               	incf	putrsXLCD@buffer+1,f,c
  2833  001452                     l2820:
  2834  001452  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2835  001456  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2836  00145A  6AF8               	clrf	tblptru,c
  2837  00145C  0E07               	movlw	(high __ramtop+-1)
  2838  00145E  64F7               	cpfsgt	tblptrh,c
  2839  001460  D003               	bra	u1727
  2840  001462  0008               	tblrd		*
  2841  001464  50F5               	movf	tablat,w,c
  2842  001466  D005               	bra	u1720
  2843  001468                     u1727:
  2844  001468  CFF6 FFE9          	movff	tblptrl,fsr0l
  2845  00146C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2846  001470  50EF               	movf	indf0,w,c
  2847  001472                     u1720:
  2848  001472  0900               	iorlw	0
  2849  001474  B4D8               	btfsc	status,2,c
  2850  001476  0012               	return	
  2851  001478  D7D3               	goto	l2814
  2852  00147A                     __end_of_putrsXLCD:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodh	equ	0xFF4
  2859                           prodl	equ	0xFF3
  2860                           intcon	equ	0xFF2
  2861                           indf0	equ	0xFEF
  2862                           postinc0	equ	0xFEE
  2863                           fsr0h	equ	0xFEA
  2864                           fsr0l	equ	0xFE9
  2865                           wreg	equ	0xFE8
  2866                           postdec1	equ	0xFE5
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _WriteDataXLCD *****************
  2876 ;; Defined at:
  2877 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  data            1    wreg     unsigned char 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  data            1   18[COMRAM] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0
  2892 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2894 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2895 ;;Total ram usage:        1 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    3
  2898 ;; This function calls:
  2899 ;;		_DelayFor18TCY
  2900 ;; This function is called by:
  2901 ;;		_putrsXLCD
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text11
  2906  00168E                     __ptext11:
  2907                           	opt stack 0
  2908  00168E                     _WriteDataXLCD:
  2909                           	opt stack 24
  2910                           
  2911                           ;incstack = 0
  2912                           ;WriteDataXLCD@data stored from wreg
  2913  00168E  6E13               	movwf	WriteDataXLCD@data,c
  2914  001690  0EF0               	movlw	240
  2915  001692  1693               	andwf	3987,f,c	;volatile
  2916  001694  0EF0               	movlw	240
  2917  001696  1681               	andwf	3969,f,c	;volatile
  2918  001698  3813               	swapf	WriteDataXLCD@data,w,c
  2919  00169A  0B0F               	andlw	15
  2920  00169C  0B0F               	andlw	15
  2921  00169E  1281               	iorwf	3969,f,c	;volatile
  2922  0016A0  8A8A               	bsf	3978,5,c	;volatile
  2923  0016A2  9C8A               	bcf	3978,6,c	;volatile
  2924  0016A4  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  2925  0016A8  888A               	bsf	3978,4,c	;volatile
  2926  0016AA  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  2927  0016AE  988A               	bcf	3978,4,c	;volatile
  2928  0016B0  0EF0               	movlw	240
  2929  0016B2  1681               	andwf	3969,f,c	;volatile
  2930  0016B4  5013               	movf	WriteDataXLCD@data,w,c
  2931  0016B6  0B0F               	andlw	15
  2932  0016B8  1281               	iorwf	3969,f,c	;volatile
  2933  0016BA  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  2934  0016BE  888A               	bsf	3978,4,c	;volatile
  2935  0016C0  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  2936  0016C4  988A               	bcf	3978,4,c	;volatile
  2937  0016C6  0E0F               	movlw	15
  2938  0016C8  1293               	iorwf	3987,f,c	;volatile
  2939  0016CA  0012               	return	
  2940  0016CC                     __end_of_WriteDataXLCD:
  2941                           	opt stack 0
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           prodh	equ	0xFF4
  2947                           prodl	equ	0xFF3
  2948                           intcon	equ	0xFF2
  2949                           indf0	equ	0xFEF
  2950                           postinc0	equ	0xFEE
  2951                           fsr0h	equ	0xFEA
  2952                           fsr0l	equ	0xFE9
  2953                           wreg	equ	0xFE8
  2954                           postdec1	equ	0xFE5
  2955                           fsr1l	equ	0xFE1
  2956                           indf2	equ	0xFDF
  2957                           postinc2	equ	0xFDE
  2958                           postdec2	equ	0xFDD
  2959                           fsr2h	equ	0xFDA
  2960                           fsr2l	equ	0xFD9
  2961                           status	equ	0xFD8
  2962                           
  2963 ;; *************** function _maquinaEstado *****************
  2964 ;; Defined at:
  2965 ;;		line 541 in file "main.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    4
  2986 ;; This function calls:
  2987 ;;		_enviaByte
  2988 ;;		_trataComando
  2989 ;;		_tx_data
  2990 ;;		_verificaCRCBUFFCOM
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text12
  2997  0015C2                     __ptext12:
  2998                           	opt stack 0
  2999  0015C2                     _maquinaEstado:
  3000                           	opt stack 26
  3001                           
  3002                           ;main.c: 542: switch(estado){
  3003                           
  3004                           ;incstack = 0
  3005  0015C2  D011               	goto	l3260
  3006  0015C4                     l3248:
  3007                           
  3008                           ;main.c: 544: verificaCRCBUFFCOM();
  3009  0015C4  ECBA  F00A         	call	_verificaCRCBUFFCOM	;wreg free
  3010                           
  3011                           ;main.c: 545: break;
  3012  0015C8  0012               	return	
  3013  0015CA                     l3250:
  3014                           
  3015                           ;main.c: 548: trataComando();
  3016  0015CA  EC8B  F006         	call	_trataComando	;wreg free
  3017                           
  3018                           ;main.c: 549: break;
  3019  0015CE  0012               	return	
  3020  0015D0                     l3252:
  3021                           
  3022                           ;main.c: 552: tx_data();
  3023  0015D0  ECA2  F00B         	call	_tx_data	;wreg free
  3024                           
  3025                           ;main.c: 553: break;
  3026  0015D4  0012               	return	
  3027  0015D6                     l3254:
  3028                           
  3029                           ;main.c: 556: enviaByte(0x05);
  3030  0015D6  0E05               	movlw	5
  3031  0015D8  EC08  F00C         	call	_enviaByte
  3032                           
  3033                           ;main.c: 557: break;
  3034  0015DC  0012               	return	
  3035  0015DE                     l3256:
  3036                           
  3037                           ;main.c: 560: enviaByte(0x15);
  3038  0015DE  0E15               	movlw	21
  3039  0015E0  EC08  F00C         	call	_enviaByte
  3040                           
  3041                           ;main.c: 567: }
  3042                           
  3043                           ;main.c: 566: break;
  3044                           
  3045                           ;main.c: 565: default:
  3046                           
  3047                           ;main.c: 564: break;
  3048                           
  3049                           ;main.c: 563: case 0:
  3050                           
  3051                           ;main.c: 561: break;
  3052  0015E4  0012               	return	
  3053  0015E6                     l3260:
  3054  0015E6  5038               	movf	_estado,w,c
  3055                           
  3056                           ; Switch size 1, requested type "space"
  3057                           ; Number of cases is 6, Range of values is 0 to 5
  3058                           ; switch strategies available:
  3059                           ; Name         Instructions Cycles
  3060                           ; simple_byte           19    10 (average)
  3061                           ;	Chosen strategy is simple_byte
  3062  0015E8  0A00               	xorlw	0	; case 0
  3063  0015EA  B4D8               	btfsc	status,2,c
  3064  0015EC  0012               	return	
  3065  0015EE  0A01               	xorlw	1	; case 1
  3066  0015F0  B4D8               	btfsc	status,2,c
  3067  0015F2  D7E8               	goto	l3248
  3068  0015F4  0A03               	xorlw	3	; case 2
  3069  0015F6  B4D8               	btfsc	status,2,c
  3070  0015F8  D7E8               	goto	l3250
  3071  0015FA  0A01               	xorlw	1	; case 3
  3072  0015FC  B4D8               	btfsc	status,2,c
  3073  0015FE  D7E8               	goto	l3252
  3074  001600  0A07               	xorlw	7	; case 4
  3075  001602  B4D8               	btfsc	status,2,c
  3076  001604  D7E8               	goto	l3254
  3077  001606  0A01               	xorlw	1	; case 5
  3078  001608  A4D8               	btfss	status,2,c
  3079  00160A  0012               	return	
  3080  00160C  D7E8               	goto	l3256
  3081  00160E                     __end_of_maquinaEstado:
  3082                           	opt stack 0
  3083                           tblptru	equ	0xFF8
  3084                           tblptrh	equ	0xFF7
  3085                           tblptrl	equ	0xFF6
  3086                           tablat	equ	0xFF5
  3087                           prodh	equ	0xFF4
  3088                           prodl	equ	0xFF3
  3089                           intcon	equ	0xFF2
  3090                           indf0	equ	0xFEF
  3091                           postinc0	equ	0xFEE
  3092                           fsr0h	equ	0xFEA
  3093                           fsr0l	equ	0xFE9
  3094                           wreg	equ	0xFE8
  3095                           postdec1	equ	0xFE5
  3096                           fsr1l	equ	0xFE1
  3097                           indf2	equ	0xFDF
  3098                           postinc2	equ	0xFDE
  3099                           postdec2	equ	0xFDD
  3100                           fsr2h	equ	0xFDA
  3101                           fsr2l	equ	0xFD9
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function _verificaCRCBUFFCOM *****************
  3105 ;; Defined at:
  3106 ;;		line 528 in file "main.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  crc             2   33[COMRAM] unsigned int 
  3111 ;;  CRC_OK          1   32[COMRAM] unsigned char 
  3112 ;;  crc2            1   31[COMRAM] unsigned char 
  3113 ;;  crc1            1   30[COMRAM] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0
  3124 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3126 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3127 ;;Total ram usage:        5 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    2
  3130 ;; This function calls:
  3131 ;;		_crc16
  3132 ;; This function is called by:
  3133 ;;		_maquinaEstado
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text13
  3138  001574                     __ptext13:
  3139                           	opt stack 0
  3140  001574                     _verificaCRCBUFFCOM:
  3141                           	opt stack 27
  3142                           
  3143                           ;main.c: 529: char CRC_OK;
  3144                           ;main.c: 530: unsigned int crc = crc16(BUFFCOM, 5);
  3145                           
  3146                           ;incstack = 0
  3147  001574  0E3A               	movlw	low _BUFFCOM
  3148  001576  6E12               	movwf	crc16@data_p,c
  3149  001578  0E00               	movlw	high _BUFFCOM
  3150  00157A  6E13               	movwf	crc16@data_p+1,c
  3151  00157C  0E00               	movlw	0
  3152  00157E  6E15               	movwf	crc16@length+1,c
  3153  001580  0E05               	movlw	5
  3154  001582  6E14               	movwf	crc16@length,c
  3155  001584  ECAF  F008         	call	_crc16	;wreg free
  3156  001588  C012  F022         	movff	?_crc16,verificaCRCBUFFCOM@crc
  3157  00158C  C013  F023         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  3158                           
  3159                           ;main.c: 531: unsigned char crc1 = crc >> 8;
  3160  001590  5023               	movf	verificaCRCBUFFCOM@crc+1,w,c
  3161  001592  6E1F               	movwf	verificaCRCBUFFCOM@crc1,c
  3162                           
  3163                           ;main.c: 532: unsigned char crc2 = crc & 0xFF;
  3164  001594  C022  F020         	movff	verificaCRCBUFFCOM@crc,verificaCRCBUFFCOM@crc2
  3165                           
  3166                           ;main.c: 534: if(crc1 == BUFFCOM[5] && BUFFCOM[6] == crc2) CRC_OK = 1;
  3167  001598  501F               	movf	verificaCRCBUFFCOM@crc1,w,c
  3168  00159A  183F               	xorwf	_BUFFCOM+5,w,c
  3169  00159C  A4D8               	btfss	status,2,c
  3170  00159E  D006               	goto	l3066
  3171  0015A0  5020               	movf	verificaCRCBUFFCOM@crc2,w,c
  3172  0015A2  1840               	xorwf	_BUFFCOM+6,w,c
  3173  0015A4  A4D8               	btfss	status,2,c
  3174  0015A6  D002               	goto	l3066
  3175  0015A8  0E01               	movlw	1
  3176  0015AA  D001               	goto	L1
  3177  0015AC                     l3066:
  3178                           
  3179                           ;main.c: 535: else CRC_OK = 0;
  3180  0015AC  0E00               	movlw	0
  3181  0015AE                     L1:
  3182  0015AE  6E21               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  3183                           
  3184                           ;main.c: 537: if(CRC_OK == 1) estado = 4;
  3185  0015B0  0421               	decf	verificaCRCBUFFCOM@CRC_OK,w,c
  3186  0015B2  A4D8               	btfss	status,2,c
  3187  0015B4  D003               	goto	l3072
  3188  0015B6  0E04               	movlw	4
  3189  0015B8  6E38               	movwf	_estado,c
  3190  0015BA  0012               	return	
  3191  0015BC                     l3072:
  3192                           
  3193                           ;main.c: 538: else estado = 5;
  3194  0015BC  0E05               	movlw	5
  3195  0015BE  6E38               	movwf	_estado,c
  3196  0015C0  0012               	return	
  3197  0015C2                     __end_of_verificaCRCBUFFCOM:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           intcon	equ	0xFF2
  3206                           indf0	equ	0xFEF
  3207                           postinc0	equ	0xFEE
  3208                           fsr0h	equ	0xFEA
  3209                           fsr0l	equ	0xFE9
  3210                           wreg	equ	0xFE8
  3211                           postdec1	equ	0xFE5
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function _tx_data *****************
  3221 ;; Defined at:
  3222 ;;		line 582 in file "main.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  cont            2   17[COMRAM] int 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0
  3237 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3239 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3240 ;;Total ram usage:        2 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_maquinaEstado
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text14
  3251  001744                     __ptext14:
  3252                           	opt stack 0
  3253  001744                     _tx_data:
  3254                           	opt stack 28
  3255                           
  3256                           ;main.c: 583: int cont;
  3257                           ;main.c: 584: for(cont=0;cont<7;cont++){
  3258                           
  3259                           ;incstack = 0
  3260  001744  0E00               	movlw	0
  3261  001746  6E13               	movwf	tx_data@cont+1,c
  3262  001748  0E00               	movlw	0
  3263  00174A  6E12               	movwf	tx_data@cont,c
  3264  00174C                     l3076:
  3265  00174C  BE13               	btfsc	tx_data@cont+1,7,c
  3266  00174E  D006               	goto	l276
  3267  001750  5013               	movf	tx_data@cont+1,w,c
  3268  001752  E111               	bnz	l3086
  3269  001754  0E07               	movlw	7
  3270  001756  5C12               	subwf	tx_data@cont,w,c
  3271  001758  B0D8               	btfsc	status,0,c
  3272  00175A  D00D               	goto	l3086
  3273  00175C                     l276:
  3274  00175C  A89E               	btfss	3998,4,c	;volatile
  3275  00175E  D7FE               	goto	l276
  3276                           
  3277                           ;main.c: 586: TXREG = BUFFRESP[cont];
  3278  001760  0E96               	movlw	low _BUFFRESP
  3279  001762  2412               	addwf	tx_data@cont,w,c
  3280  001764  6ED9               	movwf	fsr2l,c
  3281  001766  0E00               	movlw	high _BUFFRESP
  3282  001768  2013               	addwfc	tx_data@cont+1,w,c
  3283  00176A  6EDA               	movwf	fsr2h,c
  3284  00176C  50DF               	movf	indf2,w,c
  3285  00176E  6EAD               	movwf	4013,c	;volatile
  3286  001770  4A12               	infsnz	tx_data@cont,f,c
  3287  001772  2A13               	incf	tx_data@cont+1,f,c
  3288  001774  D7EB               	goto	l3076
  3289  001776                     l3086:
  3290                           
  3291                           ;main.c: 587: }
  3292                           ;main.c: 588: estado = 0;
  3293  001776  0E00               	movlw	0
  3294  001778  6E38               	movwf	_estado,c
  3295  00177A  0012               	return		;funcret
  3296  00177C                     __end_of_tx_data:
  3297                           	opt stack 0
  3298                           tblptru	equ	0xFF8
  3299                           tblptrh	equ	0xFF7
  3300                           tblptrl	equ	0xFF6
  3301                           tablat	equ	0xFF5
  3302                           prodh	equ	0xFF4
  3303                           prodl	equ	0xFF3
  3304                           intcon	equ	0xFF2
  3305                           indf0	equ	0xFEF
  3306                           postinc0	equ	0xFEE
  3307                           fsr0h	equ	0xFEA
  3308                           fsr0l	equ	0xFE9
  3309                           wreg	equ	0xFE8
  3310                           postdec1	equ	0xFE5
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           postinc2	equ	0xFDE
  3314                           postdec2	equ	0xFDD
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function _trataComando *****************
  3320 ;; Defined at:
  3321 ;;		line 443 in file "main.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  iterator        2   39[COMRAM] int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        4 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    3
  3342 ;; This function calls:
  3343 ;;		_calculaCRCBUFFRESP
  3344 ;;		_memcpy
  3345 ;; This function is called by:
  3346 ;;		_maquinaEstado
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text15
  3351  000D16                     __ptext15:
  3352                           	opt stack 0
  3353  000D16                     _trataComando:
  3354                           	opt stack 26
  3355                           
  3356                           ;main.c: 444: int iterator;
  3357                           ;main.c: 446: switch(BUFFCOM[0]){
  3358                           
  3359                           ;incstack = 0
  3360  000D16  D0DE               	goto	l3050
  3361  000D18                     l3016:
  3362                           
  3363                           ;main.c: 448: memcpy(&BUFFRESP[0], &BUFFCOM[0], sizeof(BUFFCOM[0]));
  3364  000D18  0E96               	movlw	low _BUFFRESP
  3365  000D1A  6E12               	movwf	memcpy@d1,c
  3366  000D1C  0E00               	movlw	high _BUFFRESP
  3367  000D1E  6E13               	movwf	memcpy@d1+1,c
  3368  000D20  0E3A               	movlw	low _BUFFCOM
  3369  000D22  6E14               	movwf	memcpy@s1,c
  3370  000D24  0E00               	movlw	high _BUFFCOM
  3371  000D26  6E15               	movwf	memcpy@s1+1,c
  3372  000D28  5014               	movf	memcpy@s1,w,c
  3373  000D2A  1015               	iorwf	memcpy@s1+1,w,c
  3374  000D2C  A4D8               	btfss	status,2,c
  3375  000D2E  0E20               	movlw	32
  3376  000D30  6E16               	movwf	memcpy@s1+2,c
  3377  000D32  0E00               	movlw	0
  3378  000D34  6E18               	movwf	memcpy@n+1,c
  3379  000D36  0E01               	movlw	1
  3380  000D38  6E17               	movwf	memcpy@n,c
  3381  000D3A  ECDE  F009         	call	_memcpy	;wreg free
  3382                           
  3383                           ;main.c: 449: memcpy(&BUFFRESP[1], &BUFFCOM[1], sizeof(BUFFCOM[1]));
  3384  000D3E  0E97               	movlw	low (_BUFFRESP+1)
  3385  000D40  6E12               	movwf	memcpy@d1,c
  3386  000D42  0E00               	movlw	high (_BUFFRESP+1)
  3387  000D44  6E13               	movwf	memcpy@d1+1,c
  3388  000D46  0E3B               	movlw	low (_BUFFCOM+1)
  3389  000D48  6E14               	movwf	memcpy@s1,c
  3390  000D4A  0E00               	movlw	high (_BUFFCOM+1)
  3391  000D4C  6E15               	movwf	memcpy@s1+1,c
  3392  000D4E  5014               	movf	memcpy@s1,w,c
  3393  000D50  1015               	iorwf	memcpy@s1+1,w,c
  3394  000D52  A4D8               	btfss	status,2,c
  3395  000D54  0E20               	movlw	32
  3396  000D56  6E16               	movwf	memcpy@s1+2,c
  3397  000D58  0E00               	movlw	0
  3398  000D5A  6E18               	movwf	memcpy@n+1,c
  3399  000D5C  0E01               	movlw	1
  3400  000D5E  6E17               	movwf	memcpy@n,c
  3401  000D60  ECDE  F009         	call	_memcpy	;wreg free
  3402                           
  3403                           ;main.c: 450: switch(BUFFCOM[1]){
  3404  000D64  D04C               	goto	l3022
  3405  000D66                     l3018:
  3406                           
  3407                           ;main.c: 453: memcpy(&BUFFRESP[2], &versao, sizeof(versao));
  3408  000D66  0E98               	movlw	low (_BUFFRESP+2)
  3409  000D68  6E12               	movwf	memcpy@d1,c
  3410  000D6A  0E00               	movlw	high (_BUFFRESP+2)
  3411  000D6C  6E13               	movwf	memcpy@d1+1,c
  3412  000D6E  0E4C               	movlw	low _versao
  3413  000D70  6E14               	movwf	memcpy@s1,c
  3414  000D72  0E00               	movlw	high _versao
  3415  000D74  6E15               	movwf	memcpy@s1+1,c
  3416  000D76  5014               	movf	memcpy@s1,w,c
  3417  000D78  1015               	iorwf	memcpy@s1+1,w,c
  3418  000D7A  A4D8               	btfss	status,2,c
  3419  000D7C  0E20               	movlw	32
  3420  000D7E  6E16               	movwf	memcpy@s1+2,c
  3421  000D80  0E00               	movlw	0
  3422  000D82  6E18               	movwf	memcpy@n+1,c
  3423  000D84  0E01               	movlw	1
  3424  000D86  6E17               	movwf	memcpy@n,c
  3425  000D88  ECDE  F009         	call	_memcpy	;wreg free
  3426                           
  3427                           ;main.c: 454: memcpy(&BUFFRESP[3], &revisao, sizeof(revisao));
  3428  000D8C  0E99               	movlw	low (_BUFFRESP+3)
  3429  000D8E  6E12               	movwf	memcpy@d1,c
  3430  000D90  0E00               	movlw	high (_BUFFRESP+3)
  3431  000D92  6E13               	movwf	memcpy@d1+1,c
  3432  000D94  0E4B               	movlw	low _revisao
  3433  000D96  6E14               	movwf	memcpy@s1,c
  3434  000D98  0E00               	movlw	high _revisao
  3435  000D9A  6E15               	movwf	memcpy@s1+1,c
  3436  000D9C  5014               	movf	memcpy@s1,w,c
  3437  000D9E  1015               	iorwf	memcpy@s1+1,w,c
  3438  000DA0  A4D8               	btfss	status,2,c
  3439  000DA2  0E20               	movlw	32
  3440  000DA4  6E16               	movwf	memcpy@s1+2,c
  3441  000DA6  0E00               	movlw	0
  3442  000DA8  6E18               	movwf	memcpy@n+1,c
  3443  000DAA  0E01               	movlw	1
  3444  000DAC  6E17               	movwf	memcpy@n,c
  3445  000DAE  ECDE  F009         	call	_memcpy	;wreg free
  3446                           
  3447                           ;main.c: 455: memcpy(&BUFFRESP[4], 0x0, sizeof(char));
  3448  000DB2  0E9A               	movlw	low (_BUFFRESP+4)
  3449  000DB4  6E12               	movwf	memcpy@d1,c
  3450  000DB6  0E00               	movlw	high (_BUFFRESP+4)
  3451  000DB8  6E13               	movwf	memcpy@d1+1,c
  3452  000DBA  0E00               	movlw	0
  3453  000DBC  6E14               	movwf	memcpy@s1,c
  3454  000DBE  0E00               	movlw	0
  3455  000DC0  6E15               	movwf	memcpy@s1+1,c
  3456  000DC2  0E00               	movlw	0
  3457  000DC4  6E16               	movwf	memcpy@s1+2,c
  3458  000DC6  0E00               	movlw	0
  3459  000DC8  6E18               	movwf	memcpy@n+1,c
  3460  000DCA  0E01               	movlw	1
  3461  000DCC  6E17               	movwf	memcpy@n,c
  3462  000DCE  ECDE  F009         	call	_memcpy	;wreg free
  3463                           
  3464                           ;main.c: 459: break;
  3465  000DD2  D087               	goto	l3052
  3466  000DD4                     l229:
  3467                           
  3468                           ;main.c: 463: BUFFRESP[2] = horaAtual.h;
  3469  000DD4  C02C  F098         	movff	_horaAtual,_BUFFRESP+2
  3470                           
  3471                           ;main.c: 464: BUFFRESP[3] = horaAtual.m;
  3472  000DD8  C02D  F099         	movff	_horaAtual+1,_BUFFRESP+3
  3473                           
  3474                           ;main.c: 465: BUFFRESP[4] = horaAtual.s;
  3475  000DDC  C02E  F09A         	movff	_horaAtual+2,_BUFFRESP+4
  3476                           
  3477                           ;main.c: 466: break;
  3478  000DE0  D080               	goto	l3052
  3479  000DE2                     l230:
  3480                           
  3481                           ;main.c: 470: BUFFRESP[2] = dia;
  3482  000DE2  C049  F098         	movff	_dia,_BUFFRESP+2
  3483                           
  3484                           ;main.c: 471: BUFFRESP[3] = mes;
  3485  000DE6  C048  F099         	movff	_mes,_BUFFRESP+3
  3486                           
  3487                           ;main.c: 472: BUFFRESP[4] = ano;
  3488  000DEA  C043  F09A         	movff	_ano,_BUFFRESP+4
  3489                           
  3490                           ;main.c: 473: break;
  3491  000DEE  D079               	goto	l3052
  3492  000DF0                     l231:
  3493                           
  3494                           ;main.c: 477: BUFFRESP[2] = desp_hora;
  3495  000DF0  C047  F098         	movff	_desp_hora,_BUFFRESP+2
  3496                           
  3497                           ;main.c: 478: BUFFRESP[3] = desp_min;
  3498  000DF4  C046  F099         	movff	_desp_min,_BUFFRESP+3
  3499                           
  3500                           ;main.c: 479: BUFFRESP[4] = 0xFF;
  3501  000DF8  0100               	movlb	0	; () banked
  3502  000DFA  699A               	setf	(_BUFFRESP+4)& (0+255),b
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;main.c: 484: }
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;main.c: 483: break;
  3509                           
  3510                           ;main.c: 482: default:
  3511                           
  3512                           ;main.c: 480: break;
  3513  000DFC  D072               	goto	l3052
  3514  000DFE                     l3022:
  3515  000DFE  503B               	movf	_BUFFCOM+1,w,c
  3516                           
  3517                           ; Switch size 1, requested type "space"
  3518                           ; Number of cases is 4, Range of values is 48 to 51
  3519                           ; switch strategies available:
  3520                           ; Name         Instructions Cycles
  3521                           ; simple_byte           13     7 (average)
  3522                           ;	Chosen strategy is simple_byte
  3523  000E00  0A30               	xorlw	48	; case 48
  3524  000E02  B4D8               	btfsc	status,2,c
  3525  000E04  D7B0               	goto	l3018
  3526  000E06  0A01               	xorlw	1	; case 49
  3527  000E08  B4D8               	btfsc	status,2,c
  3528  000E0A  D7E4               	goto	l229
  3529  000E0C  0A03               	xorlw	3	; case 50
  3530  000E0E  B4D8               	btfsc	status,2,c
  3531  000E10  D7E8               	goto	l230
  3532  000E12  0A01               	xorlw	1	; case 51
  3533  000E14  B4D8               	btfsc	status,2,c
  3534  000E16  D7EC               	goto	l231
  3535                           
  3536                           ;main.c: 485: break;
  3537  000E18  D064               	goto	l3052
  3538  000E1A                     l3024:
  3539                           
  3540                           ;main.c: 488: for(iterator = 0; iterator < 5; iterator++){
  3541  000E1A  0E00               	movlw	0
  3542  000E1C  6E29               	movwf	trataComando@iterator+1,c
  3543  000E1E  0E00               	movlw	0
  3544  000E20  6E28               	movwf	trataComando@iterator,c
  3545  000E22                     l3026:
  3546  000E22  BE29               	btfsc	trataComando@iterator+1,7,c
  3547  000E24  D006               	goto	l3030
  3548  000E26  5029               	movf	trataComando@iterator+1,w,c
  3549  000E28  E147               	bnz	l3046
  3550  000E2A  0E05               	movlw	5
  3551  000E2C  5C28               	subwf	trataComando@iterator,w,c
  3552  000E2E  B0D8               	btfsc	status,0,c
  3553  000E30  D043               	goto	l3046
  3554  000E32                     l3030:
  3555                           
  3556                           ;main.c: 489: memcpy(&BUFFRESP[iterator], &BUFFCOM[iterator], sizeof(BUFFCOM[iterator]))
      +                          ;
  3557  000E32  0E96               	movlw	low _BUFFRESP
  3558  000E34  2428               	addwf	trataComando@iterator,w,c
  3559  000E36  6E12               	movwf	memcpy@d1,c
  3560  000E38  0E00               	movlw	high _BUFFRESP
  3561  000E3A  2029               	addwfc	trataComando@iterator+1,w,c
  3562  000E3C  6E13               	movwf	memcpy@d1+1,c
  3563  000E3E  0E3A               	movlw	low _BUFFCOM
  3564  000E40  2428               	addwf	trataComando@iterator,w,c
  3565  000E42  6E26               	movwf	??_trataComando& (0+255),c
  3566  000E44  0E00               	movlw	high _BUFFCOM
  3567  000E46  2029               	addwfc	trataComando@iterator+1,w,c
  3568  000E48  6E27               	movwf	(??_trataComando+1)& (0+255),c
  3569  000E4A  C026  F014         	movff	??_trataComando,memcpy@s1
  3570  000E4E  C027  F015         	movff	??_trataComando+1,memcpy@s1+1
  3571  000E52  5014               	movf	memcpy@s1,w,c
  3572  000E54  1015               	iorwf	memcpy@s1+1,w,c
  3573  000E56  A4D8               	btfss	status,2,c
  3574  000E58  0E20               	movlw	32
  3575  000E5A  6E16               	movwf	memcpy@s1+2,c
  3576  000E5C  0E00               	movlw	0
  3577  000E5E  6E18               	movwf	memcpy@n+1,c
  3578  000E60  0E01               	movlw	1
  3579  000E62  6E17               	movwf	memcpy@n,c
  3580  000E64  ECDE  F009         	call	_memcpy	;wreg free
  3581  000E68  4A28               	infsnz	trataComando@iterator,f,c
  3582  000E6A  2A29               	incf	trataComando@iterator+1,f,c
  3583  000E6C  D7DA               	goto	l3026
  3584  000E6E                     l3036:
  3585                           
  3586                           ;main.c: 495: versao = BUFFCOM[2]-48;
  3587  000E6E  503C               	movf	_BUFFCOM+2,w,c
  3588  000E70  0FD0               	addlw	208
  3589  000E72  6E4C               	movwf	_versao,c
  3590                           
  3591                           ;main.c: 496: revisao = BUFFCOM[3]-48;
  3592  000E74  503D               	movf	_BUFFCOM+3,w,c
  3593  000E76  0FD0               	addlw	208
  3594  000E78  6E4B               	movwf	_revisao,c
  3595                           
  3596                           ;main.c: 497: break;
  3597  000E7A  D033               	goto	l3052
  3598  000E7C                     l3038:
  3599                           
  3600                           ;main.c: 501: horaAtual.h = (BUFFCOM[2]-48);
  3601  000E7C  503C               	movf	_BUFFCOM+2,w,c
  3602  000E7E  0FD0               	addlw	208
  3603  000E80  6E2C               	movwf	_horaAtual,c
  3604                           
  3605                           ;main.c: 502: horaAtual.m = (BUFFCOM[3]-48);
  3606  000E82  503D               	movf	_BUFFCOM+3,w,c
  3607  000E84  0FD0               	addlw	208
  3608  000E86  6E2D               	movwf	_horaAtual+1,c
  3609                           
  3610                           ;main.c: 503: horaAtual.s = (BUFFCOM[4]-48);
  3611  000E88  503E               	movf	_BUFFCOM+4,w,c
  3612  000E8A  0FD0               	addlw	208
  3613  000E8C  6E2E               	movwf	_horaAtual+2,c
  3614                           
  3615                           ;main.c: 504: break;
  3616  000E8E  D029               	goto	l3052
  3617  000E90                     l3040:
  3618                           
  3619                           ;main.c: 508: dia = BUFFCOM[2]-48;
  3620  000E90  503C               	movf	_BUFFCOM+2,w,c
  3621  000E92  0FD0               	addlw	208
  3622  000E94  6E49               	movwf	_dia,c
  3623                           
  3624                           ;main.c: 509: mes = BUFFCOM[3]-48;
  3625  000E96  503D               	movf	_BUFFCOM+3,w,c
  3626  000E98  0FD0               	addlw	208
  3627  000E9A  6E48               	movwf	_mes,c
  3628                           
  3629                           ;main.c: 510: ano = BUFFCOM[4]-48;
  3630  000E9C  0ED0               	movlw	208
  3631  000E9E  243E               	addwf	_BUFFCOM+4,w,c
  3632  000EA0  6E43               	movwf	_ano,c
  3633  000EA2  6A44               	clrf	_ano+1,c
  3634  000EA4  0EFF               	movlw	255
  3635  000EA6  2244               	addwfc	_ano+1,f,c
  3636                           
  3637                           ;main.c: 511: break;
  3638  000EA8  D01C               	goto	l3052
  3639  000EAA                     l3042:
  3640                           
  3641                           ;main.c: 515: desp_hora = BUFFCOM[2]-48;
  3642  000EAA  503C               	movf	_BUFFCOM+2,w,c
  3643  000EAC  0FD0               	addlw	208
  3644  000EAE  6E47               	movwf	_desp_hora,c
  3645                           
  3646                           ;main.c: 516: desp_min = BUFFCOM[3]-48;
  3647  000EB0  503D               	movf	_BUFFCOM+3,w,c
  3648  000EB2  0FD0               	addlw	208
  3649  000EB4  6E46               	movwf	_desp_min,c
  3650                           
  3651                           ;main.c: 520: }
  3652                           
  3653                           ;main.c: 519: break;
  3654                           
  3655                           ;main.c: 518: default:
  3656  000EB6  D015               	goto	l3052
  3657  000EB8                     l3046:
  3658  000EB8  503B               	movf	_BUFFCOM+1,w,c
  3659                           
  3660                           ; Switch size 1, requested type "space"
  3661                           ; Number of cases is 4, Range of values is 48 to 51
  3662                           ; switch strategies available:
  3663                           ; Name         Instructions Cycles
  3664                           ; simple_byte           13     7 (average)
  3665                           ;	Chosen strategy is simple_byte
  3666  000EBA  0A30               	xorlw	48	; case 48
  3667  000EBC  B4D8               	btfsc	status,2,c
  3668  000EBE  D7D7               	goto	l3036
  3669  000EC0  0A01               	xorlw	1	; case 49
  3670  000EC2  B4D8               	btfsc	status,2,c
  3671  000EC4  D7DB               	goto	l3038
  3672  000EC6  0A03               	xorlw	3	; case 50
  3673  000EC8  B4D8               	btfsc	status,2,c
  3674  000ECA  D7E2               	goto	l3040
  3675  000ECC  0A01               	xorlw	1	; case 51
  3676  000ECE  B4D8               	btfsc	status,2,c
  3677  000ED0  D7EC               	goto	l3042
  3678                           
  3679                           ;main.c: 522: }
  3680                           
  3681                           ;main.c: 521: break;
  3682  000ED2  D007               	goto	l3052
  3683  000ED4                     l3050:
  3684  000ED4  503A               	movf	_BUFFCOM,w,c
  3685                           
  3686                           ; Switch size 1, requested type "space"
  3687                           ; Number of cases is 2, Range of values is 49 to 50
  3688                           ; switch strategies available:
  3689                           ; Name         Instructions Cycles
  3690                           ; simple_byte            7     4 (average)
  3691                           ;	Chosen strategy is simple_byte
  3692  000ED6  0A31               	xorlw	49	; case 49
  3693  000ED8  B4D8               	btfsc	status,2,c
  3694  000EDA  D71E               	goto	l3016
  3695  000EDC  0A03               	xorlw	3	; case 50
  3696  000EDE  B4D8               	btfsc	status,2,c
  3697  000EE0  D79C               	goto	l3024
  3698  000EE2                     l3052:
  3699                           
  3700                           ;main.c: 523: calculaCRCBUFFRESP();
  3701  000EE2  EC6A  F009         	call	_calculaCRCBUFFRESP	;wreg free
  3702  000EE6  0012               	return		;funcret
  3703  000EE8                     __end_of_trataComando:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           tblptrh	equ	0xFF7
  3707                           tblptrl	equ	0xFF6
  3708                           tablat	equ	0xFF5
  3709                           prodh	equ	0xFF4
  3710                           prodl	equ	0xFF3
  3711                           intcon	equ	0xFF2
  3712                           indf0	equ	0xFEF
  3713                           postinc0	equ	0xFEE
  3714                           fsr0h	equ	0xFEA
  3715                           fsr0l	equ	0xFE9
  3716                           wreg	equ	0xFE8
  3717                           postdec1	equ	0xFE5
  3718                           fsr1l	equ	0xFE1
  3719                           indf2	equ	0xFDF
  3720                           postinc2	equ	0xFDE
  3721                           postdec2	equ	0xFDD
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8
  3725                           
  3726 ;; *************** function _calculaCRCBUFFRESP *****************
  3727 ;; Defined at:
  3728 ;;		line 434 in file "main.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  crc             2   35[COMRAM] unsigned int 
  3733 ;;  crc2            1   34[COMRAM] unsigned char 
  3734 ;;  crc1            1   33[COMRAM] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0
  3745 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3746 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3747 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3748 ;;Total ram usage:        7 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    2
  3751 ;; This function calls:
  3752 ;;		_crc16
  3753 ;;		_memcpy
  3754 ;; This function is called by:
  3755 ;;		_trataComando
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text16
  3760  0012D4                     __ptext16:
  3761                           	opt stack 0
  3762  0012D4                     _calculaCRCBUFFRESP:
  3763                           	opt stack 26
  3764                           
  3765                           ;main.c: 435: unsigned int crc = crc16(BUFFCOM, 5);
  3766                           
  3767                           ;incstack = 0
  3768  0012D4  0E3A               	movlw	low _BUFFCOM
  3769  0012D6  6E12               	movwf	crc16@data_p,c
  3770  0012D8  0E00               	movlw	high _BUFFCOM
  3771  0012DA  6E13               	movwf	crc16@data_p+1,c
  3772  0012DC  0E00               	movlw	0
  3773  0012DE  6E15               	movwf	crc16@length+1,c
  3774  0012E0  0E05               	movlw	5
  3775  0012E2  6E14               	movwf	crc16@length,c
  3776  0012E4  ECAF  F008         	call	_crc16	;wreg free
  3777  0012E8  C012  F024         	movff	?_crc16,calculaCRCBUFFRESP@crc
  3778  0012EC  C013  F025         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  3779                           
  3780                           ;main.c: 436: unsigned char crc1 = crc >> 8;
  3781  0012F0  5025               	movf	calculaCRCBUFFRESP@crc+1,w,c
  3782  0012F2  6E22               	movwf	calculaCRCBUFFRESP@crc1,c
  3783                           
  3784                           ;main.c: 437: unsigned char crc2 = crc & 0xFF;
  3785  0012F4  C024  F023         	movff	calculaCRCBUFFRESP@crc,calculaCRCBUFFRESP@crc2
  3786                           
  3787                           ;main.c: 438: memcpy(&BUFFCOM[5], crc1, sizeof(BUFFCOM[5]));
  3788  0012F8  0E3F               	movlw	low (_BUFFCOM+5)
  3789  0012FA  6E12               	movwf	memcpy@d1,c
  3790  0012FC  0E00               	movlw	high (_BUFFCOM+5)
  3791  0012FE  6E13               	movwf	memcpy@d1+1,c
  3792  001300  5022               	movf	calculaCRCBUFFRESP@crc1,w,c
  3793  001302  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3794  001304  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3795  001306  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3796  001308  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3797  00130C  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3798  001310  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3799  001314  0E00               	movlw	0
  3800  001316  6E18               	movwf	memcpy@n+1,c
  3801  001318  0E01               	movlw	1
  3802  00131A  6E17               	movwf	memcpy@n,c
  3803  00131C  ECDE  F009         	call	_memcpy	;wreg free
  3804                           
  3805                           ;main.c: 439: memcpy(&BUFFCOM[6], crc2, sizeof(BUFFCOM[6]));
  3806  001320  0E40               	movlw	low (_BUFFCOM+6)
  3807  001322  6E12               	movwf	memcpy@d1,c
  3808  001324  0E00               	movlw	high (_BUFFCOM+6)
  3809  001326  6E13               	movwf	memcpy@d1+1,c
  3810  001328  5023               	movf	calculaCRCBUFFRESP@crc2,w,c
  3811  00132A  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3812  00132C  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3813  00132E  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3814  001330  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3815  001334  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3816  001338  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3817  00133C  0E00               	movlw	0
  3818  00133E  6E18               	movwf	memcpy@n+1,c
  3819  001340  0E01               	movlw	1
  3820  001342  6E17               	movwf	memcpy@n,c
  3821  001344  ECDE  F009         	call	_memcpy	;wreg free
  3822                           
  3823                           ;main.c: 440: estado = 3;
  3824  001348  0E03               	movlw	3
  3825  00134A  6E38               	movwf	_estado,c
  3826  00134C  0012               	return		;funcret
  3827  00134E                     __end_of_calculaCRCBUFFRESP:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           intcon	equ	0xFF2
  3836                           indf0	equ	0xFEF
  3837                           postinc0	equ	0xFEE
  3838                           fsr0h	equ	0xFEA
  3839                           fsr0l	equ	0xFE9
  3840                           wreg	equ	0xFE8
  3841                           postdec1	equ	0xFE5
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _memcpy *****************
  3851 ;; Defined at:
  3852 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  d1              2   17[COMRAM] PTR void 
  3855 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3856 ;;  s1              3   19[COMRAM] PTR const void 
  3857 ;;		 -> revisao(1), versao(1), ROM(32767), BUFFCOM(7), 
  3858 ;;  n               2   22[COMRAM] unsigned int 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  s               3   24[COMRAM] PTR const unsigned char 
  3861 ;;		 -> revisao(1), versao(1), ROM(32767), BUFFCOM(7), 
  3862 ;;  d               2   27[COMRAM] PTR unsigned char 
  3863 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  2   17[COMRAM] PTR void 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3873 ;;      Params:         7       0       0       0       0       0       0       0       0
  3874 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3876 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3877 ;;Total ram usage:       12 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_calculaCRCBUFFRESP
  3884 ;;		_trataComando
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text17
  3889  0013BC                     __ptext17:
  3890                           	opt stack 0
  3891  0013BC                     _memcpy:
  3892                           	opt stack 27
  3893                           
  3894                           ;incstack = 0
  3895  0013BC  C014  F019         	movff	memcpy@s1,memcpy@s
  3896  0013C0  C015  F01A         	movff	memcpy@s1+1,memcpy@s+1
  3897  0013C4  C016  F01B         	movff	memcpy@s1+2,memcpy@s+2
  3898  0013C8  C012  F01C         	movff	memcpy@d1,memcpy@d
  3899  0013CC  C013  F01D         	movff	memcpy@d1+1,memcpy@d+1
  3900  0013D0  D01D               	goto	l2738
  3901  0013D2                     l2732:
  3902  0013D2  C019  FFF6         	movff	memcpy@s,tblptrl
  3903  0013D6  C01A  FFF7         	movff	memcpy@s+1,tblptrh
  3904  0013DA  C01B  FFF8         	movff	memcpy@s+2,tblptru
  3905  0013DE  C01C  FFD9         	movff	memcpy@d,fsr2l
  3906  0013E2  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  3907  0013E6  BAF8               	btfsc	tblptru,5,c
  3908  0013E8  D003               	bra	u1677
  3909  0013EA  0008               	tblrd		*
  3910  0013EC  50F5               	movf	tablat,w,c
  3911  0013EE  D005               	bra	u1670
  3912  0013F0                     u1677:
  3913  0013F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3914  0013F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3915  0013F8  50EF               	movf	indf0,w,c
  3916  0013FA                     u1670:
  3917  0013FA  6EDF               	movwf	indf2,c
  3918  0013FC  0E01               	movlw	1
  3919  0013FE  2619               	addwf	memcpy@s,f,c
  3920  001400  0E00               	movlw	0
  3921  001402  221A               	addwfc	memcpy@s+1,f,c
  3922  001404  0E00               	movlw	0
  3923  001406  221B               	addwfc	memcpy@s+2,f,c
  3924  001408  4A1C               	infsnz	memcpy@d,f,c
  3925  00140A  2A1D               	incf	memcpy@d+1,f,c
  3926  00140C                     l2738:
  3927  00140C  0617               	decf	memcpy@n,f,c
  3928  00140E  A0D8               	btfss	status,0,c
  3929  001410  0618               	decf	memcpy@n+1,f,c
  3930  001412  2817               	incf	memcpy@n,w,c
  3931  001414  E1DE               	bnz	l2732
  3932  001416  2818               	incf	memcpy@n+1,w,c
  3933  001418  B4D8               	btfsc	status,2,c
  3934  00141A  0012               	return	
  3935  00141C  D7DA               	goto	l2732
  3936  00141E                     __end_of_memcpy:
  3937                           	opt stack 0
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon	equ	0xFF2
  3945                           indf0	equ	0xFEF
  3946                           postinc0	equ	0xFEE
  3947                           fsr0h	equ	0xFEA
  3948                           fsr0l	equ	0xFE9
  3949                           wreg	equ	0xFE8
  3950                           postdec1	equ	0xFE5
  3951                           fsr1l	equ	0xFE1
  3952                           indf2	equ	0xFDF
  3953                           postinc2	equ	0xFDE
  3954                           postdec2	equ	0xFDD
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           
  3959 ;; *************** function _crc16 *****************
  3960 ;; Defined at:
  3961 ;;		line 413 in file "main.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  data_p          2   17[COMRAM] PTR unsigned char 
  3964 ;;		 -> BUFFCOM(7), 
  3965 ;;  length          2   19[COMRAM] unsigned short 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  crc             2   28[COMRAM] unsigned int 
  3968 ;;  data            2   26[COMRAM] unsigned int 
  3969 ;;  i               1   25[COMRAM] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2   17[COMRAM] unsigned short 
  3972 ;; Registers used:
  3973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3979 ;;      Params:         4       0       0       0       0       0       0       0       0
  3980 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3981 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3982 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3983 ;;Total ram usage:       13 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    1
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_calculaCRCBUFFRESP
  3990 ;;		_verificaCRCBUFFCOM
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text18
  3995  00115E                     __ptext18:
  3996                           	opt stack 0
  3997  00115E                     _crc16:
  3998                           	opt stack 27
  3999                           
  4000                           ;main.c: 414: unsigned char i;
  4001                           ;main.c: 415: unsigned int data;
  4002                           ;main.c: 416: unsigned int crc = 0xffff;
  4003                           
  4004                           ;incstack = 0
  4005  00115E  681D               	setf	crc16@crc,c
  4006  001160  681E               	setf	crc16@crc+1,c
  4007                           
  4008                           ;main.c: 417: if (length == 0)
  4009  001162  5014               	movf	crc16@length,w,c
  4010  001164  1015               	iorwf	crc16@length+1,w,c
  4011  001166  A4D8               	btfss	status,2,c
  4012  001168  D005               	goto	l2700
  4013                           
  4014                           ;main.c: 418: return (~crc);
  4015  00116A  1C1D               	comf	crc16@crc,w,c
  4016  00116C  6E12               	movwf	?_crc16,c
  4017  00116E  1C1E               	comf	crc16@crc+1,w,c
  4018  001170  6E13               	movwf	?_crc16+1,c
  4019  001172  0012               	return	
  4020  001174                     l2700:
  4021                           
  4022                           ;main.c: 420: for (i=0, data=(unsigned int)0xff & *data_p++; i < 8; i++, data >>= 1){
  4023  001174  0E00               	movlw	0
  4024  001176  6E1A               	movwf	crc16@i,c
  4025  001178  C012  FFD9         	movff	crc16@data_p,fsr2l
  4026  00117C  C013  FFDA         	movff	crc16@data_p+1,fsr2h
  4027  001180  50DF               	movf	indf2,w,c
  4028  001182  6E16               	movwf	??_crc16& (0+255),c
  4029  001184  5016               	movf	??_crc16,w,c
  4030  001186  6E1B               	movwf	crc16@data,c
  4031  001188  6A1C               	clrf	crc16@data+1,c
  4032  00118A  4A12               	infsnz	crc16@data_p,f,c
  4033  00118C  2A13               	incf	crc16@data_p+1,f,c
  4034  00118E                     l2706:
  4035  00118E  0E07               	movlw	7
  4036  001190  641A               	cpfsgt	crc16@i,c
  4037  001192  D001               	goto	l2710
  4038  001194  D028               	goto	l2718
  4039  001196                     l2710:
  4040                           
  4041                           ;main.c: 421: if ((crc & 0x0001) ^ (data & 0x0001))
  4042  001196  0E01               	movlw	1
  4043  001198  141B               	andwf	crc16@data,w,c
  4044  00119A  6E16               	movwf	??_crc16& (0+255),c
  4045  00119C  0E00               	movlw	0
  4046  00119E  141C               	andwf	crc16@data+1,w,c
  4047  0011A0  6E17               	movwf	(??_crc16+1)& (0+255),c
  4048  0011A2  0E01               	movlw	1
  4049  0011A4  141D               	andwf	crc16@crc,w,c
  4050  0011A6  6E18               	movwf	(??_crc16+2)& (0+255),c
  4051  0011A8  0E00               	movlw	0
  4052  0011AA  141E               	andwf	crc16@crc+1,w,c
  4053  0011AC  6E19               	movwf	(??_crc16+3)& (0+255),c
  4054  0011AE  5016               	movf	??_crc16,w,c
  4055  0011B0  1A18               	xorwf	??_crc16+2,f,c
  4056  0011B2  5017               	movf	??_crc16+1,w,c
  4057  0011B4  1A19               	xorwf	??_crc16+3,f,c
  4058  0011B6  5018               	movf	??_crc16+2,w,c
  4059  0011B8  1019               	iorwf	??_crc16+3,w,c
  4060  0011BA  B4D8               	btfsc	status,2,c
  4061  0011BC  D00C               	goto	l2714
  4062                           
  4063                           ;main.c: 422: crc = (crc >> 1) ^ 0x8408;
  4064  0011BE  90D8               	bcf	status,0,c
  4065  0011C0  301E               	rrcf	crc16@crc+1,w,c
  4066  0011C2  6E17               	movwf	(??_crc16+1)& (0+255),c
  4067  0011C4  301D               	rrcf	crc16@crc,w,c
  4068  0011C6  6E16               	movwf	??_crc16& (0+255),c
  4069  0011C8  0E08               	movlw	8
  4070  0011CA  1816               	xorwf	??_crc16,w,c
  4071  0011CC  6E1D               	movwf	crc16@crc,c
  4072  0011CE  0E84               	movlw	132
  4073  0011D0  1817               	xorwf	??_crc16+1,w,c
  4074  0011D2  6E1E               	movwf	crc16@crc+1,c
  4075  0011D4  D003               	goto	l217
  4076  0011D6                     l2714:
  4077                           
  4078                           ;main.c: 423: else crc >>= 1;
  4079  0011D6  90D8               	bcf	status,0,c
  4080  0011D8  321E               	rrcf	crc16@crc+1,f,c
  4081  0011DA  321D               	rrcf	crc16@crc,f,c
  4082  0011DC                     l217:
  4083  0011DC  2A1A               	incf	crc16@i,f,c
  4084  0011DE  90D8               	bcf	status,0,c
  4085  0011E0  321C               	rrcf	crc16@data+1,f,c
  4086  0011E2  321B               	rrcf	crc16@data,f,c
  4087  0011E4  D7D4               	goto	l2706
  4088  0011E6                     l2718:
  4089                           
  4090                           ;main.c: 424: }
  4091                           ;main.c: 425: } while (--length);
  4092  0011E6  0614               	decf	crc16@length,f,c
  4093  0011E8  A0D8               	btfss	status,0,c
  4094  0011EA  0615               	decf	crc16@length+1,f,c
  4095  0011EC  5014               	movf	crc16@length,w,c
  4096  0011EE  1015               	iorwf	crc16@length+1,w,c
  4097  0011F0  A4D8               	btfss	status,2,c
  4098  0011F2  D7C0               	goto	l2700
  4099                           
  4100                           ;main.c: 427: crc = ~crc;
  4101  0011F4  1E1D               	comf	crc16@crc,f,c
  4102  0011F6  1E1E               	comf	crc16@crc+1,f,c
  4103                           
  4104                           ;main.c: 428: data = crc;
  4105  0011F8  C01D  F01B         	movff	crc16@crc,crc16@data
  4106  0011FC  C01E  F01C         	movff	crc16@crc+1,crc16@data+1
  4107                           
  4108                           ;main.c: 429: crc = (crc << 8) | (data >> 8 & 0xff);
  4109  001200  C01B  F016         	movff	crc16@data,??_crc16
  4110  001204  C01C  F017         	movff	crc16@data+1,??_crc16+1
  4111  001208  C017  F016         	movff	??_crc16+1,??_crc16
  4112  00120C  6A17               	clrf	??_crc16+1,c
  4113  00120E  5016               	movf	??_crc16,w,c
  4114  001210  C01D  F018         	movff	crc16@crc,??_crc16+2
  4115  001214  C01E  F019         	movff	crc16@crc+1,??_crc16+3
  4116  001218  C018  F019         	movff	??_crc16+2,??_crc16+3
  4117  00121C  6A18               	clrf	??_crc16+2,c
  4118  00121E  1018               	iorwf	??_crc16+2,w,c
  4119  001220  6E1D               	movwf	crc16@crc,c
  4120  001222  5019               	movf	??_crc16+3,w,c
  4121  001224  6E1E               	movwf	crc16@crc+1,c
  4122                           
  4123                           ;main.c: 430: return (crc);
  4124  001226  C01D  F012         	movff	crc16@crc,?_crc16
  4125  00122A  C01E  F013         	movff	crc16@crc+1,?_crc16+1
  4126  00122E  0012               	return	
  4127  001230                     __end_of_crc16:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           intcon	equ	0xFF2
  4136                           indf0	equ	0xFEF
  4137                           postinc0	equ	0xFEE
  4138                           fsr0h	equ	0xFEA
  4139                           fsr0l	equ	0xFE9
  4140                           wreg	equ	0xFE8
  4141                           postdec1	equ	0xFE5
  4142                           fsr1l	equ	0xFE1
  4143                           indf2	equ	0xFDF
  4144                           postinc2	equ	0xFDE
  4145                           postdec2	equ	0xFDD
  4146                           fsr2h	equ	0xFDA
  4147                           fsr2l	equ	0xFD9
  4148                           status	equ	0xFD8
  4149                           
  4150 ;; *************** function _enviaByte *****************
  4151 ;; Defined at:
  4152 ;;		line 570 in file "main.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  BYTE            1    wreg     unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  BYTE            1   17[COMRAM] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0
  4167 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4169 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4170 ;;Total ram usage:        1 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_maquinaEstado
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text19
  4181  001810                     __ptext19:
  4182                           	opt stack 0
  4183  001810                     _enviaByte:
  4184                           	opt stack 28
  4185                           
  4186                           ;incstack = 0
  4187                           ;enviaByte@BYTE stored from wreg
  4188  001810  6E12               	movwf	enviaByte@BYTE,c
  4189  001812                     l266:
  4190  001812  A89E               	btfss	3998,4,c	;volatile
  4191  001814  D7FE               	goto	l266
  4192                           
  4193                           ;main.c: 572: TXREG = BYTE;
  4194  001816  C012  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  4195                           
  4196                           ;main.c: 574: if(BYTE==0x05)
  4197  00181A  0E05               	movlw	5
  4198  00181C  1812               	xorwf	enviaByte@BYTE,w,c
  4199  00181E  A4D8               	btfss	status,2,c
  4200  001820  D003               	goto	l3096
  4201                           
  4202                           ;main.c: 575: estado = 2;
  4203  001822  0E02               	movlw	2
  4204  001824  6E38               	movwf	_estado,c
  4205  001826  0012               	return	
  4206  001828                     l3096:
  4207                           
  4208                           ;main.c: 576: else
  4209                           ;main.c: 577: estado = 0;
  4210  001828  0E00               	movlw	0
  4211  00182A  6E38               	movwf	_estado,c
  4212  00182C  0012               	return	
  4213  00182E                     __end_of_enviaByte:
  4214                           	opt stack 0
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           intcon	equ	0xFF2
  4222                           indf0	equ	0xFEF
  4223                           postinc0	equ	0xFEE
  4224                           fsr0h	equ	0xFEA
  4225                           fsr0l	equ	0xFE9
  4226                           wreg	equ	0xFE8
  4227                           postdec1	equ	0xFE5
  4228                           fsr1l	equ	0xFE1
  4229                           indf2	equ	0xFDF
  4230                           postinc2	equ	0xFDE
  4231                           postdec2	equ	0xFDD
  4232                           fsr2h	equ	0xFDA
  4233                           fsr2l	equ	0xFD9
  4234                           status	equ	0xFD8
  4235                           
  4236 ;; *************** function _init_XLCD *****************
  4237 ;; Defined at:
  4238 ;;		line 127 in file "main.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4255 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    5
  4259 ;; This function calls:
  4260 ;;		_BusyXLCD
  4261 ;;		_OpenXLCD
  4262 ;;		_WriteCmdXLCD
  4263 ;; This function is called by:
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text20
  4269  00182E                     __ptext20:
  4270                           	opt stack 0
  4271  00182E                     _init_XLCD:
  4272                           	opt stack 25
  4273                           
  4274                           ;main.c: 128: OpenXLCD(0b00101100&0b00111000);
  4275                           
  4276                           ;incstack = 0
  4277  00182E  0E28               	movlw	40
  4278  001830  EC18  F009         	call	_OpenXLCD
  4279  001834                     l3100:
  4280  001834  EC85  F00B         	call	_BusyXLCD	;wreg free
  4281  001838  0900               	iorlw	0
  4282  00183A  A4D8               	btfss	status,2,c
  4283  00183C  D7FB               	goto	l3100
  4284                           
  4285                           ;main.c: 130: WriteCmdXLCD(0x06);
  4286  00183E  0E06               	movlw	6
  4287  001840  EC66  F00B         	call	_WriteCmdXLCD
  4288                           
  4289                           ;main.c: 131: WriteCmdXLCD(0x0C);
  4290  001844  0E0C               	movlw	12
  4291  001846  EC66  F00B         	call	_WriteCmdXLCD
  4292  00184A  0012               	return		;funcret
  4293  00184C                     __end_of_init_XLCD:
  4294                           	opt stack 0
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           intcon	equ	0xFF2
  4302                           indf0	equ	0xFEF
  4303                           postinc0	equ	0xFEE
  4304                           fsr0h	equ	0xFEA
  4305                           fsr0l	equ	0xFE9
  4306                           wreg	equ	0xFE8
  4307                           postdec1	equ	0xFE5
  4308                           fsr1l	equ	0xFE1
  4309                           indf2	equ	0xFDF
  4310                           postinc2	equ	0xFDE
  4311                           postdec2	equ	0xFDD
  4312                           fsr2h	equ	0xFDA
  4313                           fsr2l	equ	0xFD9
  4314                           status	equ	0xFD8
  4315                           
  4316 ;; *************** function _OpenXLCD *****************
  4317 ;; Defined at:
  4318 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  lcdtype         1    wreg     unsigned char 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  lcdtype         1   22[COMRAM] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0
  4333 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4335 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4336 ;;Total ram usage:        1 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    4
  4339 ;; This function calls:
  4340 ;;		_BusyXLCD
  4341 ;;		_Delay10KTCYx
  4342 ;;		_DelayPORXLCD
  4343 ;;		_SetDDRamAddr
  4344 ;;		_WriteCmdXLCD
  4345 ;; This function is called by:
  4346 ;;		_init_XLCD
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text21
  4351  001230                     __ptext21:
  4352                           	opt stack 0
  4353  001230                     _OpenXLCD:
  4354                           	opt stack 25
  4355                           
  4356                           ;incstack = 0
  4357                           ;OpenXLCD@lcdtype stored from wreg
  4358  001230  6E17               	movwf	OpenXLCD@lcdtype,c
  4359  001232  0EF0               	movlw	240
  4360  001234  1681               	andwf	3969,f,c	;volatile
  4361  001236  0EF0               	movlw	240
  4362  001238  1693               	andwf	3987,f,c	;volatile
  4363  00123A  9C93               	bcf	3987,6,c	;volatile
  4364  00123C  9A93               	bcf	3987,5,c	;volatile
  4365  00123E  9893               	bcf	3987,4,c	;volatile
  4366  001240  9C8A               	bcf	3978,6,c	;volatile
  4367  001242  9A8A               	bcf	3978,5,c	;volatile
  4368  001244  988A               	bcf	3978,4,c	;volatile
  4369  001246  EC4D  F00C         	call	_DelayPORXLCD	;wreg free
  4370  00124A  0E30               	movlw	48
  4371  00124C  EC66  F00B         	call	_WriteCmdXLCD
  4372  001250  0E05               	movlw	5
  4373  001252  EC26  F00C         	call	_Delay10KTCYx
  4374  001256  0E30               	movlw	48
  4375  001258  EC66  F00B         	call	_WriteCmdXLCD
  4376  00125C  0E01               	movlw	1
  4377  00125E  EC26  F00C         	call	_Delay10KTCYx
  4378  001262  0E32               	movlw	50
  4379  001264  EC66  F00B         	call	_WriteCmdXLCD
  4380  001268                     l2906:
  4381  001268  EC85  F00B         	call	_BusyXLCD	;wreg free
  4382  00126C  0900               	iorlw	0
  4383  00126E  A4D8               	btfss	status,2,c
  4384  001270  D7FB               	goto	l2906
  4385  001272                     l2908:
  4386  001272  EC85  F00B         	call	_BusyXLCD	;wreg free
  4387  001276  0900               	iorlw	0
  4388  001278  A4D8               	btfss	status,2,c
  4389  00127A  D7FB               	goto	l2908
  4390  00127C  5017               	movf	OpenXLCD@lcdtype,w,c
  4391  00127E  EC66  F00B         	call	_WriteCmdXLCD
  4392  001282                     l2912:
  4393  001282  EC85  F00B         	call	_BusyXLCD	;wreg free
  4394  001286  0900               	iorlw	0
  4395  001288  A4D8               	btfss	status,2,c
  4396  00128A  D7FB               	goto	l2912
  4397  00128C  0E08               	movlw	8
  4398  00128E  EC66  F00B         	call	_WriteCmdXLCD
  4399  001292                     l2916:
  4400  001292  EC85  F00B         	call	_BusyXLCD	;wreg free
  4401  001296  0900               	iorlw	0
  4402  001298  A4D8               	btfss	status,2,c
  4403  00129A  D7FB               	goto	l2916
  4404  00129C  0E0F               	movlw	15
  4405  00129E  EC66  F00B         	call	_WriteCmdXLCD
  4406  0012A2                     l2920:
  4407  0012A2  EC85  F00B         	call	_BusyXLCD	;wreg free
  4408  0012A6  0900               	iorlw	0
  4409  0012A8  A4D8               	btfss	status,2,c
  4410  0012AA  D7FB               	goto	l2920
  4411  0012AC  0E01               	movlw	1
  4412  0012AE  EC66  F00B         	call	_WriteCmdXLCD
  4413  0012B2                     l2924:
  4414  0012B2  EC85  F00B         	call	_BusyXLCD	;wreg free
  4415  0012B6  0900               	iorlw	0
  4416  0012B8  A4D8               	btfss	status,2,c
  4417  0012BA  D7FB               	goto	l2924
  4418  0012BC  0E04               	movlw	4
  4419  0012BE  EC66  F00B         	call	_WriteCmdXLCD
  4420  0012C2                     l2928:
  4421  0012C2  EC85  F00B         	call	_BusyXLCD	;wreg free
  4422  0012C6  0900               	iorlw	0
  4423  0012C8  A4D8               	btfss	status,2,c
  4424  0012CA  D7FB               	goto	l2928
  4425  0012CC  0E80               	movlw	128
  4426  0012CE  EC91  F00A         	call	_SetDDRamAddr
  4427  0012D2  0012               	return	
  4428  0012D4                     __end_of_OpenXLCD:
  4429                           	opt stack 0
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon	equ	0xFF2
  4437                           indf0	equ	0xFEF
  4438                           postinc0	equ	0xFEE
  4439                           fsr0h	equ	0xFEA
  4440                           fsr0l	equ	0xFE9
  4441                           wreg	equ	0xFE8
  4442                           postdec1	equ	0xFE5
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _WriteCmdXLCD *****************
  4452 ;; Defined at:
  4453 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  cmd             1    wreg     unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  cmd             1   18[COMRAM] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0
  4468 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4470 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4471 ;;Total ram usage:        1 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    3
  4474 ;; This function calls:
  4475 ;;		_DelayFor18TCY
  4476 ;; This function is called by:
  4477 ;;		_init_XLCD
  4478 ;;		_OpenXLCD
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text22
  4483  0016CC                     __ptext22:
  4484                           	opt stack 0
  4485  0016CC                     _WriteCmdXLCD:
  4486                           	opt stack 26
  4487                           
  4488                           ;incstack = 0
  4489                           ;WriteCmdXLCD@cmd stored from wreg
  4490  0016CC  6E13               	movwf	WriteCmdXLCD@cmd,c
  4491  0016CE  0EF0               	movlw	240
  4492  0016D0  1693               	andwf	3987,f,c	;volatile
  4493  0016D2  0EF0               	movlw	240
  4494  0016D4  1681               	andwf	3969,f,c	;volatile
  4495  0016D6  3813               	swapf	WriteCmdXLCD@cmd,w,c
  4496  0016D8  0B0F               	andlw	15
  4497  0016DA  0B0F               	andlw	15
  4498  0016DC  1281               	iorwf	3969,f,c	;volatile
  4499  0016DE  9C8A               	bcf	3978,6,c	;volatile
  4500  0016E0  9A8A               	bcf	3978,5,c	;volatile
  4501  0016E2  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4502  0016E6  888A               	bsf	3978,4,c	;volatile
  4503  0016E8  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4504  0016EC  988A               	bcf	3978,4,c	;volatile
  4505  0016EE  0EF0               	movlw	240
  4506  0016F0  1681               	andwf	3969,f,c	;volatile
  4507  0016F2  5013               	movf	WriteCmdXLCD@cmd,w,c
  4508  0016F4  0B0F               	andlw	15
  4509  0016F6  1281               	iorwf	3969,f,c	;volatile
  4510  0016F8  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4511  0016FC  888A               	bsf	3978,4,c	;volatile
  4512  0016FE  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4513  001702  988A               	bcf	3978,4,c	;volatile
  4514  001704  0E0F               	movlw	15
  4515  001706  1293               	iorwf	3987,f,c	;volatile
  4516  001708  0012               	return	
  4517  00170A                     __end_of_WriteCmdXLCD:
  4518                           	opt stack 0
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           prodh	equ	0xFF4
  4524                           prodl	equ	0xFF3
  4525                           intcon	equ	0xFF2
  4526                           indf0	equ	0xFEF
  4527                           postinc0	equ	0xFEE
  4528                           fsr0h	equ	0xFEA
  4529                           fsr0l	equ	0xFE9
  4530                           wreg	equ	0xFE8
  4531                           postdec1	equ	0xFE5
  4532                           fsr1l	equ	0xFE1
  4533                           indf2	equ	0xFDF
  4534                           postinc2	equ	0xFDE
  4535                           postdec2	equ	0xFDD
  4536                           fsr2h	equ	0xFDA
  4537                           fsr2l	equ	0xFD9
  4538                           status	equ	0xFD8
  4539                           
  4540 ;; *************** function _SetDDRamAddr *****************
  4541 ;; Defined at:
  4542 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  DDaddr          1    wreg     unsigned char 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  DDaddr          1   21[COMRAM] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0
  4557 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4558 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4559 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4560 ;;Total ram usage:        4 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    3
  4563 ;; This function calls:
  4564 ;;		_DelayFor18TCY
  4565 ;; This function is called by:
  4566 ;;		_escreveMensagem
  4567 ;;		_limpaTela
  4568 ;;		_OpenXLCD
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text23
  4573  001522                     __ptext23:
  4574                           	opt stack 0
  4575  001522                     _SetDDRamAddr:
  4576                           	opt stack 25
  4577                           
  4578                           ;incstack = 0
  4579                           ;SetDDRamAddr@DDaddr stored from wreg
  4580  001522  6E16               	movwf	SetDDRamAddr@DDaddr,c
  4581  001524  0EF0               	movlw	240
  4582  001526  1693               	andwf	3987,f,c	;volatile
  4583  001528  0EF0               	movlw	240
  4584  00152A  1681               	andwf	3969,f,c	;volatile
  4585  00152C  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4586  00152E  6E13               	movwf	??_SetDDRamAddr& (0+255),c
  4587  001530  6A14               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4588  001532  8E13               	bsf	??_SetDDRamAddr,7,c
  4589  001534  0E04               	movlw	4
  4590  001536  6E15               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4591  001538                     u1695:
  4592  001538  3414               	rlcf	??_SetDDRamAddr+1,w,c
  4593  00153A  3214               	rrcf	??_SetDDRamAddr+1,f,c
  4594  00153C  3213               	rrcf	??_SetDDRamAddr,f,c
  4595  00153E  2E15               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4596  001540  D7FB               	goto	u1695
  4597  001542  5013               	movf	??_SetDDRamAddr,w,c
  4598  001544  0B0F               	andlw	15
  4599  001546  1281               	iorwf	3969,f,c	;volatile
  4600  001548  9C8A               	bcf	3978,6,c	;volatile
  4601  00154A  9A8A               	bcf	3978,5,c	;volatile
  4602  00154C  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4603  001550  888A               	bsf	3978,4,c	;volatile
  4604  001552  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4605  001556  988A               	bcf	3978,4,c	;volatile
  4606  001558  0EF0               	movlw	240
  4607  00155A  1681               	andwf	3969,f,c	;volatile
  4608  00155C  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4609  00155E  0B0F               	andlw	15
  4610  001560  1281               	iorwf	3969,f,c	;volatile
  4611  001562  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4612  001566  888A               	bsf	3978,4,c	;volatile
  4613  001568  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4614  00156C  988A               	bcf	3978,4,c	;volatile
  4615  00156E  0E0F               	movlw	15
  4616  001570  1293               	iorwf	3987,f,c	;volatile
  4617  001572  0012               	return	
  4618  001574                     __end_of_SetDDRamAddr:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           indf0	equ	0xFEF
  4628                           postinc0	equ	0xFEE
  4629                           fsr0h	equ	0xFEA
  4630                           fsr0l	equ	0xFE9
  4631                           wreg	equ	0xFE8
  4632                           postdec1	equ	0xFE5
  4633                           fsr1l	equ	0xFE1
  4634                           indf2	equ	0xFDF
  4635                           postinc2	equ	0xFDE
  4636                           postdec2	equ	0xFDD
  4637                           fsr2h	equ	0xFDA
  4638                           fsr2l	equ	0xFD9
  4639                           status	equ	0xFD8
  4640                           
  4641 ;; *************** function _DelayPORXLCD *****************
  4642 ;; Defined at:
  4643 ;;		line 402 in file "main.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4657 ;;      Params:         0       0       0       0       0       0       0       0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4660 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4661 ;;Total ram usage:        0 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    2
  4664 ;; This function calls:
  4665 ;;		_Delay1KTCYx
  4666 ;; This function is called by:
  4667 ;;		_OpenXLCD
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text24
  4672  00189A                     __ptext24:
  4673                           	opt stack 0
  4674  00189A                     _DelayPORXLCD:
  4675                           	opt stack 26
  4676                           
  4677                           ;main.c: 403: Delay1KTCYx(180);
  4678                           
  4679                           ;incstack = 0
  4680  00189A  0EB4               	movlw	180
  4681  00189C  EC31  F00C         	call	_Delay1KTCYx
  4682  0018A0  0012               	return	
  4683  0018A2                     __end_of_DelayPORXLCD:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           indf0	equ	0xFEF
  4693                           postinc0	equ	0xFEE
  4694                           fsr0h	equ	0xFEA
  4695                           fsr0l	equ	0xFE9
  4696                           wreg	equ	0xFE8
  4697                           postdec1	equ	0xFE5
  4698                           fsr1l	equ	0xFE1
  4699                           indf2	equ	0xFDF
  4700                           postinc2	equ	0xFDE
  4701                           postdec2	equ	0xFDD
  4702                           fsr2h	equ	0xFDA
  4703                           fsr2l	equ	0xFD9
  4704                           status	equ	0xFD8
  4705                           
  4706 ;; *************** function _Delay1KTCYx *****************
  4707 ;; Defined at:
  4708 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  unit            1    wreg     unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  unit            1   17[COMRAM] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0
  4723 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4725 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4726 ;;Total ram usage:        1 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_DelayPORXLCD
  4733 ;;		_DelayXLCD
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text25
  4738  001862                     __ptext25:
  4739                           	opt stack 0
  4740  001862                     _Delay1KTCYx:
  4741                           	opt stack 26
  4742                           
  4743                           ;incstack = 0
  4744                           ;Delay1KTCYx@unit stored from wreg
  4745  001862  6E12               	movwf	Delay1KTCYx@unit,c
  4746  001864  0EC8               	movlw	200
  4747  001866                     u2257:
  4748  001866  D000               	nop2	
  4749  001868  2EE8               	decfsz	wreg,f,c
  4750  00186A  D7FD               	bra	u2257
  4751  00186C  2E12               	decfsz	Delay1KTCYx@unit,f,c
  4752  00186E  D7FA               	goto	l2688
  4753  001870  0012               	return	
  4754  001872                     __end_of_Delay1KTCYx:
  4755                           	opt stack 0
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           prodh	equ	0xFF4
  4761                           prodl	equ	0xFF3
  4762                           intcon	equ	0xFF2
  4763                           indf0	equ	0xFEF
  4764                           postinc0	equ	0xFEE
  4765                           fsr0h	equ	0xFEA
  4766                           fsr0l	equ	0xFE9
  4767                           wreg	equ	0xFE8
  4768                           postdec1	equ	0xFE5
  4769                           fsr1l	equ	0xFE1
  4770                           indf2	equ	0xFDF
  4771                           postinc2	equ	0xFDE
  4772                           postdec2	equ	0xFDD
  4773                           fsr2h	equ	0xFDA
  4774                           fsr2l	equ	0xFD9
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function _Delay10KTCYx *****************
  4778 ;; Defined at:
  4779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  unit            1    wreg     unsigned char 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  unit            1   18[COMRAM] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0
  4794 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4795 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4796 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4797 ;;Total ram usage:        2 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_OpenXLCD
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text26
  4808  00184C                     __ptext26:
  4809                           	opt stack 0
  4810  00184C                     _Delay10KTCYx:
  4811                           	opt stack 27
  4812                           
  4813                           ;incstack = 0
  4814                           ;Delay10KTCYx@unit stored from wreg
  4815  00184C  6E13               	movwf	Delay10KTCYx@unit,c
  4816  00184E  0E0D               	movlw	13
  4817  001850  6E12               	movwf	??_Delay10KTCYx& (0+255),c
  4818  001852  0EFC               	movlw	252
  4819  001854                     u2267:
  4820  001854  2EE8               	decfsz	wreg,f,c
  4821  001856  D7FE               	bra	u2267
  4822  001858  2E12               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4823  00185A  D7FC               	bra	u2267
  4824  00185C  2E13               	decfsz	Delay10KTCYx@unit,f,c
  4825  00185E  D7F7               	goto	l2838
  4826  001860  0012               	return	
  4827  001862                     __end_of_Delay10KTCYx:
  4828                           	opt stack 0
  4829                           tblptru	equ	0xFF8
  4830                           tblptrh	equ	0xFF7
  4831                           tblptrl	equ	0xFF6
  4832                           tablat	equ	0xFF5
  4833                           prodh	equ	0xFF4
  4834                           prodl	equ	0xFF3
  4835                           intcon	equ	0xFF2
  4836                           indf0	equ	0xFEF
  4837                           postinc0	equ	0xFEE
  4838                           fsr0h	equ	0xFEA
  4839                           fsr0l	equ	0xFE9
  4840                           wreg	equ	0xFE8
  4841                           postdec1	equ	0xFE5
  4842                           fsr1l	equ	0xFE1
  4843                           indf2	equ	0xFDF
  4844                           postinc2	equ	0xFDE
  4845                           postdec2	equ	0xFDD
  4846                           fsr2h	equ	0xFDA
  4847                           fsr2l	equ	0xFD9
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _BusyXLCD *****************
  4851 ;; Defined at:
  4852 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      unsigned char 
  4859 ;; Registers used:
  4860 ;;		wreg, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    3
  4873 ;; This function calls:
  4874 ;;		_DelayFor18TCY
  4875 ;; This function is called by:
  4876 ;;		_init_XLCD
  4877 ;;		_OpenXLCD
  4878 ;;		_putrsXLCD
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text27
  4883  00170A                     __ptext27:
  4884                           	opt stack 0
  4885  00170A                     _BusyXLCD:
  4886                           	opt stack 24
  4887                           
  4888                           ;incstack = 0
  4889  00170A  8C8A               	bsf	3978,6,c	;volatile
  4890  00170C  9A8A               	bcf	3978,5,c	;volatile
  4891  00170E  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4892  001712  888A               	bsf	3978,4,c	;volatile
  4893  001714  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4894  001718  A681               	btfss	3969,3,c	;volatile
  4895  00171A  D00A               	goto	l317
  4896  00171C  988A               	bcf	3978,4,c	;volatile
  4897  00171E  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4898  001722  888A               	bsf	3978,4,c	;volatile
  4899  001724  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4900  001728  988A               	bcf	3978,4,c	;volatile
  4901  00172A  9C8A               	bcf	3978,6,c	;volatile
  4902  00172C  0E01               	movlw	1
  4903  00172E  0012               	return	
  4904  001730                     l317:
  4905  001730  988A               	bcf	3978,4,c	;volatile
  4906  001732  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4907  001736  888A               	bsf	3978,4,c	;volatile
  4908  001738  EC51  F00C         	call	_DelayFor18TCY	;wreg free
  4909  00173C  988A               	bcf	3978,4,c	;volatile
  4910  00173E  9C8A               	bcf	3978,6,c	;volatile
  4911  001740  0E00               	movlw	0
  4912  001742  0012               	return	
  4913  001744                     __end_of_BusyXLCD:
  4914                           	opt stack 0
  4915                           tblptru	equ	0xFF8
  4916                           tblptrh	equ	0xFF7
  4917                           tblptrl	equ	0xFF6
  4918                           tablat	equ	0xFF5
  4919                           prodh	equ	0xFF4
  4920                           prodl	equ	0xFF3
  4921                           intcon	equ	0xFF2
  4922                           indf0	equ	0xFEF
  4923                           postinc0	equ	0xFEE
  4924                           fsr0h	equ	0xFEA
  4925                           fsr0l	equ	0xFE9
  4926                           wreg	equ	0xFE8
  4927                           postdec1	equ	0xFE5
  4928                           fsr1l	equ	0xFE1
  4929                           indf2	equ	0xFDF
  4930                           postinc2	equ	0xFDE
  4931                           postdec2	equ	0xFDD
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function _DelayFor18TCY *****************
  4937 ;; Defined at:
  4938 ;;		line 398 in file "main.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4952 ;;      Params:         0       0       0       0       0       0       0       0       0
  4953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4956 ;;Total ram usage:        0 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    2
  4959 ;; This function calls:
  4960 ;;		_Delay10TCYx
  4961 ;; This function is called by:
  4962 ;;		_BusyXLCD
  4963 ;;		_SetDDRamAddr
  4964 ;;		_WriteCmdXLCD
  4965 ;;		_WriteDataXLCD
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text28
  4970  0018A2                     __ptext28:
  4971                           	opt stack 0
  4972  0018A2                     _DelayFor18TCY:
  4973                           	opt stack 24
  4974                           
  4975                           ;main.c: 399: Delay10TCYx(120);
  4976                           
  4977                           ;incstack = 0
  4978  0018A2  0E78               	movlw	120
  4979  0018A4  EC39  F00C         	call	_Delay10TCYx
  4980  0018A8  0012               	return		;funcret
  4981  0018AA                     __end_of_DelayFor18TCY:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           intcon	equ	0xFF2
  4990                           indf0	equ	0xFEF
  4991                           postinc0	equ	0xFEE
  4992                           fsr0h	equ	0xFEA
  4993                           fsr0l	equ	0xFE9
  4994                           wreg	equ	0xFE8
  4995                           postdec1	equ	0xFE5
  4996                           fsr1l	equ	0xFE1
  4997                           indf2	equ	0xFDF
  4998                           postinc2	equ	0xFDE
  4999                           postdec2	equ	0xFDD
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _Delay10TCYx *****************
  5005 ;; Defined at:
  5006 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  unit            1    wreg     unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  unit            1   17[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0
  5021 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5023 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5024 ;;Total ram usage:        1 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_DelayFor18TCY
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text29
  5035  001872                     __ptext29:
  5036                           	opt stack 0
  5037  001872                     _Delay10TCYx:
  5038                           	opt stack 24
  5039                           
  5040                           ;incstack = 0
  5041                           ;Delay10TCYx@unit stored from wreg
  5042  001872  6E12               	movwf	Delay10TCYx@unit,c
  5043  001874  0E03               	movlw	3
  5044  001876                     u2277:
  5045  001876  2EE8               	decfsz	wreg,f,c
  5046  001878  D7FE               	bra	u2277
  5047  00187A  F000               	nop	
  5048  00187C  2E12               	decfsz	Delay10TCYx@unit,f,c
  5049  00187E  D7FA               	goto	l2646
  5050  001880  0012               	return	
  5051  001882                     __end_of_Delay10TCYx:
  5052                           	opt stack 0
  5053                           tblptru	equ	0xFF8
  5054                           tblptrh	equ	0xFF7
  5055                           tblptrl	equ	0xFF6
  5056                           tablat	equ	0xFF5
  5057                           prodh	equ	0xFF4
  5058                           prodl	equ	0xFF3
  5059                           intcon	equ	0xFF2
  5060                           indf0	equ	0xFEF
  5061                           postinc0	equ	0xFEE
  5062                           fsr0h	equ	0xFEA
  5063                           fsr0l	equ	0xFE9
  5064                           wreg	equ	0xFE8
  5065                           postdec1	equ	0xFE5
  5066                           fsr1l	equ	0xFE1
  5067                           indf2	equ	0xFDF
  5068                           postinc2	equ	0xFDE
  5069                           postdec2	equ	0xFDD
  5070                           fsr2h	equ	0xFDA
  5071                           fsr2l	equ	0xFD9
  5072                           status	equ	0xFD8
  5073                           
  5074 ;; *************** function _despertar *****************
  5075 ;; Defined at:
  5076 ;;		line 282 in file "main.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5090 ;;      Params:         0       0       0       0       0       0       0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5093 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5094 ;;Total ram usage:        0 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_main
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text30
  5105  00177C                     __ptext30:
  5106                           	opt stack 0
  5107  00177C                     _despertar:
  5108                           	opt stack 29
  5109                           
  5110                           ;main.c: 283: if((horaAtual.h) == desp_hora && (horaAtual.m) == desp_min && despertou ==
      +                           0){
  5111                           
  5112                           ;incstack = 0
  5113  00177C  5047               	movf	_desp_hora,w,c
  5114  00177E  182C               	xorwf	_horaAtual,w,c
  5115  001780  A4D8               	btfss	status,2,c
  5116  001782  D009               	goto	l3240
  5117  001784  5046               	movf	_desp_min,w,c
  5118  001786  182D               	xorwf	_horaAtual+1,w,c
  5119  001788  A4D8               	btfss	status,2,c
  5120  00178A  D005               	goto	l3240
  5121  00178C  5034               	movf	_despertou,w,c
  5122  00178E  A4D8               	btfss	status,2,c
  5123  001790  D002               	goto	l3240
  5124                           
  5125                           ;main.c: 284: PORTAbits.RA0 = 1;
  5126  001792  8080               	bsf	3968,0,c	;volatile
  5127                           
  5128                           ;main.c: 285: contador_alarme += 1;
  5129  001794  2A35               	incf	_contador_alarme,f,c
  5130  001796                     l3240:
  5131                           
  5132                           ;main.c: 286: }
  5133                           ;main.c: 287: if(contador_alarme >= 15){
  5134  001796  0E0E               	movlw	14
  5135  001798  6435               	cpfsgt	_contador_alarme,c
  5136  00179A  0012               	return	
  5137                           
  5138                           ;main.c: 288: PORTAbits.RA0 = 0;
  5139  00179C  9080               	bcf	3968,0,c	;volatile
  5140                           
  5141                           ;main.c: 289: despertou = 1;
  5142  00179E  0E01               	movlw	1
  5143  0017A0  6E34               	movwf	_despertou,c
  5144  0017A2  0012               	return	
  5145  0017A4                     __end_of_despertar:
  5146                           	opt stack 0
  5147                           tblptru	equ	0xFF8
  5148                           tblptrh	equ	0xFF7
  5149                           tblptrl	equ	0xFF6
  5150                           tablat	equ	0xFF5
  5151                           prodh	equ	0xFF4
  5152                           prodl	equ	0xFF3
  5153                           intcon	equ	0xFF2
  5154                           indf0	equ	0xFEF
  5155                           postinc0	equ	0xFEE
  5156                           fsr0h	equ	0xFEA
  5157                           fsr0l	equ	0xFE9
  5158                           wreg	equ	0xFE8
  5159                           postdec1	equ	0xFE5
  5160                           fsr1l	equ	0xFE1
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           postdec2	equ	0xFDD
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _pic_isr *****************
  5169 ;; Defined at:
  5170 ;;		line 295 in file "main.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5184 ;;      Params:         0       0       0       0       0       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5186 ;;      Temps:         17       0       0       0       0       0       0       0       0
  5187 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5188 ;;Total ram usage:       17 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		Interrupt level 1
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	intcodelo
  5198  000018                     __pintcodelo:
  5199                           	opt stack 0
  5200  000018                     _pic_isr:
  5201                           	opt stack 24
  5202                           
  5203                           ;incstack = 0
  5204  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5205  00001A  CFD8 F001          	movff	status,??_pic_isr
  5206  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
  5207  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
  5208  000026  CFFA F004          	movff	pclath,??_pic_isr+3
  5209  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
  5210  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
  5211  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
  5212  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
  5213  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
  5214  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
  5215  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
  5216  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
  5217  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
  5218  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
  5219  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
  5220  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
  5221  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
  5222                           
  5223                           ;main.c: 296: if(TMR0IF){
  5224  00005E  A4F2               	btfss	intcon,2,c	;volatile
  5225  000060  D00E               	goto	i1l1682
  5226                           
  5227                           ;main.c: 297: TMR0 = 28021;
  5228  000062  0E6D               	movlw	109
  5229  000064  6ED7               	movwf	4055,c	;volatile
  5230  000066  0E75               	movlw	117
  5231  000068  6ED6               	movwf	4054,c	;volatile
  5232                           
  5233                           ;main.c: 299: INTCONbits.TMR0IF = 0;
  5234  00006A  94F2               	bcf	intcon,2,c	;volatile
  5235                           
  5236                           ;main.c: 300: contador_interrupcao++;
  5237  00006C  2A37               	incf	_contador_interrupcao,f,c
  5238                           
  5239                           ;main.c: 301: if(contador_interrupcao == 20){
  5240  00006E  0E14               	movlw	20
  5241  000070  1837               	xorwf	_contador_interrupcao,w,c
  5242  000072  A4D8               	btfss	status,2,c
  5243  000074  D004               	goto	i1l1682
  5244                           
  5245                           ;main.c: 302: contador_um_segundo += 1;
  5246  000076  2A36               	incf	_contador_um_segundo,f,c
  5247                           
  5248                           ;main.c: 303: contador_interrupcao = 0;
  5249  000078  0E00               	movlw	0
  5250  00007A  6E37               	movwf	_contador_interrupcao,c
  5251                           
  5252                           ;main.c: 304: horaAtual.s+=1;
  5253  00007C  2A2E               	incf	_horaAtual+2,f,c
  5254  00007E                     i1l1682:
  5255                           
  5256                           ;main.c: 305: }
  5257                           ;main.c: 306: }
  5258                           ;main.c: 308: if(PIR1bits.RCIF == 1){
  5259  00007E  AA9E               	btfss	3998,5,c	;volatile
  5260  000080  D01B               	goto	i1l190
  5261  000082                     i1l186:
  5262  000082  AA9E               	btfss	3998,5,c	;volatile
  5263  000084  D7FE               	goto	i1l186
  5264                           
  5265                           ;main.c: 310: BUFFCOM[i]= RCREG;
  5266  000086  0E3A               	movlw	low _BUFFCOM
  5267  000088  2431               	addwf	_i,w,c
  5268  00008A  6ED9               	movwf	fsr2l,c
  5269  00008C  0E00               	movlw	high _BUFFCOM
  5270  00008E  2032               	addwfc	_i+1,w,c
  5271  000090  6EDA               	movwf	fsr2h,c
  5272  000092  CFAE FFDF          	movff	4014,indf2	;volatile
  5273                           
  5274                           ;main.c: 311: i++;
  5275  000096  4A31               	infsnz	_i,f,c
  5276  000098  2A32               	incf	_i+1,f,c
  5277                           
  5278                           ;main.c: 312: if(i>6){
  5279  00009A  BE32               	btfsc	_i+1,7,c
  5280  00009C  D00D               	goto	i1l190
  5281  00009E  5032               	movf	_i+1,w,c
  5282  0000A0  E104               	bnz	i1u65_20
  5283  0000A2  0E07               	movlw	7
  5284  0000A4  5C31               	subwf	_i,w,c
  5285  0000A6  A0D8               	btfss	status,0,c
  5286  0000A8  D007               	goto	i1l190
  5287  0000AA                     i1u65_20:
  5288                           
  5289                           ;main.c: 313: PIR1bits.RCIF = 0;
  5290  0000AA  9A9E               	bcf	3998,5,c	;volatile
  5291                           
  5292                           ;main.c: 314: i = 0;
  5293  0000AC  0E00               	movlw	0
  5294  0000AE  6E32               	movwf	_i+1,c
  5295  0000B0  0E00               	movlw	0
  5296  0000B2  6E31               	movwf	_i,c
  5297                           
  5298                           ;main.c: 315: estado = 1;
  5299  0000B4  0E01               	movlw	1
  5300  0000B6  6E38               	movwf	_estado,c
  5301  0000B8                     i1l190:
  5302  0000B8  C011  FFF5         	movff	??_pic_isr+16,tablat
  5303  0000BC  C010  FFF8         	movff	??_pic_isr+15,tblptru
  5304  0000C0  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
  5305  0000C4  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
  5306  0000C8  C00D  FFF4         	movff	??_pic_isr+12,prodh
  5307  0000CC  C00C  FFF3         	movff	??_pic_isr+11,prodl
  5308  0000D0  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
  5309  0000D4  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
  5310  0000D8  C009  FFE2         	movff	??_pic_isr+8,fsr1h
  5311  0000DC  C008  FFE1         	movff	??_pic_isr+7,fsr1l
  5312  0000E0  C007  FFEA         	movff	??_pic_isr+6,fsr0h
  5313  0000E4  C006  FFE9         	movff	??_pic_isr+5,fsr0l
  5314  0000E8  C005  FFFB         	movff	??_pic_isr+4,pclatu
  5315  0000EC  C004  FFFA         	movff	??_pic_isr+3,pclath
  5316  0000F0  C003  FFE0         	movff	??_pic_isr+2,bsr
  5317  0000F4  C002  FFE8         	movff	??_pic_isr+1,wreg
  5318  0000F8  C001  FFD8         	movff	??_pic_isr,status
  5319  0000FC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5320  0000FE  0010               	retfie	
  5321  000100                     __end_of_pic_isr:
  5322                           	opt stack 0
  5323                           pclatu	equ	0xFFB
  5324                           pclath	equ	0xFFA
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           prodh	equ	0xFF4
  5330                           prodl	equ	0xFF3
  5331                           intcon	equ	0xFF2
  5332                           indf0	equ	0xFEF
  5333                           postinc0	equ	0xFEE
  5334                           fsr0h	equ	0xFEA
  5335                           fsr0l	equ	0xFE9
  5336                           wreg	equ	0xFE8
  5337                           postdec1	equ	0xFE5
  5338                           fsr1h	equ	0xFE2
  5339                           fsr1l	equ	0xFE1
  5340                           bsr	equ	0xFE0
  5341                           indf2	equ	0xFDF
  5342                           postinc2	equ	0xFDE
  5343                           postdec2	equ	0xFDD
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8
  5347                           pclatu	equ	0xFFB
  5348                           pclath	equ	0xFFA
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           indf0	equ	0xFEF
  5357                           postinc0	equ	0xFEE
  5358                           fsr0h	equ	0xFEA
  5359                           fsr0l	equ	0xFE9
  5360                           wreg	equ	0xFE8
  5361                           postdec1	equ	0xFE5
  5362                           fsr1h	equ	0xFE2
  5363                           fsr1l	equ	0xFE1
  5364                           bsr	equ	0xFE0
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           postdec2	equ	0xFDD
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372                           	psect	rparam
  5373  0000                     pclatu	equ	0xFFB
  5374                           pclath	equ	0xFFA
  5375                           tblptru	equ	0xFF8
  5376                           tblptrh	equ	0xFF7
  5377                           tblptrl	equ	0xFF6
  5378                           tablat	equ	0xFF5
  5379                           prodh	equ	0xFF4
  5380                           prodl	equ	0xFF3
  5381                           intcon	equ	0xFF2
  5382                           indf0	equ	0xFEF
  5383                           postinc0	equ	0xFEE
  5384                           fsr0h	equ	0xFEA
  5385                           fsr0l	equ	0xFE9
  5386                           wreg	equ	0xFE8
  5387                           postdec1	equ	0xFE5
  5388                           fsr1h	equ	0xFE2
  5389                           fsr1l	equ	0xFE1
  5390                           bsr	equ	0xFE0
  5391                           indf2	equ	0xFDF
  5392                           postinc2	equ	0xFDE
  5393                           postdec2	equ	0xFDD
  5394                           fsr2h	equ	0xFDA
  5395                           fsr2l	equ	0xFD9
  5396                           status	equ	0xFD8
  5397                           
  5398                           	psect	temp
  5399  00004D                     btemp:
  5400                           	opt stack 0
  5401  00004D                     	ds	1
  5402  0000                     int$flags	set	btemp
  5403                           pclatu	equ	0xFFB
  5404                           pclath	equ	0xFFA
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           prodh	equ	0xFF4
  5410                           prodl	equ	0xFF3
  5411                           intcon	equ	0xFF2
  5412                           indf0	equ	0xFEF
  5413                           postinc0	equ	0xFEE
  5414                           fsr0h	equ	0xFEA
  5415                           fsr0l	equ	0xFE9
  5416                           wreg	equ	0xFE8
  5417                           postdec1	equ	0xFE5
  5418                           fsr1h	equ	0xFE2
  5419                           fsr1l	equ	0xFE1
  5420                           bsr	equ	0xFE0
  5421                           indf2	equ	0xFDF
  5422                           postinc2	equ	0xFDE
  5423                           postdec2	equ	0xFDD
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8


Data Sizes:
    Strings     217
    Constant    10
    Data        23
    BSS         202
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      76
    BANK0           160     20      92
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    memcpy@s1	PTR const void  size(3) Largest target is 32767
		 -> revisao(COMRAM[1]), versao(COMRAM[1]), ROM(CODE[32767]), BUFFCOM(COMRAM[7]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> revisao(COMRAM[1]), versao(COMRAM[1]), ROM(CODE[32767]), BUFFCOM(COMRAM[7]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> mensagemL2(BANK0[16]), mensagemL1(BANK0[16]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_20(CODE[8]), STR_19(CODE[10]), STR_18(CODE[16]), STR_17(CODE[13]), 
		 -> STR_16(CODE[16]), STR_15(CODE[14]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[23]), STR_11(CODE[13]), STR_10(CODE[13]), STR_9(CODE[16]), 
		 -> STR_8(CODE[13]), STR_7(CODE[17]), STR_6(CODE[13]), STR_5(CODE[22]), 
		 -> STR_4(CODE[19]), STR_3(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> mensagemL2(BANK0[16]), mensagemL1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    escreveMensagem@l2	PTR unsigned char  size(2) Largest target is 16
		 -> mensagemL2(BANK0[16]), 

    escreveMensagem@l1	PTR unsigned char  size(2) Largest target is 16
		 -> mensagemL1(BANK0[16]), 


Critical Paths under _main in COMRAM

    _telas->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _limpaTela->_SetDDRamAddr
    _escreveMensagem->_SetDDRamAddr
    _putrsXLCD->_WriteDataXLCD
    _maquinaEstado->_trataComando
    _verificaCRCBUFFCOM->_crc16
    _trataComando->_calculaCRCBUFFRESP
    _calculaCRCBUFFRESP->_crc16
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _telas->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13885
                                             41 COMRAM     2     2      0
                                             18 BANK0      2     2      0
                          _despertar
                          _init_XLCD
                      _maquinaEstado
                              _telas
                         _trata_data
                         _trata_hora
                        _troca_telas
 ---------------------------------------------------------------------------------
 (1) _troca_telas                                          2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _trata_hora                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trata_data                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _telas                                                2     2      0    7133
                                             37 COMRAM     2     2      0
                    _escreveMensagem
                          _limpaTela
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             35    17     18    4505
                                             29 COMRAM     8     8      0
                                              0 BANK0     18     0     18
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _limpaTela                                            0     0      0     590
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _escreveMensagem                                      4     0      4    2038
                                             22 COMRAM     4     0      4
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2     497
                                             19 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0    6188
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   5     5      0     945
                                             30 COMRAM     5     5      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      99
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         4     4      0    5082
                                             37 COMRAM     4     4      0
                 _calculaCRCBUFFRESP
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   7     7      0    2930
                                             30 COMRAM     7     7      0
                              _crc16
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     5      7    2022
                                             17 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             17 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     434
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     310
                                             22 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      93
                                             18 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      31
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (6) _Delay10TCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _despertar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _despertar
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       _calculaCRCBUFFRESP
         _crc16
         _memcpy
       _memcpy
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _telas
     _escreveMensagem
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _limpaTela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _trata_data
   _trata_hora
   _troca_telas

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      5C       5       57.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120      20        0.0%
DATA                 0      0     120       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Dec 03 11:13:41 2018

                          _i 0031         _contador_interrupcao 0037                           bsr 000FE0  
                        l230 0DE2                          l231 0DF0                          l160 1688  
                        l217 11DC                          l317 1730                          l229 0DD4  
                        l266 1812                          l276 175C                          l831 1518  
                        l841 1646                          _dia 0049                          _ano 0043  
                        _mes 0048        __size_of_WriteCmdXLCD 003E                          prod 000FF3  
                        wreg 000FE8                  _troca_telas 1650                         l3000 0FDE  
                       l3010 105C                         l3100 1834                         l3030 0E32  
                       l3022 0DFE                         l3006 1038                         l3040 0E90  
                       l3024 0E1A                         l3016 0D18                         l3008 1040  
                       l3112 098A                         l3042 0EAA                         l3026 0E22  
                       l3018 0D66                         l3050 0ED4                         l3130 0AC8  
                       l3106 08E8                         l3036 0E6E                         l3052 0EE2  
                       l3124 0A5E                         l3038 0E7C                         l3046 0EB8  
                       l3142 0BB4                         l3118 09F4                         l3206 14C0  
                       l3222 1800                         l3302 10C0                         l3240 1796  
                       l3072 15BC                         l3136 0B52                         l3312 113A  
                       l3066 15AC                         l3250 15CA                         l3154 0C78  
                       l3162 0CD2                         l3306 10D6                         l2700 1174  
                       l3076 174C                         l3252 15D0                         l3260 15E6  
                       l3148 0C16                         l2710 1196                         l3086 1776  
                       l3254 15D6                         l3326 1158                         l3096 1828  
                       l3256 15DE                         l3248 15C4                         l3184 148A  
                       l2714 11D6                         l2706 118E                         l3194 14A2  
                       l2732 13D2                         l2820 1452                         l2646 1874  
                       l2718 11E6                         l2814 1420                         l2920 12A2  
                       l2912 1282                         l2906 1268                         l2738 140C  
                       l2850 14EE                         l2924 12B2                         l2916 1292  
                       l2908 1272                         l2860 150E                         l2852 14F2  
                       l2838 184E                         l2870 1624                         l2688 1864  
                       l2928 12C2                         l2848 14E6                         l2872 1628  
                       l2960 0F1E                         l2952 0EFC                         l2954 0F04  
                       l2876 163C                         l2868 161C                         l2980 0F88  
                       l2956 0F0A                         l2948 0EF2                         l2966 0F2C  
                       l2992 0FBA                         l2968 0F5C                         l2978 0F84  
                       l2998 0FD8                         STR_1 084B                         STR_2 084B  
                       STR_3 080B                         STR_4 0838                         STR_5 0822  
                       STR_6 08C5                         STR_7 085C                         STR_8 08C5  
                       STR_9 086D                         u2070 1680                         u1710 144A  
                       u2247 165E                         u1720 1472                         u2257 1866  
                       u2267 1854                         u2277 1876                         u1717 1440  
                       u1670 13FA                         u1727 1468                         u1677 13F0  
                       u1695 1538                         _PEIE 007F96                         _RCIE 007CED  
                       _RCIF 007CF5                         _RCIP 007CFD                         _TMR0 000FD6  
                       _TXIF 007CF4                         _main 106A                         _tela 0041  
                       fsr0h 000FEA                         fsr1h 000FE2                         indf0 000FEF  
                       fsr2h 000FDA                         fsr0l 000FE9                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 004D  
     __size_of_WriteDataXLCD 003E                         prodh 000FF4                         prodl 000FF3  
                       start 0100       verificaCRCBUFFCOM@crc1 001F       verificaCRCBUFFCOM@crc2 0020  
               ___param_bank 000000                  _Delay10TCYx 1872     __size_of_escreveMensagem 0026  
               _WriteCmdXLCD 16CC                  _Delay1KTCYx 1862                ?_SetDDRamAddr 0001  
                      ?_main 0001              _contador_alarme 0035                        STR_10 08C5  
                      STR_11 08AB                        STR_12 080B                        STR_20 08DC  
                      STR_13 087D           _verificaCRCBUFFCOM 1574                        STR_14 088D  
                      STR_15 089D                        STR_16 088D                        STR_17 08B8  
                      STR_18 088D                        STR_19 08D2              __end_of___lwdiv 1522  
                      i1l190 00B8              __end_of___lwmod 1650                        i1l186 0082  
                      _RCREG 000FAE            escreveMensagem@l1 0017            escreveMensagem@l2 0019  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _PORTB 000F81  
                      _TRISA 000F92                        _TRISB 000F93                        _TXREG 000FAD  
      __size_of_Delay10KTCYx 0016                        _TXSTA 000FAC                        _crc16 115E  
        ?_verificaCRCBUFFCOM 0001              __end_of_dpowers 080B                        _telas 08E6  
            __end_of_pic_isr 0100                        main@b 00AF                        pclath 000FFA  
                      tablat 000FF5              __end_of_tx_data 177C                        status 000FD8  
            __end_of_sprintf 106A              __initialization 134E         ??_verificaCRCBUFFCOM 001F  
               __end_of_main 115E             __end_of_BusyXLCD 1744                 _Delay10KTCYx 184C  
      __size_of_DelayPORXLCD 0008               ??_SetDDRamAddr 0013             __end_of_OpenXLCD 12D4  
 __end_of_calculaCRCBUFFRESP 134E                       ??_main 002A                __activetblptr 000003  
              _WriteDataXLCD 168E                       ?_crc16 0012                       ?_telas 0001  
                     i1l1682 007E                       _TMR0IF 007F92                 _DelayPORXLCD 189A  
                     crc16@i 001A       __size_of_maquinaEstado 004C                    ??___lwdiv 0016  
                  ??___lwmod 001D                       _estado 0038                       _funcao 0074  
                     _memcpy 13BC                       clear_0 1394                       clear_1 13A0  
                     clear_2 13AC                       _versao 004C               ?_WriteDataXLCD 0001  
               _calcula_temp 0033                 __pdataCOMRAM 0041            ??_escreveMensagem 001B  
                  ??_pic_isr 0001                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                    ??_tx_data 0012  
                  ??_sprintf 001E     verificaCRCBUFFCOM@CRC_OK 0021                   __accesstop 0060  
    __end_of__initialization 13B2              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
      calculaCRCBUFFRESP@crc 0024               __pcstackCOMRAM 0001                 __pidataBANK0 188E  
              __end_of_crc16 1230                __end_of_telas 0D16         trataComando@iterator 0028  
         __size_of_despertar 0028                 ?_troca_telas 0001                      ??_crc16 0016  
              _maquinaEstado 15C2                      ??_telas 0026       __size_of_DelayFor18TCY 0008  
                 __pbssBANK0 0060                   __pbssBANK1 0100           __size_of_enviaByte 001E  
                  ?_BusyXLCD 0001              WriteCmdXLCD@cmd 0013         __end_of_SetDDRamAddr 1574  
         __size_of_init_XLCD 001E                    ?_OpenXLCD 0001           __size_of_limpaTela 0026  
          WriteDataXLCD@data 0013                 ?_Delay10TCYx 0001              ??_WriteDataXLCD 0013  
               ?_Delay1KTCYx 0001                      ?_memcpy 0012                      _BUFFCOM 003A  
                    i1u65_20 00AA               ?_maquinaEstado 0001           __size_of_putrsXLCD 005C  
                 ??_BusyXLCD 0013                   ??_OpenXLCD 0017                      __Hparam 0000  
                    __Lparam 0000            __end_of_despertar 17A4                _DelayFor18TCY 18A2  
                    ___lwdiv 14D0                      ___lwmod 160E                 __psmallconst 0800  
          __end_of_enviaByte 182E                      __pcinit 134E              __size_of_memcpy 0062  
            putrsXLCD@buffer 0014              Delay10TCYx@unit 0012                   _mensagemL1 0086  
                 _mensagemL2 0076                      __ramtop 0800                      __ptext0 106A  
                    __ptext1 1650                      __ptext2 17F0                      __ptext3 147A  
                    __ptext4 08E6                      __ptext5 0EE8                      __ptext6 160E  
                    __ptext7 14D0                      __ptext8 17A4                      __ptext9 17CA  
          __end_of_init_XLCD 184C                      _energia 0100                    _T0CONbits 000FD5  
                    _dpowers 0801                      _pic_isr 0018            __end_of_limpaTela 17CA  
                    _revisao 004B                      _tx_data 1744                      _sprintf 0EE8  
                 _telaAntiga 0072         end_of_initialization 13B2           _calculaCRCBUFFRESP 12D4  
                    memcpy@d 001C                      memcpy@n 0017                      memcpy@s 0019  
                 _tela_atual 004A          ?_calculaCRCBUFFRESP 0001                enviaByte@BYTE 0012  
             ?_DelayFor18TCY 0001  __size_of_verificaCRCBUFFCOM 004E                      postdec1 000FE5  
                    postdec2 000FDD              _escreveMensagem 17CA                      postinc0 000FEE  
                    postinc2 000FDE            __end_of_putrsXLCD 147A                    _PORTAbits 000F80  
                  _PORTDbits 000F83         ??_calculaCRCBUFFRESP 001F              ??_maquinaEstado 002A  
                  _TRISBbits 000F93                    _TRISCbits 000F94                   _trata_data 147A  
                 _trata_hora 17F0        __size_of_SetDDRamAddr 0052         __size_of_troca_telas 003E  
     calculaCRCBUFFRESP@crc1 0022       calculaCRCBUFFRESP@crc2 0023                ?_trataComando 0001  
      verificaCRCBUFFCOM@crc 0022                 _constante_ad 00B8         __size_of_Delay10TCYx 0010  
              __pidataCOMRAM 1882               __end_of_memcpy 141E                 _SetDDRamAddr 1522  
       __size_of_Delay1KTCYx 0010           SetDDRamAddr@DDaddr 0016          start_initialization 134E  
        _contador_um_segundo 0036               ??_trataComando 0026      __end_of_escreveMensagem 17F0  
          __size_of_BusyXLCD 003A              ??_DelayFor18TCY 0013            __size_of_OpenXLCD 00A4  
              ?_WriteCmdXLCD 0001                  tx_data@cont 0012                  __pdataBANK0 00B1  
                   ??_memcpy 0019                  crc16@data_p 0012                  crc16@length 0014  
                __pbssCOMRAM 002C                __pcstackBANK0 009D                  ?_trata_data 0001  
                ?_trata_hora 0001              Delay1KTCYx@unit 0012                  sprintf@flag 001F  
                sprintf@prec 0020                    crc16@data 001B             ___lwdiv@dividend 0012  
             ??_WriteCmdXLCD 0013                    _desp_hora 0047                ?_Delay10KTCYx 0001  
                   ?___lwdiv 0012                     ?___lwmod 0019                    _despertar 177C  
                  _despertou 0034                  __pintcodelo 0018        __end_of_WriteDataXLCD 16CC  
                __smallconst 0800                    _enviaByte 1810                     ?_pic_isr 0001  
                  _horaAtual 002C                    _init_XLCD 182E               __size_of_crc16 00D2  
           ___lwdiv@quotient 0017                     ?_tx_data 0001                     ?_sprintf 009D  
                  _limpaTela 17A4                     _BUFFRESP 0096               __size_of_telas 0430  
                   _ADResult 002F                     _LATBbits 000F8A             ?_escreveMensagem 0017  
              ?_DelayPORXLCD 0001                     _PIR1bits 000F9E              OpenXLCD@lcdtype 0017  
             ??_Delay10KTCYx 0012          __size_of_trata_data 0056          __size_of_trata_hora 0020  
                 ?_despertar 0001         __end_of_trataComando 0EE8                   ?_enviaByte 0001  
                  _putrsXLCD 141E             Delay10KTCYx@unit 0013                   ?_init_XLCD 0001  
                 ?_limpaTela 0001                    copy_data0 1362                    copy_data1 1382  
                   _BusyXLCD 170A               ??_DelayPORXLCD 0013                     _OpenXLCD 1230  
               _semanaAlarme 0060   __end_of_verificaCRCBUFFCOM 15C2                     __Hrparam 0000  
                   __Lrparam 0000             __size_of___lwdiv 0052             __size_of___lwmod 0042  
                 sprintf@val 0023                   ?_putrsXLCD 0014                     crc16@crc 001D  
__size_of_calculaCRCBUFFRESP 007A                ??_troca_telas 0012             __size_of_pic_isr 00E8  
            ___lwdiv@divisor 0014              ___lwdiv@counter 0016        __end_of_maquinaEstado 160E  
                   __ptext10 141E                     __ptext11 168E                     __ptext20 182E  
                   __ptext12 15C2                     __ptext21 1230                     __ptext13 1574  
                   __ptext30 177C                     __ptext22 16CC                     __ptext14 1744  
                   __ptext23 1522                     __ptext15 0D16                     __ptext24 189A  
                   __ptext16 12D4                     __ptext25 1862                     __ptext17 13BC  
                   __ptext26 184C                     __ptext18 115E                     __ptext27 170A  
                   __ptext19 1810                     __ptext28 18A2                     __ptext29 1872  
                   _desp_min 0046         __end_of_WriteCmdXLCD 170A             __size_of_tx_data 0038  
           __size_of_sprintf 0182                __size_of_main 00F4                ??_Delay10TCYx 0012  
                   int$flags 004D                  ??_despertar 0012                ??_Delay1KTCYx 0012  
                ??_enviaByte 0012                   _INTCONbits 000FF2                     memcpy@d1 0012  
                   memcpy@s1 0014                  ??_init_XLCD 0018                 ??_trata_data 0012  
                _semanaPrint 00B1                 ??_trata_hora 0012                  ??_limpaTela 0017  
       __end_of_Delay10KTCYx 1862                     intlevel1 0000                    sprintf@ap 0021  
                  sprintf@sp 009D          __end_of_troca_telas 168E             ___lwmod@dividend 0019  
                _serial_data 0039        __end_of_DelayFor18TCY 18AA                 _primeiraExec 0045  
      __size_of_trataComando 01D2           __end_of_trata_data 14D0           __end_of_trata_hora 1810  
        __end_of_Delay10TCYx 1882                  _temperatura 006E                     sprintf@c 0025  
                   sprintf@f 009F         __end_of_DelayPORXLCD 18A2                  ??_putrsXLCD 0016  
            ___lwmod@divisor 001B          __end_of_Delay1KTCYx 1872              ___lwmod@counter 001D  
               _trataComando 0D16  
