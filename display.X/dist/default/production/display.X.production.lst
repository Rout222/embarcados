

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Nov 27 21:00:33 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  00148D                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _ano
    93  00148D  07E2               	dw	2018
    94                           
    95                           ;initializer for _desp_min
    96  00148F  0A                 	db	10
    97                           
    98                           ;initializer for _desp_hora
    99  001490  05                 	db	5
   100                           
   101                           ;initializer for _mes
   102  001491  06                 	db	6
   103                           
   104                           ;initializer for _dia
   105  001492  04                 	db	4
   106                           
   107                           ;initializer for _tela_atual
   108  001493  02                 	db	2
   109                           
   110                           ;initializer for _revisao
   111  001494  02                 	db	2
   112                           
   113                           ;initializer for _versao
   114  001495  01                 	db	1
   115                           
   116                           	psect	idataBANK0
   117  001482                     __pidataBANK0:
   118                           	opt stack 0
   119                           
   120                           ;initializer for _semanaPrint
   121  001482  64                 	db	100
   122  001483  73                 	db	115
   123  001484  74                 	db	116
   124  001485  71                 	db	113
   125  001486  71                 	db	113
   126  001487  73                 	db	115
   127  001488  73                 	db	115
   128                           
   129                           ;initializer for _constante_ad
   130  001489  280A               	dw	10250
   131  00148B  3BA0               	dw	15264
   132                           
   133                           	psect	smallconst
   134  000800                     __psmallconst:
   135                           	opt stack 0
   136  000800  00                 	db	0
   137  000801                     _dpowers:
   138                           	opt stack 0
   139  000801  0001               	dw	1
   140  000803  000A               	dw	10
   141  000805  0064               	dw	100
   142  000807  03E8               	dw	1000
   143  000809  2710               	dw	10000
   144  00080B                     __end_of_dpowers:
   145                           	opt stack 0
   146  0000                     _TMR0	set	4054
   147  0000                     _TRISBbits	set	3987
   148  0000                     _TRISB	set	3987
   149  0000                     _PORTB	set	3969
   150  0000                     _LATBbits	set	3978
   151  0000                     _TXREG	set	4013
   152  0000                     _TRISCbits	set	3988
   153  0000                     _TXSTA	set	4012
   154  0000                     _RCSTA	set	4011
   155  0000                     _SPBRG	set	4015
   156  0000                     _TRISA	set	3986
   157  0000                     _T0CONbits	set	4053
   158  0000                     _RCREG	set	4014
   159  0000                     _PIR1bits	set	3998
   160  0000                     _INTCONbits	set	4082
   161  0000                     _PORTAbits	set	3968
   162  0000                     _PORTDbits	set	3971
   163  0000                     _TXIF	set	31988
   164  0000                     _PEIE	set	32662
   165  0000                     _RCIE	set	31981
   166  0000                     _RCIP	set	31997
   167  0000                     _RCIF	set	31989
   168  0000                     _TMR0IF	set	32658
   169  00080B                     STR_9:
   170  00080B  25                 	db	37
   171  00080C  64                 	db	100	;'d'
   172  00080D  20                 	db	32
   173  00080E  25                 	db	37
   174  00080F  64                 	db	100	;'d'
   175  000810  20                 	db	32
   176  000811  25                 	db	37
   177  000812  64                 	db	100	;'d'
   178  000813  20                 	db	32
   179  000814  25                 	db	37
   180  000815  64                 	db	100	;'d'
   181  000816  20                 	db	32
   182  000817  25                 	db	37
   183  000818  64                 	db	100	;'d'
   184  000819  20                 	db	32
   185  00081A  25                 	db	37
   186  00081B  64                 	db	100	;'d'
   187  00081C  20                 	db	32
   188  00081D  25                 	db	37
   189  00081E  64                 	db	100	;'d'
   190  00081F  00                 	db	0
   191  000820                     STR_6:
   192  000820  44                 	db	68	;'D'
   193  000821  69                 	db	105	;'i'
   194  000822  61                 	db	97	;'a'
   195  000823  20                 	db	32
   196  000824  64                 	db	100	;'d'
   197  000825  61                 	db	97	;'a'
   198  000826  20                 	db	32
   199  000827  73                 	db	115	;'s'
   200  000828  65                 	db	101	;'e'
   201  000829  6D                 	db	109	;'m'
   202  00082A  61                 	db	97	;'a'
   203  00082B  6E                 	db	110	;'n'
   204  00082C  61                 	db	97	;'a'
   205  00082D  00                 	db	0
   206  00082E                     STR_5:
   207  00082E  43                 	db	67	;'C'
   208  00082F  6F                 	db	111	;'o'
   209  000830  6E                 	db	110	;'n'
   210  000831  66                 	db	102	;'f'
   211  000832  69                 	db	105	;'i'
   212  000833  67                 	db	103	;'g'
   213  000834  75                 	db	117	;'u'
   214  000835  72                 	db	114	;'r'
   215  000836  61                 	db	97	;'a'
   216  000837  63                 	db	99	;'c'
   217  000838  61                 	db	97	;'a'
   218  000839  6F                 	db	111	;'o'
   219  00083A  00                 	db	0
   220  00083B  25                 	db	37
   221  00083C  64                 	db	100	;'d'
   222  00083D  2F                 	db	47
   223  00083E  25                 	db	37
   224  00083F  64                 	db	100	;'d'
   225  000840  2F                 	db	47
   226  000841  25                 	db	37
   227  000842  64                 	db	100	;'d'
   228  000843  00                 	db	0
   229  000844                     STR_2:
   230  000844  25                 	db	37
   231  000845  64                 	db	100	;'d'
   232  000846  3A                 	db	58	;':'
   233  000847  25                 	db	37
   234  000848  64                 	db	100	;'d'
   235  000849  3A                 	db	58	;':'
   236  00084A  25                 	db	37
   237  00084B  64                 	db	100	;'d'
   238  00084C  00                 	db	0
   239  00084D  54                 	db	84	;'T'
   240  00084E  45                 	db	69	;'E'
   241  00084F  53                 	db	83	;'S'
   242  000850  54                 	db	84	;'T'
   243  000851  45                 	db	69	;'E'
   244  000852  65                 	db	101	;'e'
   245  000853  72                 	db	114	;'r'
   246  000854  00                 	db	0
   247  000855  48                 	db	72	;'H'
   248  000856  6F                 	db	111	;'o'
   249  000857  72                 	db	114	;'r'
   250  000858  61                 	db	97	;'a'
   251  000859  3A                 	db	58	;':'
   252  00085A  20                 	db	32
   253  00085B  00                 	db	0
   254  00085C  44                 	db	68	;'D'
   255  00085D  61                 	db	97	;'a'
   256  00085E  74                 	db	116	;'t'
   257  00085F  61                 	db	97	;'a'
   258  000860  3A                 	db	58	;':'
   259  000861  20                 	db	32
   260  000862  00                 	db	0
   261  000863  25                 	db	37
   262  000864  64                 	db	100	;'d'
   263  000865  20                 	db	32
   264  000866  43                 	db	67	;'C'
   265  000867  00                 	db	0
   266  000868                     STR_8:
   267  000868  48                 	db	72	;'H'
   268  000869  6F                 	db	111	;'o'
   269  00086A  72                 	db	114	;'r'
   270  00086B  61                 	db	97	;'a'
   271  00086C  00                 	db	0
   272  0000                     
   273                           ; #config settings
   274  00086D  00                 	db	0	; dummy byte at the end
   275  0000                     
   276                           	psect	cinit
   277  000F1E                     __pcinit:
   278                           	opt stack 0
   279  000F1E                     start_initialization:
   280                           	opt stack 0
   281  000F1E                     __initialization:
   282                           	opt stack 0
   283                           
   284                           ; Initialize objects allocated to BANK0 (11 bytes)
   285                           ; load TBLPTR registers with __pidataBANK0
   286  000F1E  0E82               	movlw	low __pidataBANK0
   287  000F20  6EF6               	movwf	tblptrl,c
   288  000F22  0E14               	movlw	high __pidataBANK0
   289  000F24  6EF7               	movwf	tblptrh,c
   290  000F26  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   291  000F28  6EF8               	movwf	tblptru,c
   292  000F2A  EE00  F097         	lfsr	0,__pdataBANK0
   293  000F2E  EE10 F00B          	lfsr	1,11
   294  000F32                     copy_data0:
   295  000F32  0009               	tblrd		*+
   296  000F34  CFF5 FFEE          	movff	tablat,postinc0
   297  000F38  50E5               	movf	postdec1,w,c
   298  000F3A  50E1               	movf	fsr1l,w,c
   299  000F3C  E1FA               	bnz	copy_data0
   300                           
   301                           ; Initialize objects allocated to COMRAM (9 bytes)
   302                           ; load TBLPTR registers with __pidataCOMRAM
   303  000F3E  0E8D               	movlw	low __pidataCOMRAM
   304  000F40  6EF6               	movwf	tblptrl,c
   305  000F42  0E14               	movlw	high __pidataCOMRAM
   306  000F44  6EF7               	movwf	tblptrh,c
   307  000F46  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   308  000F48  6EF8               	movwf	tblptru,c
   309  000F4A  EE00  F045         	lfsr	0,__pdataCOMRAM
   310  000F4E  EE10 F009          	lfsr	1,9
   311  000F52                     copy_data1:
   312  000F52  0009               	tblrd		*+
   313  000F54  CFF5 FFEE          	movff	tablat,postinc0
   314  000F58  50E5               	movf	postdec1,w,c
   315  000F5A  50E1               	movf	fsr1l,w,c
   316  000F5C  E1FA               	bnz	copy_data1
   317                           
   318                           ; Clear objects allocated to BANK0 (37 bytes)
   319  000F5E  EE00  F060         	lfsr	0,__pbssBANK0
   320  000F62  0E25               	movlw	37
   321  000F64                     clear_0:
   322  000F64  6AEE               	clrf	postinc0,c
   323  000F66  06E8               	decf	wreg,f,c
   324  000F68  E1FD               	bnz	clear_0
   325                           
   326                           ; Clear objects allocated to COMRAM (27 bytes)
   327  000F6A  EE00  F02A         	lfsr	0,__pbssCOMRAM
   328  000F6E  0E1B               	movlw	27
   329  000F70                     clear_1:
   330  000F70  6AEE               	clrf	postinc0,c
   331  000F72  06E8               	decf	wreg,f,c
   332  000F74  E1FD               	bnz	clear_1
   333  000F76                     end_of_initialization:
   334                           	opt stack 0
   335  000F76                     __end_of__initialization:
   336                           	opt stack 0
   337  000F76  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   338  000F78  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   339  000F7A  0100               	movlb	0
   340  000F7C  EFD9  F006         	goto	_main	;jump to C main() function
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssCOMRAM
   351  00002A                     __pbssCOMRAM:
   352                           	opt stack 0
   353  00002A                     _temperatura:
   354                           	opt stack 0
   355  00002A                     	ds	4
   356  00002E                     _horaAtual:
   357                           	opt stack 0
   358  00002E                     	ds	3
   359  000031                     _ADResult:
   360                           	opt stack 0
   361  000031                     	ds	2
   362  000033                     _funcao:
   363                           	opt stack 0
   364  000033                     	ds	2
   365  000035                     _i:
   366                           	opt stack 0
   367  000035                     	ds	2
   368  000037                     _calcula_temp:
   369                           	opt stack 0
   370  000037                     	ds	1
   371  000038                     _despertou:
   372                           	opt stack 0
   373  000038                     	ds	1
   374  000039                     _contador_alarme:
   375                           	opt stack 0
   376  000039                     	ds	1
   377  00003A                     _contador_um_segundo:
   378                           	opt stack 0
   379  00003A                     	ds	1
   380  00003B                     _contador_interrupcao:
   381                           	opt stack 0
   382  00003B                     	ds	1
   383  00003C                     _estado:
   384                           	opt stack 0
   385  00003C                     	ds	1
   386  00003D                     _serial_data:
   387                           	opt stack 0
   388  00003D                     	ds	1
   389  00003E                     _BUFFCOM:
   390                           	opt stack 0
   391  00003E                     	ds	7
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	dataCOMRAM
   402  000045                     __pdataCOMRAM:
   403                           	opt stack 0
   404  000045                     _ano:
   405                           	opt stack 0
   406  000045                     	ds	2
   407  000047                     _desp_min:
   408                           	opt stack 0
   409  000047                     	ds	1
   410  000048                     _desp_hora:
   411                           	opt stack 0
   412  000048                     	ds	1
   413  000049                     _mes:
   414                           	opt stack 0
   415  000049                     	ds	1
   416  00004A                     _dia:
   417                           	opt stack 0
   418  00004A                     	ds	1
   419  00004B                     _tela_atual:
   420                           	opt stack 0
   421  00004B                     	ds	1
   422  00004C                     _revisao:
   423                           	opt stack 0
   424  00004C                     	ds	1
   425  00004D                     _versao:
   426                           	opt stack 0
   427  00004D                     	ds	1
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	bssBANK0
   438  000060                     __pbssBANK0:
   439                           	opt stack 0
   440  000060                     _semanaAlarme:
   441                           	opt stack 0
   442  000060                     	ds	14
   443  00006E                     _buffer:
   444                           	opt stack 0
   445  00006E                     	ds	16
   446  00007E                     _BUFFRESP:
   447                           	opt stack 0
   448  00007E                     	ds	7
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           postdec1	equ	0xFE5
   456                           fsr1l	equ	0xFE1
   457                           
   458                           	psect	dataBANK0
   459  000097                     __pdataBANK0:
   460                           	opt stack 0
   461  000097                     _semanaPrint:
   462                           	opt stack 0
   463  000097                     	ds	7
   464  00009E                     _constante_ad:
   465                           	opt stack 0
   466  00009E                     	ds	4
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	cstackBANK0
   477  000085                     __pcstackBANK0:
   478                           	opt stack 0
   479  000085                     ?_sprintf:
   480                           	opt stack 0
   481  000085                     sprintf@sp:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x0
   485  000085                     	ds	2
   486  000087                     sprintf@f:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x2
   490  000087                     	ds	16
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	cstackCOMRAM
   501  000001                     __pcstackCOMRAM:
   502                           	opt stack 0
   503  000001                     ??_pic_isr:
   504  000001                     
   505                           ; 1 bytes @ 0x0
   506  000001                     	ds	17
   507  000012                     ??_Delay10KTCYx:
   508  000012                     ?_crc16:
   509                           	opt stack 0
   510  000012                     ?___lwdiv:
   511                           	opt stack 0
   512  000012                     enviaByte@BYTE:
   513                           	opt stack 0
   514  000012                     Delay10TCYx@unit:
   515                           	opt stack 0
   516  000012                     Delay1KTCYx@unit:
   517                           	opt stack 0
   518  000012                     crc16@data_p:
   519                           	opt stack 0
   520  000012                     tx_data@cont:
   521                           	opt stack 0
   522  000012                     ___lwdiv@dividend:
   523                           	opt stack 0
   524  000012                     memcpy@d1:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x11
   528  000012                     	ds	1
   529  000013                     ??_SetDDRamAddr:
   530  000013                     WriteCmdXLCD@cmd:
   531                           	opt stack 0
   532  000013                     WriteDataXLCD@data:
   533                           	opt stack 0
   534  000013                     Delay10KTCYx@unit:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x12
   538  000013                     	ds	1
   539  000014                     crc16@length:
   540                           	opt stack 0
   541  000014                     putrsXLCD@buffer:
   542                           	opt stack 0
   543  000014                     ___lwdiv@divisor:
   544                           	opt stack 0
   545  000014                     memcpy@s1:
   546                           	opt stack 0
   547                           
   548                           ; 3 bytes @ 0x13
   549  000014                     	ds	2
   550  000016                     ??_crc16:
   551  000016                     SetDDRamAddr@DDaddr:
   552                           	opt stack 0
   553  000016                     ___lwdiv@quotient:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x15
   557  000016                     	ds	1
   558  000017                     OpenXLCD@lcdtype:
   559                           	opt stack 0
   560  000017                     memcpy@n:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x16
   564  000017                     	ds	1
   565  000018                     ___lwdiv@counter:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x17
   569  000018                     	ds	1
   570  000019                     ?___lwmod:
   571                           	opt stack 0
   572  000019                     ___lwmod@dividend:
   573                           	opt stack 0
   574  000019                     memcpy@s:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x18
   578  000019                     	ds	1
   579  00001A                     crc16@data:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x19
   583  00001A                     	ds	1
   584  00001B                     ___lwmod@divisor:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x1A
   588  00001B                     	ds	1
   589  00001C                     crc16@i:
   590                           	opt stack 0
   591  00001C                     memcpy@d:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x1B
   595  00001C                     	ds	1
   596  00001D                     ___lwmod@counter:
   597                           	opt stack 0
   598  00001D                     crc16@crc:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x1C
   602  00001D                     	ds	1
   603  00001E                     ??_sprintf:
   604                           
   605                           ; 1 bytes @ 0x1D
   606  00001E                     	ds	1
   607  00001F                     ??_calculaCRCBUFFRESP:
   608  00001F                     verificaCRCBUFFCOM@crc1:
   609                           	opt stack 0
   610  00001F                     sprintf@ap:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x1E
   614  00001F                     	ds	1
   615  000020                     verificaCRCBUFFCOM@crc2:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x1F
   619  000020                     	ds	1
   620  000021                     verificaCRCBUFFCOM@CRC_OK:
   621                           	opt stack 0
   622  000021                     sprintf@flag:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x20
   626  000021                     	ds	1
   627  000022                     calculaCRCBUFFRESP@crc1:
   628                           	opt stack 0
   629  000022                     sprintf@prec:
   630                           	opt stack 0
   631  000022                     verificaCRCBUFFCOM@crc:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x21
   635  000022                     	ds	1
   636  000023                     calculaCRCBUFFRESP@crc2:
   637                           	opt stack 0
   638  000023                     sprintf@val:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x22
   642  000023                     	ds	1
   643  000024                     calculaCRCBUFFRESP@crc:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x23
   647  000024                     	ds	1
   648  000025                     sprintf@c:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x24
   652  000025                     	ds	1
   653  000026                     ??_troca_telas:
   654  000026                     ??_trata_despertador:
   655  000026                     ??_trataComando:
   656                           
   657                           ; 1 bytes @ 0x25
   658  000026                     	ds	2
   659  000028                     trataComando@iterator:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x27
   663  000028                     	ds	2
   664  00002A                     tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           ; 1 bytes @ 0x29
   674 ;;
   675 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   676 ;;
   677 ;; *************** function _main *****************
   678 ;; Defined at:
   679 ;;		line 319 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   693 ;;      Params:         0       0       0       0       0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0
   696 ;;      Totals:         0       0       0       0       0       0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels required when called:    8
   699 ;; This function calls:
   700 ;;		_despertar
   701 ;;		_init_XLCD
   702 ;;		_maquinaEstado
   703 ;;		_telas
   704 ;;		_trata_data
   705 ;;		_trata_despertador
   706 ;;		_trata_hora
   707 ;;		_troca_telas
   708 ;; This function is called by:
   709 ;;		Startup code after reset
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text0
   714  000DB2                     __ptext0:
   715                           	opt stack 0
   716  000DB2                     _main:
   717                           	opt stack 23
   718                           
   719                           ;main.c: 320: T0CONbits.TMR0ON = 0;
   720                           
   721                           ;incstack = 0
   722  000DB2  9ED5               	bcf	4053,7,c	;volatile
   723                           
   724                           ;main.c: 321: INTCONbits.TMR0IE = 1;
   725  000DB4  8AF2               	bsf	intcon,5,c	;volatile
   726                           
   727                           ;main.c: 322: INTCONbits.TMR0IF = 0;
   728  000DB6  94F2               	bcf	intcon,2,c	;volatile
   729                           
   730                           ;main.c: 323: T0CONbits.T08BIT = 0;
   731  000DB8  9CD5               	bcf	4053,6,c	;volatile
   732                           
   733                           ;main.c: 324: T0CONbits.PSA = 0;
   734  000DBA  96D5               	bcf	4053,3,c	;volatile
   735                           
   736                           ;main.c: 326: T0CONbits.T0PS0 = 1;
   737  000DBC  80D5               	bsf	4053,0,c	;volatile
   738                           
   739                           ;main.c: 327: T0CONbits.T0PS1 = 1;
   740  000DBE  82D5               	bsf	4053,1,c	;volatile
   741                           
   742                           ;main.c: 328: T0CONbits.T0PS2 = 0;
   743  000DC0  94D5               	bcf	4053,2,c	;volatile
   744                           
   745                           ;main.c: 330: T0CONbits.T0CS = 0;
   746  000DC2  9AD5               	bcf	4053,5,c	;volatile
   747                           
   748                           ;main.c: 331: TMR0 = 32768;
   749  000DC4  0E80               	movlw	128
   750  000DC6  6ED7               	movwf	4055,c	;volatile
   751  000DC8  0E00               	movlw	0
   752  000DCA  6ED6               	movwf	4054,c	;volatile
   753                           
   754                           ;main.c: 332: T0CONbits.TMR0ON = 1;
   755  000DCC  8ED5               	bsf	4053,7,c	;volatile
   756                           
   757                           ;main.c: 333: INTCONbits.GIEH = 1;
   758  000DCE  8EF2               	bsf	intcon,7,c	;volatile
   759                           
   760                           ;main.c: 334: INTCONbits.GIEL = 1;
   761  000DD0  8CF2               	bsf	intcon,6,c	;volatile
   762                           
   763                           ;main.c: 337: TRISA = 0x00000000;
   764  000DD2  0E00               	movlw	0
   765  000DD4  6E92               	movwf	3986,c	;volatile
   766                           
   767                           ;main.c: 338: init_XLCD();
   768  000DD6  EC17  F00A         	call	_init_XLCD	;wreg free
   769                           
   770                           ;main.c: 340: SPBRG = (((48000000/64)/9600)-1);
   771  000DDA  0E4D               	movlw	77
   772  000DDC  6EAF               	movwf	4015,c	;volatile
   773                           
   774                           ;main.c: 344: RCSTA = 0b10010000;
   775  000DDE  0E90               	movlw	144
   776  000DE0  6EAB               	movwf	4011,c	;volatile
   777                           
   778                           ;main.c: 345: TXSTA = 0b00100000;
   779  000DE2  0E20               	movlw	32
   780  000DE4  6EAC               	movwf	4012,c	;volatile
   781                           
   782                           ;main.c: 346: TRISCbits.RC6 = 0;
   783  000DE6  9C94               	bcf	3988,6,c	;volatile
   784                           
   785                           ;main.c: 347: TRISCbits.RC7 = 1;
   786  000DE8  8E94               	bsf	3988,7,c	;volatile
   787                           
   788                           ;main.c: 349: RCIF = 0;
   789  000DEA  9A9E               	bcf	3998,5,c	;volatile
   790                           
   791                           ;main.c: 350: RCIP = 0;
   792  000DEC  9A9F               	bcf	3999,5,c	;volatile
   793                           
   794                           ;main.c: 351: RCIE = 1;
   795  000DEE  8A9D               	bsf	3997,5,c	;volatile
   796                           
   797                           ;main.c: 352: PEIE = 1;
   798  000DF0  8CF2               	bsf	intcon,6,c	;volatile
   799                           
   800                           ;main.c: 357: horaAtual.h = 0x0;
   801  000DF2  0E00               	movlw	0
   802  000DF4  6E2E               	movwf	_horaAtual,c
   803                           
   804                           ;main.c: 358: horaAtual.m = 0x0;
   805  000DF6  0E00               	movlw	0
   806  000DF8  6E2F               	movwf	_horaAtual+1,c
   807                           
   808                           ;main.c: 359: horaAtual.s = 0x0;
   809  000DFA  0E00               	movlw	0
   810  000DFC  6E30               	movwf	_horaAtual+2,c
   811  000DFE                     l2733:
   812                           
   813                           ;main.c: 361: if(contador_um_segundo == 1){
   814  000DFE  043A               	decf	_contador_um_segundo,w,c
   815  000E00  A4D8               	btfss	status,2,c
   816  000E02  D00D               	goto	l2747
   817                           
   818                           ;main.c: 362: contador_um_segundo = 0;
   819  000E04  0E00               	movlw	0
   820  000E06  6E3A               	movwf	_contador_um_segundo,c
   821                           
   822                           ;main.c: 363: trata_hora();
   823  000E08  ECF8  F009         	call	_trata_hora	;wreg free
   824                           
   825                           ;main.c: 364: trata_data();
   826  000E0C  EC1F  F008         	call	_trata_data	;wreg free
   827                           
   828                           ;main.c: 365: despertar();
   829  000E10  ECE4  F009         	call	_despertar	;wreg free
   830                           
   831                           ;main.c: 366: telas(0);
   832  000E14  0E00               	movlw	0
   833  000E16  EC48  F009         	call	_telas
   834                           
   835                           ;main.c: 367: maquinaEstado();
   836  000E1A  ECC3  F008         	call	_maquinaEstado	;wreg free
   837  000E1E                     l2747:
   838                           
   839                           ;main.c: 368: }
   840                           ;main.c: 369: if(tela_atual == 2){
   841  000E1E  0E02               	movlw	2
   842  000E20  184B               	xorwf	_tela_atual,w,c
   843  000E22  B4D8               	btfsc	status,2,c
   844                           
   845                           ;main.c: 370: trata_despertador();
   846  000E24  EC54  F007         	call	_trata_despertador	;wreg free
   847                           
   848                           ;main.c: 371: }
   849                           ;main.c: 372: troca_telas();
   850  000E28  ECD0  F009         	call	_troca_telas	;wreg free
   851  000E2C  D7E8               	goto	l2733
   852  000E2E                     __end_of_main:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           intcon	equ	0xFF2
   859                           postinc0	equ	0xFEE
   860                           wreg	equ	0xFE8
   861                           postdec1	equ	0xFE5
   862                           fsr1l	equ	0xFE1
   863                           status	equ	0xFD8
   864                           
   865 ;; *************** function _troca_telas *****************
   866 ;; Defined at:
   867 ;;		line 189 in file "main.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   881 ;;      Params:         0       0       0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0
   883 ;;      Temps:          2       0       0       0       0       0       0       0       0
   884 ;;      Totals:         2       0       0       0       0       0       0       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    7
   888 ;; This function calls:
   889 ;;		_telas
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text1
   896  0013A0                     __ptext1:
   897                           	opt stack 0
   898  0013A0                     _troca_telas:
   899                           	opt stack 23
   900                           
   901                           ;main.c: 190: if(PORTDbits.RD0){
   902                           
   903                           ;incstack = 0
   904  0013A0  A083               	btfss	3971,0,c	;volatile
   905  0013A2  0012               	return	
   906                           
   907                           ;main.c: 191: _delay((unsigned long)((150)*(48000000/4000.0)));
   908  0013A4  0E0A               	movlw	10
   909  0013A6  6E27               	movwf	(??_troca_telas+1)& (0+255),c
   910  0013A8  0E22               	movlw	34
   911  0013AA  6E26               	movwf	??_troca_telas& (0+255),c
   912  0013AC  0EA1               	movlw	161
   913  0013AE                     u1887:
   914  0013AE  2EE8               	decfsz	wreg,f,c
   915  0013B0  D7FE               	bra	u1887
   916  0013B2  2E26               	decfsz	??_troca_telas& (0+255),f,c
   917  0013B4  D7FC               	bra	u1887
   918  0013B6  2E27               	decfsz	(??_troca_telas+1)& (0+255),f,c
   919  0013B8  D7FA               	bra	u1887
   920  0013BA  F000               	nop	
   921                           
   922                           ;main.c: 192: telas(1);
   923  0013BC  0E01               	movlw	1
   924  0013BE  EC48  F009         	call	_telas
   925  0013C2                     l150:
   926  0013C2  A083               	btfss	3971,0,c	;volatile
   927  0013C4  0012               	return	
   928  0013C6  D7FD               	goto	l150
   929  0013C8                     __end_of_troca_telas:
   930                           	opt stack 0
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           intcon	equ	0xFF2
   936                           postinc0	equ	0xFEE
   937                           wreg	equ	0xFE8
   938                           postdec1	equ	0xFE5
   939                           fsr1l	equ	0xFE1
   940                           status	equ	0xFD8
   941                           
   942 ;; *************** function _trata_hora *****************
   943 ;; Defined at:
   944 ;;		line 247 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         0       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         0       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text2
   973  0013F0                     __ptext2:
   974                           	opt stack 0
   975  0013F0                     _trata_hora:
   976                           	opt stack 29
   977                           
   978                           ;main.c: 248: if((horaAtual.s) == 60){
   979                           
   980                           ;incstack = 0
   981  0013F0  0E3C               	movlw	60
   982  0013F2  1830               	xorwf	_horaAtual+2,w,c
   983  0013F4  A4D8               	btfss	status,2,c
   984  0013F6  D004               	goto	l1613
   985                           
   986                           ;main.c: 249: horaAtual.m += 1;
   987  0013F8  2A2F               	incf	_horaAtual+1,f,c
   988                           
   989                           ;main.c: 250: horaAtual.s = 0;
   990  0013FA  0E00               	movlw	0
   991  0013FC  6E30               	movwf	_horaAtual+2,c
   992                           
   993                           ;main.c: 251: return;
   994  0013FE  0012               	return	
   995  001400                     l1613:
   996                           
   997                           ;main.c: 252: }
   998                           ;main.c: 253: if((horaAtual.m) == 60){
   999  001400  0E3C               	movlw	60
  1000  001402  182F               	xorwf	_horaAtual+1,w,c
  1001  001404  A4D8               	btfss	status,2,c
  1002  001406  0012               	return	
  1003                           
  1004                           ;main.c: 254: horaAtual.h+=1;
  1005  001408  2A2E               	incf	_horaAtual,f,c
  1006                           
  1007                           ;main.c: 255: horaAtual.m = 0;
  1008  00140A  0E00               	movlw	0
  1009  00140C  6E2F               	movwf	_horaAtual+1,c
  1010                           
  1011                           ;main.c: 256: return;
  1012  00140E  0012               	return	
  1013  001410                     __end_of_trata_hora:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           intcon	equ	0xFF2
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1l	equ	0xFE1
  1024                           status	equ	0xFD8
  1025                           
  1026 ;; *************** function _trata_despertador *****************
  1027 ;; Defined at:
  1028 ;;		line 197 in file "main.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        2 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    7
  1049 ;; This function calls:
  1050 ;;		_telas
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text3
  1057  000EA8                     __ptext3:
  1058                           	opt stack 0
  1059  000EA8                     _trata_despertador:
  1060                           	opt stack 23
  1061                           
  1062                           ;main.c: 198: if(PORTDbits.RD1){
  1063                           
  1064                           ;incstack = 0
  1065  000EA8  A283               	btfss	3971,1,c	;volatile
  1066  000EAA  D01B               	goto	l156
  1067                           
  1068                           ;main.c: 199: _delay((unsigned long)((150)*(48000000/4000.0)));
  1069  000EAC  0E0A               	movlw	10
  1070  000EAE  6E27               	movwf	(??_trata_despertador+1)& (0+255),c
  1071  000EB0  0E22               	movlw	34
  1072  000EB2  6E26               	movwf	??_trata_despertador& (0+255),c
  1073  000EB4  0EA1               	movlw	161
  1074  000EB6                     u1897:
  1075  000EB6  2EE8               	decfsz	wreg,f,c
  1076  000EB8  D7FE               	bra	u1897
  1077  000EBA  2E26               	decfsz	??_trata_despertador& (0+255),f,c
  1078  000EBC  D7FC               	bra	u1897
  1079  000EBE  2E27               	decfsz	(??_trata_despertador+1)& (0+255),f,c
  1080  000EC0  D7FA               	bra	u1897
  1081  000EC2  F000               	nop	
  1082                           
  1083                           ;main.c: 200: if(desp_hora == 24){
  1084  000EC4  0E18               	movlw	24
  1085  000EC6  1848               	xorwf	_desp_hora,w,c
  1086  000EC8  A4D8               	btfss	status,2,c
  1087  000ECA  D003               	goto	l2651
  1088                           
  1089                           ;main.c: 201: desp_hora = 0;
  1090  000ECC  0E00               	movlw	0
  1091  000ECE  6E48               	movwf	_desp_hora,c
  1092                           
  1093                           ;main.c: 202: }else{
  1094  000ED0  D001               	goto	l2653
  1095  000ED2                     l2651:
  1096                           
  1097                           ;main.c: 203: desp_hora+=1;
  1098  000ED2  2A48               	incf	_desp_hora,f,c
  1099  000ED4                     l2653:
  1100                           
  1101                           ;main.c: 204: }
  1102                           ;main.c: 205: despertou = 0;
  1103  000ED4  0E00               	movlw	0
  1104  000ED6  6E38               	movwf	_despertou,c
  1105                           
  1106                           ;main.c: 206: telas(0);
  1107  000ED8  0E00               	movlw	0
  1108  000EDA  EC48  F009         	call	_telas
  1109  000EDE                     l159:
  1110  000EDE  B283               	btfsc	3971,1,c	;volatile
  1111  000EE0  D7FE               	goto	l159
  1112  000EE2                     l156:
  1113                           
  1114                           ;main.c: 208: }
  1115                           ;main.c: 209: if(PORTDbits.RD2){
  1116  000EE2  A483               	btfss	3971,2,c	;volatile
  1117  000EE4  0012               	return	
  1118                           
  1119                           ;main.c: 210: _delay((unsigned long)((150)*(48000000/4000.0)));
  1120  000EE6  0E0A               	movlw	10
  1121  000EE8  6E27               	movwf	(??_trata_despertador+1)& (0+255),c
  1122  000EEA  0E22               	movlw	34
  1123  000EEC  6E26               	movwf	??_trata_despertador& (0+255),c
  1124  000EEE  0EA1               	movlw	161
  1125  000EF0                     u1907:
  1126  000EF0  2EE8               	decfsz	wreg,f,c
  1127  000EF2  D7FE               	bra	u1907
  1128  000EF4  2E26               	decfsz	??_trata_despertador& (0+255),f,c
  1129  000EF6  D7FC               	bra	u1907
  1130  000EF8  2E27               	decfsz	(??_trata_despertador+1)& (0+255),f,c
  1131  000EFA  D7FA               	bra	u1907
  1132  000EFC  F000               	nop	
  1133                           
  1134                           ;main.c: 211: if(desp_min == 60){
  1135  000EFE  0E3C               	movlw	60
  1136  000F00  1847               	xorwf	_desp_min,w,c
  1137  000F02  A4D8               	btfss	status,2,c
  1138  000F04  D003               	goto	l2663
  1139                           
  1140                           ;main.c: 212: desp_min = 0;
  1141  000F06  0E00               	movlw	0
  1142  000F08  6E47               	movwf	_desp_min,c
  1143                           
  1144                           ;main.c: 213: }else{
  1145  000F0A  D001               	goto	l2665
  1146  000F0C                     l2663:
  1147                           
  1148                           ;main.c: 214: desp_min+=1;
  1149  000F0C  2A47               	incf	_desp_min,f,c
  1150  000F0E                     l2665:
  1151                           
  1152                           ;main.c: 215: }
  1153                           ;main.c: 216: despertou = 0;
  1154  000F0E  0E00               	movlw	0
  1155  000F10  6E38               	movwf	_despertou,c
  1156                           
  1157                           ;main.c: 217: telas(0);
  1158  000F12  0E00               	movlw	0
  1159  000F14  EC48  F009         	call	_telas
  1160  000F18                     l165:
  1161  000F18  A483               	btfss	3971,2,c	;volatile
  1162  000F1A  0012               	return	
  1163  000F1C  D7FD               	goto	l165
  1164  000F1E                     __end_of_trata_despertador:
  1165                           	opt stack 0
  1166                           tblptru	equ	0xFF8
  1167                           tblptrh	equ	0xFF7
  1168                           tblptrl	equ	0xFF6
  1169                           tablat	equ	0xFF5
  1170                           intcon	equ	0xFF2
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           fsr1l	equ	0xFE1
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function _telas *****************
  1178 ;; Defined at:
  1179 ;;		line 176 in file "main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  troca_tela      1    wreg     unsigned char 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  troca_tela      1    0[COMRAM] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    6
  1200 ;; This function calls:
  1201 ;;		_telaConfiguracaoDia
  1202 ;;		_telaConfiguracaoHora
  1203 ;;		_telaInicial
  1204 ;; This function is called by:
  1205 ;;		_troca_telas
  1206 ;;		_trata_despertador
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text4
  1212  001290                     __ptext4:
  1213                           	opt stack 0
  1214  001290                     _telas:
  1215                           	opt stack 23
  1216                           
  1217                           ;main.c: 177: if(tela_atual == 1){
  1218                           
  1219                           ;incstack = 0
  1220  001290  044B               	decf	_tela_atual,w,c
  1221  001292  A4D8               	btfss	status,2,c
  1222  001294  D009               	goto	l2625
  1223                           
  1224                           ;main.c: 178: if (funcao == 0){
  1225  001296  5033               	movf	_funcao,w,c
  1226  001298  1034               	iorwf	_funcao+1,w,c
  1227  00129A  A4D8               	btfss	status,2,c
  1228  00129C  D003               	goto	l2623
  1229                           
  1230                           ;main.c: 179: telaConfiguracaoDia();
  1231  00129E  ECB7  F009         	call	_telaConfiguracaoDia	;wreg free
  1232                           
  1233                           ;main.c: 180: } else {
  1234  0012A2  D002               	goto	l2625
  1235  0012A4                     l2623:
  1236                           
  1237                           ;main.c: 181: telaConfiguracaoHora();
  1238  0012A4  EC9E  F009         	call	_telaConfiguracaoHora	;wreg free
  1239  0012A8                     l2625:
  1240                           
  1241                           ;main.c: 182: }
  1242                           ;main.c: 183: }
  1243                           ;main.c: 184: if(tela_atual == 2) telaInicial();
  1244  0012A8  0E02               	movlw	2
  1245  0012AA  184B               	xorwf	_tela_atual,w,c
  1246  0012AC  B4D8               	btfsc	status,2,c
  1247  0012AE  EC8C  F006         	call	_telaInicial	;wreg free
  1248                           
  1249                           ;main.c: 185: if(tela_atual == 3) telaConfiguracaoHora();
  1250  0012B2  0E03               	movlw	3
  1251  0012B4  184B               	xorwf	_tela_atual,w,c
  1252  0012B6  B4D8               	btfsc	status,2,c
  1253  0012B8  EC9E  F009         	call	_telaConfiguracaoHora	;wreg free
  1254                           
  1255                           ;main.c: 186: if(tela_atual == 4) telaConfiguracaoHora();
  1256  0012BC  0E04               	movlw	4
  1257  0012BE  184B               	xorwf	_tela_atual,w,c
  1258  0012C0  A4D8               	btfss	status,2,c
  1259  0012C2  0012               	return	
  1260  0012C4  EC9E  F009         	call	_telaConfiguracaoHora	;wreg free
  1261  0012C8  0012               	return	
  1262  0012CA                     __end_of_telas:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           intcon	equ	0xFF2
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           postdec1	equ	0xFE5
  1272                           fsr1l	equ	0xFE1
  1273                           status	equ	0xFD8
  1274                           
  1275 ;; *************** function _telaInicial *****************
  1276 ;; Defined at:
  1277 ;;		line 155 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1294 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1295 ;;Total ram usage:        0 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    5
  1298 ;; This function calls:
  1299 ;;		_SetDDRamAddr
  1300 ;;		_putrsXLCD
  1301 ;;		_sprintf
  1302 ;; This function is called by:
  1303 ;;		_telas
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text5
  1308  000D18                     __ptext5:
  1309                           	opt stack 0
  1310  000D18                     _telaInicial:
  1311                           	opt stack 23
  1312                           
  1313                           ;main.c: 156: SetDDRamAddr(0x00);
  1314                           
  1315                           ;incstack = 0
  1316  000D18  0E00               	movlw	0
  1317  000D1A  EC73  F008         	call	_SetDDRamAddr
  1318                           
  1319                           ;main.c: 157: sprintf(buffer, "%d %d %d %d %d %d %d", semanaPrint[0], semanaPrint[1], se
      +                          manaPrint[2], semanaPrint[3], semanaPrint[4], semanaPrint[5], semanaPrint[6]);
  1320  000D1E  0E6E               	movlw	low _buffer
  1321  000D20  0100               	movlb	0	; () banked
  1322  000D22  6F85               	movwf	sprintf@sp& (0+255),b
  1323  000D24  0E00               	movlw	high _buffer
  1324  000D26  0100               	movlb	0	; () banked
  1325  000D28  6F86               	movwf	(sprintf@sp+1)& (0+255),b
  1326  000D2A  0E0B               	movlw	low STR_9
  1327  000D2C  0100               	movlb	0	; () banked
  1328  000D2E  6F87               	movwf	sprintf@f& (0+255),b
  1329  000D30  0E08               	movlw	high STR_9
  1330  000D32  0100               	movlb	0	; () banked
  1331  000D34  6F88               	movwf	(sprintf@f+1)& (0+255),b
  1332  000D36  C097  F089         	movff	_semanaPrint,?_sprintf+4
  1333  000D3A  0100               	movlb	0	; () banked
  1334  000D3C  6B8A               	clrf	(?_sprintf+5)& (0+255),b
  1335  000D3E  C098  F08B         	movff	_semanaPrint+1,?_sprintf+6
  1336  000D42  0100               	movlb	0	; () banked
  1337  000D44  6B8C               	clrf	(?_sprintf+7)& (0+255),b
  1338  000D46  C099  F08D         	movff	_semanaPrint+2,?_sprintf+8
  1339  000D4A  0100               	movlb	0	; () banked
  1340  000D4C  6B8E               	clrf	(?_sprintf+9)& (0+255),b
  1341  000D4E  C09A  F08F         	movff	_semanaPrint+3,?_sprintf+10
  1342  000D52  0100               	movlb	0	; () banked
  1343  000D54  6B90               	clrf	(?_sprintf+11)& (0+255),b
  1344  000D56  C09B  F091         	movff	_semanaPrint+4,?_sprintf+12
  1345  000D5A  0100               	movlb	0	; () banked
  1346  000D5C  6B92               	clrf	(?_sprintf+13)& (0+255),b
  1347  000D5E  C09C  F093         	movff	_semanaPrint+5,?_sprintf+14
  1348  000D62  0100               	movlb	0	; () banked
  1349  000D64  6B94               	clrf	(?_sprintf+15)& (0+255),b
  1350  000D66  C09D  F095         	movff	_semanaPrint+6,?_sprintf+16
  1351  000D6A  0100               	movlb	0	; () banked
  1352  000D6C  6B96               	clrf	(?_sprintf+17)& (0+255),b
  1353  000D6E  EC20  F005         	call	_sprintf	;wreg free
  1354                           
  1355                           ;main.c: 158: SetDDRamAddr(0x40);
  1356  000D72  0E40               	movlw	64
  1357  000D74  EC73  F008         	call	_SetDDRamAddr
  1358                           
  1359                           ;main.c: 159: sprintf(buffer, "%d:%d", versao, revisao);
  1360  000D78  0E6E               	movlw	low _buffer
  1361  000D7A  0100               	movlb	0	; () banked
  1362  000D7C  6F85               	movwf	sprintf@sp& (0+255),b
  1363  000D7E  0E00               	movlw	high _buffer
  1364  000D80  0100               	movlb	0	; () banked
  1365  000D82  6F86               	movwf	(sprintf@sp+1)& (0+255),b
  1366  000D84  0E47               	movlw	low (STR_2+3)
  1367  000D86  0100               	movlb	0	; () banked
  1368  000D88  6F87               	movwf	sprintf@f& (0+255),b
  1369  000D8A  0E08               	movlw	high (STR_2+3)
  1370  000D8C  0100               	movlb	0	; () banked
  1371  000D8E  6F88               	movwf	(sprintf@f+1)& (0+255),b
  1372  000D90  C04D  F089         	movff	_versao,?_sprintf+4
  1373  000D94  0100               	movlb	0	; () banked
  1374  000D96  6B8A               	clrf	(?_sprintf+5)& (0+255),b
  1375  000D98  C04C  F08B         	movff	_revisao,?_sprintf+6
  1376  000D9C  0100               	movlb	0	; () banked
  1377  000D9E  6B8C               	clrf	(?_sprintf+7)& (0+255),b
  1378  000DA0  EC20  F005         	call	_sprintf	;wreg free
  1379                           
  1380                           ;main.c: 160: putrsXLCD(buffer);
  1381  000DA4  0E6E               	movlw	low _buffer
  1382  000DA6  6E14               	movwf	putrsXLCD@buffer,c
  1383  000DA8  0E00               	movlw	high _buffer
  1384  000DAA  6E15               	movwf	putrsXLCD@buffer+1,c
  1385  000DAC  ECF1  F007         	call	_putrsXLCD	;wreg free
  1386  000DB0  0012               	return	
  1387  000DB2                     __end_of_telaInicial:
  1388                           	opt stack 0
  1389                           tblptru	equ	0xFF8
  1390                           tblptrh	equ	0xFF7
  1391                           tblptrl	equ	0xFF6
  1392                           tablat	equ	0xFF5
  1393                           intcon	equ	0xFF2
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _sprintf *****************
  1401 ;; Defined at:
  1402 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  1405 ;;		 -> buffer(16), 
  1406 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1407 ;;		 -> STR_12(5), STR_10(6), STR_9(21), STR_4(9), 
  1408 ;;		 -> STR_2(9), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  tmpval          4    0        struct .
  1411 ;;  cp              3    0        PTR const unsigned char 
  1412 ;;  val             2   34[COMRAM] unsigned int 
  1413 ;;  ap              2   30[COMRAM] PTR void [1]
  1414 ;;		 -> ?_sprintf(2), 
  1415 ;;  len             2    0        unsigned int 
  1416 ;;  c               1   36[COMRAM] char 
  1417 ;;  prec            1   33[COMRAM] char 
  1418 ;;  flag            1   32[COMRAM] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    0[BANK0 ] int 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         0      18       0       0       0       0       0       0       0
  1429 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1431 ;;      Totals:         8      18       0       0       0       0       0       0       0
  1432 ;;Total ram usage:       26 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    2
  1435 ;; This function calls:
  1436 ;;		___lwdiv
  1437 ;;		___lwmod
  1438 ;; This function is called by:
  1439 ;;		_telaInicial
  1440 ;;		_tela_1
  1441 ;;		_tela_4
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text6
  1446  000A40                     __ptext6:
  1447                           	opt stack 0
  1448  000A40                     _sprintf:
  1449                           	opt stack 25
  1450                           
  1451                           ;doprnt.c: 494: va_list ap;
  1452                           ;doprnt.c: 499: signed char c;
  1453                           ;doprnt.c: 506: signed char prec;
  1454                           ;doprnt.c: 508: unsigned char flag;
  1455                           ;doprnt.c: 523: union {
  1456                           ;doprnt.c: 524: unsigned long vd;
  1457                           ;doprnt.c: 525: double integ;
  1458                           ;doprnt.c: 526: } tmpval;
  1459                           ;doprnt.c: 528: unsigned int val;
  1460                           ;doprnt.c: 529: unsigned len;
  1461                           ;doprnt.c: 530: const char * cp;
  1462                           ;doprnt.c: 533: *ap = __va_start();
  1463                           
  1464                           ;incstack = 0
  1465  000A40  0E89               	movlw	low (?_sprintf+4)
  1466  000A42  6E1F               	movwf	sprintf@ap,c
  1467  000A44  0E00               	movlw	high (?_sprintf+4)
  1468  000A46  6E20               	movwf	sprintf@ap+1,c
  1469                           
  1470                           ;doprnt.c: 536: while(c = *f++) {
  1471  000A48  D097               	goto	l2601
  1472  000A4A                     l2549:
  1473                           
  1474                           ;doprnt.c: 538: if(c != '%')
  1475  000A4A  0E25               	movlw	37
  1476  000A4C  1825               	xorwf	sprintf@c,w,c
  1477  000A4E  B4D8               	btfsc	status,2,c
  1478  000A50  D00A               	goto	l2555
  1479                           
  1480                           ;doprnt.c: 540: {
  1481                           ;doprnt.c: 541: ((*sp++ = (c)));
  1482  000A52  C085  FFD9         	movff	sprintf@sp,fsr2l
  1483  000A56  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  1484  000A5A  C025  FFDF         	movff	sprintf@c,indf2
  1485  000A5E  0100               	movlb	0	; () banked
  1486  000A60  4B85               	infsnz	sprintf@sp& (0+255),f,b
  1487  000A62  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  1488                           
  1489                           ;doprnt.c: 542: continue;
  1490  000A64  D089               	goto	l2601
  1491  000A66                     l2555:
  1492                           
  1493                           ;doprnt.c: 543: }
  1494                           ;doprnt.c: 548: flag = 0;
  1495  000A66  0E00               	movlw	0
  1496  000A68  6E21               	movwf	sprintf@flag,c
  1497                           
  1498                           ;doprnt.c: 822: }
  1499                           
  1500                           ;doprnt.c: 813: continue;
  1501                           
  1502                           ;doprnt.c: 802: default:
  1503                           
  1504                           ;doprnt.c: 698: case 'i':
  1505                           ;doprnt.c: 699: break;
  1506                           
  1507                           ;doprnt.c: 697: case 'd':
  1508                           
  1509                           ;doprnt.c: 638: goto alldone;
  1510                           
  1511                           ;doprnt.c: 637: case 0:
  1512                           
  1513                           ;doprnt.c: 635: switch(c = *f++) {
  1514  000A6A  C087  FFF6         	movff	sprintf@f,tblptrl
  1515  000A6E  C088  FFF7         	movff	sprintf@f+1,tblptrh
  1516  000A72  0100               	movlb	0	; () banked
  1517  000A74  4B87               	infsnz	sprintf@f& (0+255),f,b
  1518  000A76  2B88               	incf	(sprintf@f+1)& (0+255),f,b
  1519  000A78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1520  000A78  6AF8               	clrf	tblptru,c
  1521  000A7A                     	endif
  1522  000A7A                     	if	0	;tblptru may be non-zero
  1523  000A7A                     	endif
  1524  000A7A  0008               	tblrd		*
  1525  000A7C  CFF5 F025          	movff	tablat,sprintf@c
  1526  000A80  5025               	movf	sprintf@c,w,c
  1527                           
  1528                           ; Switch size 1, requested type "space"
  1529                           ; Number of cases is 3, Range of values is 0 to 105
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte           10     6 (average)
  1533                           ;	Chosen strategy is simple_byte
  1534  000A82  0A00               	xorlw	0	; case 0
  1535  000A84  B4D8               	btfsc	status,2,c
  1536  000A86  D086               	goto	l2603
  1537  000A88  0A64               	xorlw	100	; case 100
  1538  000A8A  B4D8               	btfsc	status,2,c
  1539  000A8C  D003               	goto	l2561
  1540  000A8E  0A0D               	xorlw	13	; case 105
  1541  000A90  A4D8               	btfss	status,2,c
  1542  000A92  D072               	goto	l2601
  1543  000A94                     l2561:
  1544                           
  1545                           ;doprnt.c: 1253: {
  1546                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1547  000A94  C01F  FFD9         	movff	sprintf@ap,fsr2l
  1548  000A98  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  1549  000A9C  CFDE F023          	movff	postinc2,sprintf@val
  1550  000AA0  CFDD F024          	movff	postdec2,sprintf@val+1
  1551  000AA4  0E02               	movlw	2
  1552  000AA6  261F               	addwf	sprintf@ap,f,c
  1553  000AA8  0E00               	movlw	0
  1554  000AAA  2220               	addwfc	sprintf@ap+1,f,c
  1555                           
  1556                           ;doprnt.c: 1261: if((int)val < 0) {
  1557  000AAC  AE24               	btfss	sprintf@val+1,7,c
  1558  000AAE  D006               	goto	l2571
  1559                           
  1560                           ;doprnt.c: 1262: flag |= 0x03;
  1561  000AB0  0E03               	movlw	3
  1562  000AB2  1221               	iorwf	sprintf@flag,f,c
  1563                           
  1564                           ;doprnt.c: 1263: val = -val;
  1565  000AB4  6C23               	negf	sprintf@val,c
  1566  000AB6  1E24               	comf	sprintf@val+1,f,c
  1567  000AB8  B0D8               	btfsc	status,0,c
  1568  000ABA  2A24               	incf	sprintf@val+1,f,c
  1569  000ABC                     l2571:
  1570                           
  1571                           ;doprnt.c: 1264: }
  1572                           ;doprnt.c: 1266: }
  1573                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1574  000ABC  0E01               	movlw	1
  1575  000ABE  6E25               	movwf	sprintf@c,c
  1576  000AC0                     l2573:
  1577  000AC0  0E05               	movlw	5
  1578  000AC2  1825               	xorwf	sprintf@c,w,c
  1579  000AC4  B4D8               	btfsc	status,2,c
  1580  000AC6  D015               	goto	l2585
  1581                           
  1582                           ;doprnt.c: 1306: if(val < dpowers[c])
  1583  000AC8  5025               	movf	sprintf@c,w,c
  1584  000ACA  0D02               	mullw	2
  1585  000ACC  0E01               	movlw	low _dpowers
  1586  000ACE  24F3               	addwf	prodl,w,c
  1587  000AD0  6EF6               	movwf	tblptrl,c
  1588  000AD2  0E08               	movlw	high _dpowers
  1589  000AD4  20F4               	addwfc	prodh,w,c
  1590  000AD6  6EF7               	movwf	tblptrh,c
  1591  000AD8                     	if	1	;There are 3 active tblptr bytes
  1592  000AD8  6AF8               	clrf	tblptru,c
  1593  000ADA  0E00               	movlw	low (__mediumconst shr (0+16))
  1594  000ADC  22F8               	addwfc	tblptru,f,c
  1595  000ADE                     	endif
  1596  000ADE  0009               	tblrd		*+
  1597  000AE0  50F5               	movf	tablat,w,c
  1598  000AE2  5C23               	subwf	sprintf@val,w,c
  1599  000AE4  0009               	tblrd		*+
  1600  000AE6  50F5               	movf	tablat,w,c
  1601  000AE8  5824               	subwfb	sprintf@val+1,w,c
  1602  000AEA  A0D8               	btfss	status,0,c
  1603  000AEC  D002               	goto	l2585
  1604                           
  1605                           ;doprnt.c: 1307: break;
  1606  000AEE  2A25               	incf	sprintf@c,f,c
  1607  000AF0  D7E7               	goto	l2573
  1608  000AF2                     l2585:
  1609                           
  1610                           ;doprnt.c: 1422: {
  1611                           ;doprnt.c: 1438: if(flag & 0x03)
  1612  000AF2  C021  F01E         	movff	sprintf@flag,??_sprintf
  1613  000AF6  0E03               	movlw	3
  1614  000AF8  161E               	andwf	??_sprintf,f,c
  1615  000AFA  B4D8               	btfsc	status,2,c
  1616  000AFC  D009               	goto	l2591
  1617                           
  1618                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1619  000AFE  C085  FFD9         	movff	sprintf@sp,fsr2l
  1620  000B02  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  1621  000B06  0E2D               	movlw	45
  1622  000B08  6EDF               	movwf	indf2,c
  1623  000B0A  0100               	movlb	0	; () banked
  1624  000B0C  4B85               	infsnz	sprintf@sp& (0+255),f,b
  1625  000B0E  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  1626  000B10                     l2591:
  1627                           
  1628                           ;doprnt.c: 1469: }
  1629                           ;doprnt.c: 1472: prec = c;
  1630  000B10  C025  F022         	movff	sprintf@c,sprintf@prec
  1631                           
  1632                           ;doprnt.c: 1474: while(prec--) {
  1633  000B14  D02D               	goto	l2599
  1634  000B16                     l2593:
  1635                           
  1636                           ;doprnt.c: 1478: {
  1637                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1638  000B16  5022               	movf	sprintf@prec,w,c
  1639  000B18  0D02               	mullw	2
  1640  000B1A  0E01               	movlw	low _dpowers
  1641  000B1C  24F3               	addwf	prodl,w,c
  1642  000B1E  6EF6               	movwf	tblptrl,c
  1643  000B20  0E08               	movlw	high _dpowers
  1644  000B22  20F4               	addwfc	prodh,w,c
  1645  000B24  6EF7               	movwf	tblptrh,c
  1646  000B26                     	if	1	;There are 3 active tblptr bytes
  1647  000B26  6AF8               	clrf	tblptru,c
  1648  000B28  0E00               	movlw	low (__mediumconst shr (0+16))
  1649  000B2A  22F8               	addwfc	tblptru,f,c
  1650  000B2C                     	endif
  1651  000B2C  0009               	tblrd		*+
  1652  000B2E  CFF5 F014          	movff	tablat,___lwdiv@divisor
  1653  000B32  000A               	tblrd		*-
  1654  000B34  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  1655  000B38  C023  F012         	movff	sprintf@val,___lwdiv@dividend
  1656  000B3C  C024  F013         	movff	sprintf@val+1,___lwdiv@dividend+1
  1657  000B40  EC4A  F008         	call	___lwdiv	;wreg free
  1658  000B44  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  1659  000B48  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  1660  000B4C  0E00               	movlw	0
  1661  000B4E  6E1C               	movwf	___lwmod@divisor+1,c
  1662  000B50  0E0A               	movlw	10
  1663  000B52  6E1B               	movwf	___lwmod@divisor,c
  1664  000B54  ECE9  F008         	call	___lwmod	;wreg free
  1665  000B58  5019               	movf	?___lwmod,w,c
  1666  000B5A  0F30               	addlw	48
  1667  000B5C  6E25               	movwf	sprintf@c,c
  1668                           
  1669                           ;doprnt.c: 1523: }
  1670                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1671  000B5E  C085  FFD9         	movff	sprintf@sp,fsr2l
  1672  000B62  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  1673  000B66  C025  FFDF         	movff	sprintf@c,indf2
  1674  000B6A  0100               	movlb	0	; () banked
  1675  000B6C  4B85               	infsnz	sprintf@sp& (0+255),f,b
  1676  000B6E  2B86               	incf	(sprintf@sp+1)& (0+255),f,b
  1677  000B70                     l2599:
  1678  000B70  0622               	decf	sprintf@prec,f,c
  1679  000B72  2822               	incf	sprintf@prec,w,c
  1680  000B74  A4D8               	btfss	status,2,c
  1681  000B76  D7CF               	goto	l2593
  1682  000B78                     l2601:
  1683  000B78  C087  FFF6         	movff	sprintf@f,tblptrl
  1684  000B7C  C088  FFF7         	movff	sprintf@f+1,tblptrh
  1685  000B80  0100               	movlb	0	; () banked
  1686  000B82  4B87               	infsnz	sprintf@f& (0+255),f,b
  1687  000B84  2B88               	incf	(sprintf@f+1)& (0+255),f,b
  1688  000B86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1689  000B86  6AF8               	clrf	tblptru,c
  1690  000B88                     	endif
  1691  000B88                     	if	0	;tblptru may be non-zero
  1692  000B88                     	endif
  1693  000B88  0008               	tblrd		*
  1694  000B8A  CFF5 F025          	movff	tablat,sprintf@c
  1695  000B8E  5025               	movf	sprintf@c,w,c
  1696  000B90  A4D8               	btfss	status,2,c
  1697  000B92  D75B               	goto	l2549
  1698  000B94                     l2603:
  1699                           
  1700                           ;doprnt.c: 1538: *sp = 0;
  1701  000B94  C085  FFD9         	movff	sprintf@sp,fsr2l
  1702  000B98  C086  FFDA         	movff	sprintf@sp+1,fsr2h
  1703  000B9C  0E00               	movlw	0
  1704  000B9E  6EDF               	movwf	indf2,c
  1705  000BA0  0012               	return	
  1706  000BA2                     __end_of_sprintf:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           prodh	equ	0xFF4
  1713                           prodl	equ	0xFF3
  1714                           intcon	equ	0xFF2
  1715                           postinc0	equ	0xFEE
  1716                           wreg	equ	0xFE8
  1717                           postdec1	equ	0xFE5
  1718                           fsr1l	equ	0xFE1
  1719                           indf2	equ	0xFDF
  1720                           postinc2	equ	0xFDE
  1721                           postdec2	equ	0xFDD
  1722                           fsr2h	equ	0xFDA
  1723                           fsr2l	equ	0xFD9
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function ___lwmod *****************
  1727 ;; Defined at:
  1728 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  dividend        2   24[COMRAM] unsigned int 
  1731 ;;  divisor         2   26[COMRAM] unsigned int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  counter         1   28[COMRAM] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  2   24[COMRAM] unsigned int 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1743 ;;      Params:         4       0       0       0       0       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1746 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1747 ;;Total ram usage:        5 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_sprintf
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text7
  1758  0011D2                     __ptext7:
  1759                           	opt stack 0
  1760  0011D2                     ___lwmod:
  1761                           	opt stack 25
  1762                           
  1763                           ;incstack = 0
  1764  0011D2  501B               	movf	___lwmod@divisor,w,c
  1765  0011D4  101C               	iorwf	___lwmod@divisor+1,w,c
  1766  0011D6  B4D8               	btfsc	status,2,c
  1767  0011D8  D018               	goto	l850
  1768  0011DA  0E01               	movlw	1
  1769  0011DC  6E1D               	movwf	___lwmod@counter,c
  1770  0011DE  D004               	goto	l1873
  1771  0011E0                     l1871:
  1772  0011E0  90D8               	bcf	status,0,c
  1773  0011E2  361B               	rlcf	___lwmod@divisor,f,c
  1774  0011E4  361C               	rlcf	___lwmod@divisor+1,f,c
  1775  0011E6  2A1D               	incf	___lwmod@counter,f,c
  1776  0011E8                     l1873:
  1777  0011E8  AE1C               	btfss	___lwmod@divisor+1,7,c
  1778  0011EA  D7FA               	goto	l1871
  1779  0011EC                     l1875:
  1780  0011EC  501B               	movf	___lwmod@divisor,w,c
  1781  0011EE  5C19               	subwf	___lwmod@dividend,w,c
  1782  0011F0  501C               	movf	___lwmod@divisor+1,w,c
  1783  0011F2  581A               	subwfb	___lwmod@dividend+1,w,c
  1784  0011F4  A0D8               	btfss	status,0,c
  1785  0011F6  D004               	goto	l1879
  1786  0011F8  501B               	movf	___lwmod@divisor,w,c
  1787  0011FA  5E19               	subwf	___lwmod@dividend,f,c
  1788  0011FC  501C               	movf	___lwmod@divisor+1,w,c
  1789  0011FE  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1790  001200                     l1879:
  1791  001200  90D8               	bcf	status,0,c
  1792  001202  321C               	rrcf	___lwmod@divisor+1,f,c
  1793  001204  321B               	rrcf	___lwmod@divisor,f,c
  1794  001206  2E1D               	decfsz	___lwmod@counter,f,c
  1795  001208  D7F1               	goto	l1875
  1796  00120A                     l850:
  1797  00120A  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1798  00120E  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1799  001212  0012               	return		;funcret
  1800  001214                     __end_of___lwmod:
  1801                           	opt stack 0
  1802                           tblptru	equ	0xFF8
  1803                           tblptrh	equ	0xFF7
  1804                           tblptrl	equ	0xFF6
  1805                           tablat	equ	0xFF5
  1806                           prodh	equ	0xFF4
  1807                           prodl	equ	0xFF3
  1808                           intcon	equ	0xFF2
  1809                           postinc0	equ	0xFEE
  1810                           wreg	equ	0xFE8
  1811                           postdec1	equ	0xFE5
  1812                           fsr1l	equ	0xFE1
  1813                           indf2	equ	0xFDF
  1814                           postinc2	equ	0xFDE
  1815                           postdec2	equ	0xFDD
  1816                           fsr2h	equ	0xFDA
  1817                           fsr2l	equ	0xFD9
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function ___lwdiv *****************
  1821 ;; Defined at:
  1822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  dividend        2   17[COMRAM] unsigned int 
  1825 ;;  divisor         2   19[COMRAM] unsigned int 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  quotient        2   21[COMRAM] unsigned int 
  1828 ;;  counter         1   23[COMRAM] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2   17[COMRAM] unsigned int 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1838 ;;      Params:         4       0       0       0       0       0       0       0       0
  1839 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1841 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1842 ;;Total ram usage:        7 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    1
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_sprintf
  1849 ;;		_calcula_temperatura
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text8
  1854  001094                     __ptext8:
  1855                           	opt stack 0
  1856  001094                     ___lwdiv:
  1857                           	opt stack 25
  1858                           
  1859                           ;incstack = 0
  1860  001094  0E00               	movlw	0
  1861  001096  6E17               	movwf	___lwdiv@quotient+1,c
  1862  001098  0E00               	movlw	0
  1863  00109A  6E16               	movwf	___lwdiv@quotient,c
  1864  00109C  5014               	movf	___lwdiv@divisor,w,c
  1865  00109E  1015               	iorwf	___lwdiv@divisor+1,w,c
  1866  0010A0  B4D8               	btfsc	status,2,c
  1867  0010A2  D01C               	goto	l840
  1868  0010A4  0E01               	movlw	1
  1869  0010A6  6E18               	movwf	___lwdiv@counter,c
  1870  0010A8  D004               	goto	l1853
  1871  0010AA                     l1851:
  1872  0010AA  90D8               	bcf	status,0,c
  1873  0010AC  3614               	rlcf	___lwdiv@divisor,f,c
  1874  0010AE  3615               	rlcf	___lwdiv@divisor+1,f,c
  1875  0010B0  2A18               	incf	___lwdiv@counter,f,c
  1876  0010B2                     l1853:
  1877  0010B2  AE15               	btfss	___lwdiv@divisor+1,7,c
  1878  0010B4  D7FA               	goto	l1851
  1879  0010B6                     l1855:
  1880  0010B6  90D8               	bcf	status,0,c
  1881  0010B8  3616               	rlcf	___lwdiv@quotient,f,c
  1882  0010BA  3617               	rlcf	___lwdiv@quotient+1,f,c
  1883  0010BC  5014               	movf	___lwdiv@divisor,w,c
  1884  0010BE  5C12               	subwf	___lwdiv@dividend,w,c
  1885  0010C0  5015               	movf	___lwdiv@divisor+1,w,c
  1886  0010C2  5813               	subwfb	___lwdiv@dividend+1,w,c
  1887  0010C4  A0D8               	btfss	status,0,c
  1888  0010C6  D005               	goto	l1863
  1889  0010C8  5014               	movf	___lwdiv@divisor,w,c
  1890  0010CA  5E12               	subwf	___lwdiv@dividend,f,c
  1891  0010CC  5015               	movf	___lwdiv@divisor+1,w,c
  1892  0010CE  5A13               	subwfb	___lwdiv@dividend+1,f,c
  1893  0010D0  8016               	bsf	___lwdiv@quotient,0,c
  1894  0010D2                     l1863:
  1895  0010D2  90D8               	bcf	status,0,c
  1896  0010D4  3215               	rrcf	___lwdiv@divisor+1,f,c
  1897  0010D6  3214               	rrcf	___lwdiv@divisor,f,c
  1898  0010D8  2E18               	decfsz	___lwdiv@counter,f,c
  1899  0010DA  D7ED               	goto	l1855
  1900  0010DC                     l840:
  1901  0010DC  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  1902  0010E0  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1903  0010E4  0012               	return		;funcret
  1904  0010E6                     __end_of___lwdiv:
  1905                           	opt stack 0
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           prodh	equ	0xFF4
  1911                           prodl	equ	0xFF3
  1912                           intcon	equ	0xFF2
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           postdec1	equ	0xFE5
  1916                           fsr1l	equ	0xFE1
  1917                           indf2	equ	0xFDF
  1918                           postinc2	equ	0xFDE
  1919                           postdec2	equ	0xFDD
  1920                           fsr2h	equ	0xFDA
  1921                           fsr2l	equ	0xFD9
  1922                           status	equ	0xFD8
  1923                           
  1924 ;; *************** function _telaConfiguracaoHora *****************
  1925 ;; Defined at:
  1926 ;;		line 147 in file "main.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1940 ;;      Params:         0       0       0       0       0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1943 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    5
  1947 ;; This function calls:
  1948 ;;		_SetDDRamAddr
  1949 ;;		_putrsXLCD
  1950 ;; This function is called by:
  1951 ;;		_telas
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text9
  1956  00133C                     __ptext9:
  1957                           	opt stack 0
  1958  00133C                     _telaConfiguracaoHora:
  1959                           	opt stack 23
  1960                           
  1961                           ;main.c: 148: SetDDRamAddr(0x00);
  1962                           
  1963                           ;incstack = 0
  1964  00133C  0E00               	movlw	0
  1965  00133E  EC73  F008         	call	_SetDDRamAddr
  1966                           
  1967                           ;main.c: 149: putrsXLCD("Configuracao");
  1968  001342  0E2E               	movlw	low STR_5
  1969  001344  6E14               	movwf	putrsXLCD@buffer,c
  1970  001346  0E08               	movlw	high STR_5
  1971  001348  6E15               	movwf	putrsXLCD@buffer+1,c
  1972  00134A  ECF1  F007         	call	_putrsXLCD	;wreg free
  1973                           
  1974                           ;main.c: 150: SetDDRamAddr(0x40);
  1975  00134E  0E40               	movlw	64
  1976  001350  EC73  F008         	call	_SetDDRamAddr
  1977                           
  1978                           ;main.c: 151: putrsXLCD("Hora");
  1979  001354  0E68               	movlw	low STR_8
  1980  001356  6E14               	movwf	putrsXLCD@buffer,c
  1981  001358  0E08               	movlw	high STR_8
  1982  00135A  6E15               	movwf	putrsXLCD@buffer+1,c
  1983  00135C  ECF1  F007         	call	_putrsXLCD	;wreg free
  1984                           
  1985                           ;main.c: 152: putrsXLCD(buffer);
  1986  001360  0E6E               	movlw	low _buffer
  1987  001362  6E14               	movwf	putrsXLCD@buffer,c
  1988  001364  0E00               	movlw	high _buffer
  1989  001366  6E15               	movwf	putrsXLCD@buffer+1,c
  1990  001368  ECF1  F007         	call	_putrsXLCD	;wreg free
  1991  00136C  0012               	return	
  1992  00136E                     __end_of_telaConfiguracaoHora:
  1993                           	opt stack 0
  1994                           tblptru	equ	0xFF8
  1995                           tblptrh	equ	0xFF7
  1996                           tblptrl	equ	0xFF6
  1997                           tablat	equ	0xFF5
  1998                           prodh	equ	0xFF4
  1999                           prodl	equ	0xFF3
  2000                           intcon	equ	0xFF2
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           postdec1	equ	0xFE5
  2004                           fsr1l	equ	0xFE1
  2005                           indf2	equ	0xFDF
  2006                           postinc2	equ	0xFDE
  2007                           postdec2	equ	0xFDD
  2008                           fsr2h	equ	0xFDA
  2009                           fsr2l	equ	0xFD9
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function _telaConfiguracaoDia *****************
  2013 ;; Defined at:
  2014 ;;		line 138 in file "main.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    5
  2035 ;; This function calls:
  2036 ;;		_SetDDRamAddr
  2037 ;;		_putrsXLCD
  2038 ;; This function is called by:
  2039 ;;		_telas
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text10
  2044  00136E                     __ptext10:
  2045                           	opt stack 0
  2046  00136E                     _telaConfiguracaoDia:
  2047                           	opt stack 23
  2048                           
  2049                           ;main.c: 139: SetDDRamAddr(0x00);
  2050                           
  2051                           ;incstack = 0
  2052  00136E  0E00               	movlw	0
  2053  001370  EC73  F008         	call	_SetDDRamAddr
  2054                           
  2055                           ;main.c: 140: putrsXLCD("Configuracao");
  2056  001374  0E2E               	movlw	low STR_5
  2057  001376  6E14               	movwf	putrsXLCD@buffer,c
  2058  001378  0E08               	movlw	high STR_5
  2059  00137A  6E15               	movwf	putrsXLCD@buffer+1,c
  2060  00137C  ECF1  F007         	call	_putrsXLCD	;wreg free
  2061                           
  2062                           ;main.c: 141: SetDDRamAddr(0x40);
  2063  001380  0E40               	movlw	64
  2064  001382  EC73  F008         	call	_SetDDRamAddr
  2065                           
  2066                           ;main.c: 142: putrsXLCD("Dia da semana");
  2067  001386  0E20               	movlw	low STR_6
  2068  001388  6E14               	movwf	putrsXLCD@buffer,c
  2069  00138A  0E08               	movlw	high STR_6
  2070  00138C  6E15               	movwf	putrsXLCD@buffer+1,c
  2071  00138E  ECF1  F007         	call	_putrsXLCD	;wreg free
  2072                           
  2073                           ;main.c: 143: putrsXLCD(buffer);
  2074  001392  0E6E               	movlw	low _buffer
  2075  001394  6E14               	movwf	putrsXLCD@buffer,c
  2076  001396  0E00               	movlw	high _buffer
  2077  001398  6E15               	movwf	putrsXLCD@buffer+1,c
  2078  00139A  ECF1  F007         	call	_putrsXLCD	;wreg free
  2079  00139E  0012               	return	
  2080  0013A0                     __end_of_telaConfiguracaoDia:
  2081                           	opt stack 0
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           prodh	equ	0xFF4
  2087                           prodl	equ	0xFF3
  2088                           intcon	equ	0xFF2
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1l	equ	0xFE1
  2093                           indf2	equ	0xFDF
  2094                           postinc2	equ	0xFDE
  2095                           postdec2	equ	0xFDD
  2096                           fsr2h	equ	0xFDA
  2097                           fsr2l	equ	0xFD9
  2098                           status	equ	0xFD8
  2099                           
  2100 ;; *************** function _putrsXLCD *****************
  2101 ;; Defined at:
  2102 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  2105 ;;		 -> STR_11(8), STR_8(5), STR_7(13), STR_6(14), 
  2106 ;;		 -> STR_5(13), STR_3(7), buffer(16), STR_1(7), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        2 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    4
  2125 ;; This function calls:
  2126 ;;		_BusyXLCD
  2127 ;;		_WriteDataXLCD
  2128 ;; This function is called by:
  2129 ;;		_telaConfiguracaoDia
  2130 ;;		_telaConfiguracaoHora
  2131 ;;		_telaInicial
  2132 ;;		_tela_1
  2133 ;;		_tela_4
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text11
  2138  000FE2                     __ptext11:
  2139                           	opt stack 0
  2140  000FE2                     _putrsXLCD:
  2141                           	opt stack 23
  2142                           
  2143                           ;incstack = 0
  2144  000FE2  D019               	goto	l1915
  2145  000FE4                     l1909:
  2146  000FE4  EC65  F009         	call	_BusyXLCD	;wreg free
  2147  000FE8  0900               	iorlw	0
  2148  000FEA  A4D8               	btfss	status,2,c
  2149  000FEC  D7FB               	goto	l1909
  2150  000FEE  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2151  000FF2  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2152  000FF6  6AF8               	clrf	tblptru,c
  2153  000FF8  0E07               	movlw	(high __ramtop+-1)
  2154  000FFA  64F7               	cpfsgt	tblptrh,c
  2155  000FFC  D003               	bra	u877
  2156  000FFE  0008               	tblrd		*
  2157  001000  50F5               	movf	tablat,w,c
  2158  001002  D005               	bra	u870
  2159  001004                     u877:
  2160  001004  CFF6 FFE9          	movff	tblptrl,fsr0l
  2161  001008  CFF7 FFEA          	movff	tblptrh,fsr0h
  2162  00100C  50EF               	movf	indf0,w,c
  2163  00100E                     u870:
  2164  00100E  EC0A  F009         	call	_WriteDataXLCD
  2165  001012  4A14               	infsnz	putrsXLCD@buffer,f,c
  2166  001014  2A15               	incf	putrsXLCD@buffer+1,f,c
  2167  001016                     l1915:
  2168  001016  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2169  00101A  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2170  00101E  6AF8               	clrf	tblptru,c
  2171  001020  0E07               	movlw	(high __ramtop+-1)
  2172  001022  64F7               	cpfsgt	tblptrh,c
  2173  001024  D003               	bra	u887
  2174  001026  0008               	tblrd		*
  2175  001028  50F5               	movf	tablat,w,c
  2176  00102A  D005               	bra	u880
  2177  00102C                     u887:
  2178  00102C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2179  001030  CFF7 FFEA          	movff	tblptrh,fsr0h
  2180  001034  50EF               	movf	indf0,w,c
  2181  001036                     u880:
  2182  001036  0900               	iorlw	0
  2183  001038  B4D8               	btfsc	status,2,c
  2184  00103A  0012               	return	
  2185  00103C  D7D3               	goto	l1909
  2186  00103E                     __end_of_putrsXLCD:
  2187                           	opt stack 0
  2188                           tblptru	equ	0xFF8
  2189                           tblptrh	equ	0xFF7
  2190                           tblptrl	equ	0xFF6
  2191                           tablat	equ	0xFF5
  2192                           prodh	equ	0xFF4
  2193                           prodl	equ	0xFF3
  2194                           intcon	equ	0xFF2
  2195                           indf0	equ	0xFEF
  2196                           postinc0	equ	0xFEE
  2197                           fsr0h	equ	0xFEA
  2198                           fsr0l	equ	0xFE9
  2199                           wreg	equ	0xFE8
  2200                           postdec1	equ	0xFE5
  2201                           fsr1l	equ	0xFE1
  2202                           indf2	equ	0xFDF
  2203                           postinc2	equ	0xFDE
  2204                           postdec2	equ	0xFDD
  2205                           fsr2h	equ	0xFDA
  2206                           fsr2l	equ	0xFD9
  2207                           status	equ	0xFD8
  2208                           
  2209 ;; *************** function _WriteDataXLCD *****************
  2210 ;; Defined at:
  2211 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  data            1    wreg     unsigned char 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  data            1   18[COMRAM] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        1 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    3
  2232 ;; This function calls:
  2233 ;;		_DelayFor18TCY
  2234 ;; This function is called by:
  2235 ;;		_putrsXLCD
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text12
  2240  001214                     __ptext12:
  2241                           	opt stack 0
  2242  001214                     _WriteDataXLCD:
  2243                           	opt stack 23
  2244                           
  2245                           ;incstack = 0
  2246                           ;WriteDataXLCD@data stored from wreg
  2247  001214  6E13               	movwf	WriteDataXLCD@data,c
  2248  001216  0EF0               	movlw	240
  2249  001218  1693               	andwf	3987,f,c	;volatile
  2250  00121A  0EF0               	movlw	240
  2251  00121C  1681               	andwf	3969,f,c	;volatile
  2252  00121E  3813               	swapf	WriteDataXLCD@data,w,c
  2253  001220  0B0F               	andlw	15
  2254  001222  0B0F               	andlw	15
  2255  001224  1281               	iorwf	3969,f,c	;volatile
  2256  001226  8A8A               	bsf	3978,5,c	;volatile
  2257  001228  9C8A               	bcf	3978,6,c	;volatile
  2258  00122A  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  2259  00122E  888A               	bsf	3978,4,c	;volatile
  2260  001230  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  2261  001234  988A               	bcf	3978,4,c	;volatile
  2262  001236  0EF0               	movlw	240
  2263  001238  1681               	andwf	3969,f,c	;volatile
  2264  00123A  5013               	movf	WriteDataXLCD@data,w,c
  2265  00123C  0B0F               	andlw	15
  2266  00123E  1281               	iorwf	3969,f,c	;volatile
  2267  001240  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  2268  001244  888A               	bsf	3978,4,c	;volatile
  2269  001246  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  2270  00124A  988A               	bcf	3978,4,c	;volatile
  2271  00124C  0E0F               	movlw	15
  2272  00124E  1293               	iorwf	3987,f,c	;volatile
  2273  001250  0012               	return	
  2274  001252                     __end_of_WriteDataXLCD:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodh	equ	0xFF4
  2281                           prodl	equ	0xFF3
  2282                           intcon	equ	0xFF2
  2283                           indf0	equ	0xFEF
  2284                           postinc0	equ	0xFEE
  2285                           fsr0h	equ	0xFEA
  2286                           fsr0l	equ	0xFE9
  2287                           wreg	equ	0xFE8
  2288                           postdec1	equ	0xFE5
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           postinc2	equ	0xFDE
  2292                           postdec2	equ	0xFDD
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function _trata_data *****************
  2298 ;; Defined at:
  2299 ;;		line 223 in file "main.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2313 ;;      Params:         0       0       0       0       0       0       0       0       0
  2314 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2316 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2317 ;;Total ram usage:        0 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text13
  2328  00103E                     __ptext13:
  2329                           	opt stack 0
  2330  00103E                     _trata_data:
  2331                           	opt stack 29
  2332                           
  2333                           ;main.c: 224: if(horaAtual.h == 24){
  2334                           
  2335                           ;incstack = 0
  2336  00103E  0E18               	movlw	24
  2337  001040  182E               	xorwf	_horaAtual,w,c
  2338  001042  A4D8               	btfss	status,2,c
  2339  001044  D004               	goto	l1575
  2340                           
  2341                           ;main.c: 225: dia+=1;
  2342  001046  2A4A               	incf	_dia,f,c
  2343                           
  2344                           ;main.c: 226: horaAtual.h = 0;
  2345  001048  0E00               	movlw	0
  2346  00104A  6E2E               	movwf	_horaAtual,c
  2347                           
  2348                           ;main.c: 227: return;
  2349  00104C  0012               	return	
  2350  00104E                     l1575:
  2351                           
  2352                           ;main.c: 228: }
  2353                           ;main.c: 229: if(mes == 2 && dia == 28){
  2354  00104E  0E02               	movlw	2
  2355  001050  1849               	xorwf	_mes,w,c
  2356  001052  A4D8               	btfss	status,2,c
  2357  001054  D008               	goto	l1585
  2358  001056  0E1C               	movlw	28
  2359  001058  184A               	xorwf	_dia,w,c
  2360  00105A  A4D8               	btfss	status,2,c
  2361  00105C  D004               	goto	l1585
  2362                           
  2363                           ;main.c: 230: mes+=1;
  2364  00105E  2A49               	incf	_mes,f,c
  2365                           
  2366                           ;main.c: 231: dia = 1;
  2367  001060  0E01               	movlw	1
  2368  001062  6E4A               	movwf	_dia,c
  2369                           
  2370                           ;main.c: 232: return;
  2371  001064  0012               	return	
  2372  001066                     l1585:
  2373                           
  2374                           ;main.c: 233: }
  2375                           ;main.c: 234: if(mes == 12 && dia == 30){
  2376  001066  0E0C               	movlw	12
  2377  001068  1849               	xorwf	_mes,w,c
  2378  00106A  A4D8               	btfss	status,2,c
  2379  00106C  D00B               	goto	l1597
  2380  00106E  0E1E               	movlw	30
  2381  001070  184A               	xorwf	_dia,w,c
  2382  001072  A4D8               	btfss	status,2,c
  2383  001074  D007               	goto	l1597
  2384                           
  2385                           ;main.c: 235: ano+=1;
  2386  001076  4A45               	infsnz	_ano,f,c
  2387  001078  2A46               	incf	_ano+1,f,c
  2388                           
  2389                           ;main.c: 236: mes = 1;
  2390  00107A  0E01               	movlw	1
  2391  00107C  6E49               	movwf	_mes,c
  2392                           
  2393                           ;main.c: 237: dia = 1;
  2394  00107E  0E01               	movlw	1
  2395  001080  6E4A               	movwf	_dia,c
  2396                           
  2397                           ;main.c: 238: return;
  2398  001082  0012               	return	
  2399  001084                     l1597:
  2400                           
  2401                           ;main.c: 239: }
  2402                           ;main.c: 240: if(dia == 30){
  2403  001084  0E1E               	movlw	30
  2404  001086  184A               	xorwf	_dia,w,c
  2405  001088  A4D8               	btfss	status,2,c
  2406  00108A  0012               	return	
  2407                           
  2408                           ;main.c: 241: mes+=1;
  2409  00108C  2A49               	incf	_mes,f,c
  2410                           
  2411                           ;main.c: 242: dia = 1;
  2412  00108E  0E01               	movlw	1
  2413  001090  6E4A               	movwf	_dia,c
  2414                           
  2415                           ;main.c: 243: return;
  2416  001092  0012               	return	
  2417  001094                     __end_of_trata_data:
  2418                           	opt stack 0
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           prodh	equ	0xFF4
  2424                           prodl	equ	0xFF3
  2425                           intcon	equ	0xFF2
  2426                           indf0	equ	0xFEF
  2427                           postinc0	equ	0xFEE
  2428                           fsr0h	equ	0xFEA
  2429                           fsr0l	equ	0xFE9
  2430                           wreg	equ	0xFE8
  2431                           postdec1	equ	0xFE5
  2432                           fsr1l	equ	0xFE1
  2433                           indf2	equ	0xFDF
  2434                           postinc2	equ	0xFDE
  2435                           postdec2	equ	0xFDD
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _maquinaEstado *****************
  2441 ;; Defined at:
  2442 ;;		line 519 in file "main.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2459 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2460 ;;Total ram usage:        0 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    4
  2463 ;; This function calls:
  2464 ;;		_enviaByte
  2465 ;;		_trataComando
  2466 ;;		_tx_data
  2467 ;;		_verificaCRCBUFFCOM
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text14
  2474  001186                     __ptext14:
  2475                           	opt stack 0
  2476  001186                     _maquinaEstado:
  2477                           	opt stack 26
  2478                           
  2479                           ;main.c: 520: switch(estado){
  2480                           
  2481                           ;incstack = 0
  2482  001186  D011               	goto	l2287
  2483  001188                     l2275:
  2484                           
  2485                           ;main.c: 522: verificaCRCBUFFCOM();
  2486  001188  EC9C  F008         	call	_verificaCRCBUFFCOM	;wreg free
  2487                           
  2488                           ;main.c: 523: break;
  2489  00118C  0012               	return	
  2490  00118E                     l2277:
  2491                           
  2492                           ;main.c: 526: trataComando();
  2493  00118E  EC37  F004         	call	_trataComando	;wreg free
  2494                           
  2495                           ;main.c: 527: break;
  2496  001192  0012               	return	
  2497  001194                     l2279:
  2498                           
  2499                           ;main.c: 530: tx_data();
  2500  001194  EC82  F009         	call	_tx_data	;wreg free
  2501                           
  2502                           ;main.c: 531: break;
  2503  001198  0012               	return	
  2504  00119A                     l2281:
  2505                           
  2506                           ;main.c: 534: enviaByte(0x05);
  2507  00119A  0E05               	movlw	5
  2508  00119C  EC08  F00A         	call	_enviaByte
  2509                           
  2510                           ;main.c: 535: break;
  2511  0011A0  0012               	return	
  2512  0011A2                     l2283:
  2513                           
  2514                           ;main.c: 538: enviaByte(0x15);
  2515  0011A2  0E15               	movlw	21
  2516  0011A4  EC08  F00A         	call	_enviaByte
  2517                           
  2518                           ;main.c: 545: }
  2519                           
  2520                           ;main.c: 544: break;
  2521                           
  2522                           ;main.c: 543: default:
  2523                           
  2524                           ;main.c: 542: break;
  2525                           
  2526                           ;main.c: 541: case 0:
  2527                           
  2528                           ;main.c: 539: break;
  2529  0011A8  0012               	return	
  2530  0011AA                     l2287:
  2531  0011AA  503C               	movf	_estado,w,c
  2532                           
  2533                           ; Switch size 1, requested type "space"
  2534                           ; Number of cases is 6, Range of values is 0 to 5
  2535                           ; switch strategies available:
  2536                           ; Name         Instructions Cycles
  2537                           ; simple_byte           19    10 (average)
  2538                           ;	Chosen strategy is simple_byte
  2539  0011AC  0A00               	xorlw	0	; case 0
  2540  0011AE  B4D8               	btfsc	status,2,c
  2541  0011B0  0012               	return	
  2542  0011B2  0A01               	xorlw	1	; case 1
  2543  0011B4  B4D8               	btfsc	status,2,c
  2544  0011B6  D7E8               	goto	l2275
  2545  0011B8  0A03               	xorlw	3	; case 2
  2546  0011BA  B4D8               	btfsc	status,2,c
  2547  0011BC  D7E8               	goto	l2277
  2548  0011BE  0A01               	xorlw	1	; case 3
  2549  0011C0  B4D8               	btfsc	status,2,c
  2550  0011C2  D7E8               	goto	l2279
  2551  0011C4  0A07               	xorlw	7	; case 4
  2552  0011C6  B4D8               	btfsc	status,2,c
  2553  0011C8  D7E8               	goto	l2281
  2554  0011CA  0A01               	xorlw	1	; case 5
  2555  0011CC  A4D8               	btfss	status,2,c
  2556  0011CE  0012               	return	
  2557  0011D0  D7E8               	goto	l2283
  2558  0011D2                     __end_of_maquinaEstado:
  2559                           	opt stack 0
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           prodh	equ	0xFF4
  2565                           prodl	equ	0xFF3
  2566                           intcon	equ	0xFF2
  2567                           indf0	equ	0xFEF
  2568                           postinc0	equ	0xFEE
  2569                           fsr0h	equ	0xFEA
  2570                           fsr0l	equ	0xFE9
  2571                           wreg	equ	0xFE8
  2572                           postdec1	equ	0xFE5
  2573                           fsr1l	equ	0xFE1
  2574                           indf2	equ	0xFDF
  2575                           postinc2	equ	0xFDE
  2576                           postdec2	equ	0xFDD
  2577                           fsr2h	equ	0xFDA
  2578                           fsr2l	equ	0xFD9
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function _verificaCRCBUFFCOM *****************
  2582 ;; Defined at:
  2583 ;;		line 506 in file "main.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  crc             2   33[COMRAM] unsigned int 
  2588 ;;  CRC_OK          1   32[COMRAM] unsigned char 
  2589 ;;  crc2            1   31[COMRAM] unsigned char 
  2590 ;;  crc1            1   30[COMRAM] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0
  2601 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2603 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2604 ;;Total ram usage:        5 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    2
  2607 ;; This function calls:
  2608 ;;		_crc16
  2609 ;; This function is called by:
  2610 ;;		_maquinaEstado
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text15
  2615  001138                     __ptext15:
  2616                           	opt stack 0
  2617  001138                     _verificaCRCBUFFCOM:
  2618                           	opt stack 27
  2619                           
  2620                           ;main.c: 507: char CRC_OK;
  2621                           ;main.c: 508: unsigned int crc = crc16(BUFFCOM, 5);
  2622                           
  2623                           ;incstack = 0
  2624  001138  0E3E               	movlw	low _BUFFCOM
  2625  00113A  6E12               	movwf	crc16@data_p,c
  2626  00113C  0E00               	movlw	high _BUFFCOM
  2627  00113E  6E13               	movwf	crc16@data_p+1,c
  2628  001140  0E00               	movlw	0
  2629  001142  6E15               	movwf	crc16@length+1,c
  2630  001144  0E05               	movlw	5
  2631  001146  6E14               	movwf	crc16@length,c
  2632  001148  ECD1  F005         	call	_crc16	;wreg free
  2633  00114C  C012  F022         	movff	?_crc16,verificaCRCBUFFCOM@crc
  2634  001150  C013  F023         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  2635                           
  2636                           ;main.c: 509: unsigned char crc1 = crc >> 8;
  2637  001154  5023               	movf	verificaCRCBUFFCOM@crc+1,w,c
  2638  001156  6E1F               	movwf	verificaCRCBUFFCOM@crc1,c
  2639                           
  2640                           ;main.c: 510: unsigned char crc2 = crc & 0xFF;
  2641  001158  C022  F020         	movff	verificaCRCBUFFCOM@crc,verificaCRCBUFFCOM@crc2
  2642                           
  2643                           ;main.c: 512: if(crc1 == BUFFCOM[5] && BUFFCOM[6] == crc2) CRC_OK = 1;
  2644  00115C  501F               	movf	verificaCRCBUFFCOM@crc1,w,c
  2645  00115E  1843               	xorwf	_BUFFCOM+5,w,c
  2646  001160  A4D8               	btfss	status,2,c
  2647  001162  D006               	goto	l2213
  2648  001164  5020               	movf	verificaCRCBUFFCOM@crc2,w,c
  2649  001166  1844               	xorwf	_BUFFCOM+6,w,c
  2650  001168  A4D8               	btfss	status,2,c
  2651  00116A  D002               	goto	l2213
  2652  00116C  0E01               	movlw	1
  2653  00116E  D001               	goto	L1
  2654  001170                     l2213:
  2655                           
  2656                           ;main.c: 513: else CRC_OK = 0;
  2657  001170  0E00               	movlw	0
  2658  001172                     L1:
  2659  001172  6E21               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  2660                           
  2661                           ;main.c: 515: if(CRC_OK == 1) estado = 4;
  2662  001174  0421               	decf	verificaCRCBUFFCOM@CRC_OK,w,c
  2663  001176  A4D8               	btfss	status,2,c
  2664  001178  D003               	goto	l2219
  2665  00117A  0E04               	movlw	4
  2666  00117C  6E3C               	movwf	_estado,c
  2667  00117E  0012               	return	
  2668  001180                     l2219:
  2669                           
  2670                           ;main.c: 516: else estado = 5;
  2671  001180  0E05               	movlw	5
  2672  001182  6E3C               	movwf	_estado,c
  2673  001184  0012               	return	
  2674  001186                     __end_of_verificaCRCBUFFCOM:
  2675                           	opt stack 0
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           prodh	equ	0xFF4
  2681                           prodl	equ	0xFF3
  2682                           intcon	equ	0xFF2
  2683                           indf0	equ	0xFEF
  2684                           postinc0	equ	0xFEE
  2685                           fsr0h	equ	0xFEA
  2686                           fsr0l	equ	0xFE9
  2687                           wreg	equ	0xFE8
  2688                           postdec1	equ	0xFE5
  2689                           fsr1l	equ	0xFE1
  2690                           indf2	equ	0xFDF
  2691                           postinc2	equ	0xFDE
  2692                           postdec2	equ	0xFDD
  2693                           fsr2h	equ	0xFDA
  2694                           fsr2l	equ	0xFD9
  2695                           status	equ	0xFD8
  2696                           
  2697 ;; *************** function _tx_data *****************
  2698 ;; Defined at:
  2699 ;;		line 560 in file "main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  cont            2   17[COMRAM] int 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2713 ;;      Params:         0       0       0       0       0       0       0       0       0
  2714 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2716 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2717 ;;Total ram usage:        2 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_maquinaEstado
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text16
  2728  001304                     __ptext16:
  2729                           	opt stack 0
  2730  001304                     _tx_data:
  2731                           	opt stack 28
  2732                           
  2733                           ;main.c: 561: int cont;
  2734                           ;main.c: 562: for(cont=0;cont<7;cont++){
  2735                           
  2736                           ;incstack = 0
  2737  001304  0E00               	movlw	0
  2738  001306  6E13               	movwf	tx_data@cont+1,c
  2739  001308  0E00               	movlw	0
  2740  00130A  6E12               	movwf	tx_data@cont,c
  2741  00130C                     l2223:
  2742  00130C  BE13               	btfsc	tx_data@cont+1,7,c
  2743  00130E  D006               	goto	l286
  2744  001310  5013               	movf	tx_data@cont+1,w,c
  2745  001312  E111               	bnz	l2233
  2746  001314  0E07               	movlw	7
  2747  001316  5C12               	subwf	tx_data@cont,w,c
  2748  001318  B0D8               	btfsc	status,0,c
  2749  00131A  D00D               	goto	l2233
  2750  00131C                     l286:
  2751  00131C  A89E               	btfss	3998,4,c	;volatile
  2752  00131E  D7FE               	goto	l286
  2753                           
  2754                           ;main.c: 564: TXREG = BUFFRESP[cont];
  2755  001320  0E7E               	movlw	low _BUFFRESP
  2756  001322  2412               	addwf	tx_data@cont,w,c
  2757  001324  6ED9               	movwf	fsr2l,c
  2758  001326  0E00               	movlw	high _BUFFRESP
  2759  001328  2013               	addwfc	tx_data@cont+1,w,c
  2760  00132A  6EDA               	movwf	fsr2h,c
  2761  00132C  50DF               	movf	indf2,w,c
  2762  00132E  6EAD               	movwf	4013,c	;volatile
  2763  001330  4A12               	infsnz	tx_data@cont,f,c
  2764  001332  2A13               	incf	tx_data@cont+1,f,c
  2765  001334  D7EB               	goto	l2223
  2766  001336                     l2233:
  2767                           
  2768                           ;main.c: 565: }
  2769                           ;main.c: 566: estado = 0;
  2770  001336  0E00               	movlw	0
  2771  001338  6E3C               	movwf	_estado,c
  2772  00133A  0012               	return		;funcret
  2773  00133C                     __end_of_tx_data:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           prodh	equ	0xFF4
  2780                           prodl	equ	0xFF3
  2781                           intcon	equ	0xFF2
  2782                           indf0	equ	0xFEF
  2783                           postinc0	equ	0xFEE
  2784                           fsr0h	equ	0xFEA
  2785                           fsr0l	equ	0xFE9
  2786                           wreg	equ	0xFE8
  2787                           postdec1	equ	0xFE5
  2788                           fsr1l	equ	0xFE1
  2789                           indf2	equ	0xFDF
  2790                           postinc2	equ	0xFDE
  2791                           postdec2	equ	0xFDD
  2792                           fsr2h	equ	0xFDA
  2793                           fsr2l	equ	0xFD9
  2794                           status	equ	0xFD8
  2795                           
  2796 ;; *************** function _trataComando *****************
  2797 ;; Defined at:
  2798 ;;		line 421 in file "main.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  iterator        2   39[COMRAM] int 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0
  2813 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2814 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2815 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2816 ;;Total ram usage:        4 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    3
  2819 ;; This function calls:
  2820 ;;		_calculaCRCBUFFRESP
  2821 ;;		_memcpy
  2822 ;; This function is called by:
  2823 ;;		_maquinaEstado
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text17
  2828  00086E                     __ptext17:
  2829                           	opt stack 0
  2830  00086E                     _trataComando:
  2831                           	opt stack 26
  2832                           
  2833                           ;main.c: 422: int iterator;
  2834                           ;main.c: 424: switch(BUFFCOM[0]){
  2835                           
  2836                           ;incstack = 0
  2837  00086E  D0DE               	goto	l2197
  2838  000870                     l2163:
  2839                           
  2840                           ;main.c: 426: memcpy(&BUFFRESP[0], &BUFFCOM[0], sizeof(BUFFCOM[0]));
  2841  000870  0E7E               	movlw	low _BUFFRESP
  2842  000872  6E12               	movwf	memcpy@d1,c
  2843  000874  0E00               	movlw	high _BUFFRESP
  2844  000876  6E13               	movwf	memcpy@d1+1,c
  2845  000878  0E3E               	movlw	low _BUFFCOM
  2846  00087A  6E14               	movwf	memcpy@s1,c
  2847  00087C  0E00               	movlw	high _BUFFCOM
  2848  00087E  6E15               	movwf	memcpy@s1+1,c
  2849  000880  5014               	movf	memcpy@s1,w,c
  2850  000882  1015               	iorwf	memcpy@s1+1,w,c
  2851  000884  A4D8               	btfss	status,2,c
  2852  000886  0E20               	movlw	32
  2853  000888  6E16               	movwf	memcpy@s1+2,c
  2854  00088A  0E00               	movlw	0
  2855  00088C  6E18               	movwf	memcpy@n+1,c
  2856  00088E  0E01               	movlw	1
  2857  000890  6E17               	movwf	memcpy@n,c
  2858  000892  ECC0  F007         	call	_memcpy	;wreg free
  2859                           
  2860                           ;main.c: 427: memcpy(&BUFFRESP[1], &BUFFCOM[1], sizeof(BUFFCOM[1]));
  2861  000896  0E7F               	movlw	low (_BUFFRESP+1)
  2862  000898  6E12               	movwf	memcpy@d1,c
  2863  00089A  0E00               	movlw	high (_BUFFRESP+1)
  2864  00089C  6E13               	movwf	memcpy@d1+1,c
  2865  00089E  0E3F               	movlw	low (_BUFFCOM+1)
  2866  0008A0  6E14               	movwf	memcpy@s1,c
  2867  0008A2  0E00               	movlw	high (_BUFFCOM+1)
  2868  0008A4  6E15               	movwf	memcpy@s1+1,c
  2869  0008A6  5014               	movf	memcpy@s1,w,c
  2870  0008A8  1015               	iorwf	memcpy@s1+1,w,c
  2871  0008AA  A4D8               	btfss	status,2,c
  2872  0008AC  0E20               	movlw	32
  2873  0008AE  6E16               	movwf	memcpy@s1+2,c
  2874  0008B0  0E00               	movlw	0
  2875  0008B2  6E18               	movwf	memcpy@n+1,c
  2876  0008B4  0E01               	movlw	1
  2877  0008B6  6E17               	movwf	memcpy@n,c
  2878  0008B8  ECC0  F007         	call	_memcpy	;wreg free
  2879                           
  2880                           ;main.c: 428: switch(BUFFCOM[1]){
  2881  0008BC  D04C               	goto	l2169
  2882  0008BE                     l2165:
  2883                           
  2884                           ;main.c: 431: memcpy(&BUFFRESP[2], &versao, sizeof(versao));
  2885  0008BE  0E80               	movlw	low (_BUFFRESP+2)
  2886  0008C0  6E12               	movwf	memcpy@d1,c
  2887  0008C2  0E00               	movlw	high (_BUFFRESP+2)
  2888  0008C4  6E13               	movwf	memcpy@d1+1,c
  2889  0008C6  0E4D               	movlw	low _versao
  2890  0008C8  6E14               	movwf	memcpy@s1,c
  2891  0008CA  0E00               	movlw	high _versao
  2892  0008CC  6E15               	movwf	memcpy@s1+1,c
  2893  0008CE  5014               	movf	memcpy@s1,w,c
  2894  0008D0  1015               	iorwf	memcpy@s1+1,w,c
  2895  0008D2  A4D8               	btfss	status,2,c
  2896  0008D4  0E20               	movlw	32
  2897  0008D6  6E16               	movwf	memcpy@s1+2,c
  2898  0008D8  0E00               	movlw	0
  2899  0008DA  6E18               	movwf	memcpy@n+1,c
  2900  0008DC  0E01               	movlw	1
  2901  0008DE  6E17               	movwf	memcpy@n,c
  2902  0008E0  ECC0  F007         	call	_memcpy	;wreg free
  2903                           
  2904                           ;main.c: 432: memcpy(&BUFFRESP[3], &revisao, sizeof(revisao));
  2905  0008E4  0E81               	movlw	low (_BUFFRESP+3)
  2906  0008E6  6E12               	movwf	memcpy@d1,c
  2907  0008E8  0E00               	movlw	high (_BUFFRESP+3)
  2908  0008EA  6E13               	movwf	memcpy@d1+1,c
  2909  0008EC  0E4C               	movlw	low _revisao
  2910  0008EE  6E14               	movwf	memcpy@s1,c
  2911  0008F0  0E00               	movlw	high _revisao
  2912  0008F2  6E15               	movwf	memcpy@s1+1,c
  2913  0008F4  5014               	movf	memcpy@s1,w,c
  2914  0008F6  1015               	iorwf	memcpy@s1+1,w,c
  2915  0008F8  A4D8               	btfss	status,2,c
  2916  0008FA  0E20               	movlw	32
  2917  0008FC  6E16               	movwf	memcpy@s1+2,c
  2918  0008FE  0E00               	movlw	0
  2919  000900  6E18               	movwf	memcpy@n+1,c
  2920  000902  0E01               	movlw	1
  2921  000904  6E17               	movwf	memcpy@n,c
  2922  000906  ECC0  F007         	call	_memcpy	;wreg free
  2923                           
  2924                           ;main.c: 433: memcpy(&BUFFRESP[4], 0x0, sizeof(char));
  2925  00090A  0E82               	movlw	low (_BUFFRESP+4)
  2926  00090C  6E12               	movwf	memcpy@d1,c
  2927  00090E  0E00               	movlw	high (_BUFFRESP+4)
  2928  000910  6E13               	movwf	memcpy@d1+1,c
  2929  000912  0E00               	movlw	0
  2930  000914  6E14               	movwf	memcpy@s1,c
  2931  000916  0E00               	movlw	0
  2932  000918  6E15               	movwf	memcpy@s1+1,c
  2933  00091A  0E00               	movlw	0
  2934  00091C  6E16               	movwf	memcpy@s1+2,c
  2935  00091E  0E00               	movlw	0
  2936  000920  6E18               	movwf	memcpy@n+1,c
  2937  000922  0E01               	movlw	1
  2938  000924  6E17               	movwf	memcpy@n,c
  2939  000926  ECC0  F007         	call	_memcpy	;wreg free
  2940                           
  2941                           ;main.c: 437: break;
  2942  00092A  D087               	goto	l2199
  2943  00092C                     l239:
  2944                           
  2945                           ;main.c: 441: BUFFRESP[2] = horaAtual.h;
  2946  00092C  C02E  F080         	movff	_horaAtual,_BUFFRESP+2
  2947                           
  2948                           ;main.c: 442: BUFFRESP[3] = horaAtual.m;
  2949  000930  C02F  F081         	movff	_horaAtual+1,_BUFFRESP+3
  2950                           
  2951                           ;main.c: 443: BUFFRESP[4] = horaAtual.s;
  2952  000934  C030  F082         	movff	_horaAtual+2,_BUFFRESP+4
  2953                           
  2954                           ;main.c: 444: break;
  2955  000938  D080               	goto	l2199
  2956  00093A                     l240:
  2957                           
  2958                           ;main.c: 448: BUFFRESP[2] = dia;
  2959  00093A  C04A  F080         	movff	_dia,_BUFFRESP+2
  2960                           
  2961                           ;main.c: 449: BUFFRESP[3] = mes;
  2962  00093E  C049  F081         	movff	_mes,_BUFFRESP+3
  2963                           
  2964                           ;main.c: 450: BUFFRESP[4] = ano;
  2965  000942  C045  F082         	movff	_ano,_BUFFRESP+4
  2966                           
  2967                           ;main.c: 451: break;
  2968  000946  D079               	goto	l2199
  2969  000948                     l241:
  2970                           
  2971                           ;main.c: 455: BUFFRESP[2] = desp_hora;
  2972  000948  C048  F080         	movff	_desp_hora,_BUFFRESP+2
  2973                           
  2974                           ;main.c: 456: BUFFRESP[3] = desp_min;
  2975  00094C  C047  F081         	movff	_desp_min,_BUFFRESP+3
  2976                           
  2977                           ;main.c: 457: BUFFRESP[4] = 0xFF;
  2978  000950  0100               	movlb	0	; () banked
  2979  000952  6982               	setf	(_BUFFRESP+4)& (0+255),b
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;main.c: 462: }
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;main.c: 461: break;
  2986                           
  2987                           ;main.c: 460: default:
  2988                           
  2989                           ;main.c: 458: break;
  2990  000954  D072               	goto	l2199
  2991  000956                     l2169:
  2992  000956  503F               	movf	_BUFFCOM+1,w,c
  2993                           
  2994                           ; Switch size 1, requested type "space"
  2995                           ; Number of cases is 4, Range of values is 48 to 51
  2996                           ; switch strategies available:
  2997                           ; Name         Instructions Cycles
  2998                           ; simple_byte           13     7 (average)
  2999                           ;	Chosen strategy is simple_byte
  3000  000958  0A30               	xorlw	48	; case 48
  3001  00095A  B4D8               	btfsc	status,2,c
  3002  00095C  D7B0               	goto	l2165
  3003  00095E  0A01               	xorlw	1	; case 49
  3004  000960  B4D8               	btfsc	status,2,c
  3005  000962  D7E4               	goto	l239
  3006  000964  0A03               	xorlw	3	; case 50
  3007  000966  B4D8               	btfsc	status,2,c
  3008  000968  D7E8               	goto	l240
  3009  00096A  0A01               	xorlw	1	; case 51
  3010  00096C  B4D8               	btfsc	status,2,c
  3011  00096E  D7EC               	goto	l241
  3012                           
  3013                           ;main.c: 463: break;
  3014  000970  D064               	goto	l2199
  3015  000972                     l2171:
  3016                           
  3017                           ;main.c: 466: for(iterator = 0; iterator < 5; iterator++){
  3018  000972  0E00               	movlw	0
  3019  000974  6E29               	movwf	trataComando@iterator+1,c
  3020  000976  0E00               	movlw	0
  3021  000978  6E28               	movwf	trataComando@iterator,c
  3022  00097A                     l2173:
  3023  00097A  BE29               	btfsc	trataComando@iterator+1,7,c
  3024  00097C  D006               	goto	l2177
  3025  00097E  5029               	movf	trataComando@iterator+1,w,c
  3026  000980  E147               	bnz	l2193
  3027  000982  0E05               	movlw	5
  3028  000984  5C28               	subwf	trataComando@iterator,w,c
  3029  000986  B0D8               	btfsc	status,0,c
  3030  000988  D043               	goto	l2193
  3031  00098A                     l2177:
  3032                           
  3033                           ;main.c: 467: memcpy(&BUFFRESP[iterator], &BUFFCOM[iterator], sizeof(BUFFCOM[iterator]))
      +                          ;
  3034  00098A  0E7E               	movlw	low _BUFFRESP
  3035  00098C  2428               	addwf	trataComando@iterator,w,c
  3036  00098E  6E12               	movwf	memcpy@d1,c
  3037  000990  0E00               	movlw	high _BUFFRESP
  3038  000992  2029               	addwfc	trataComando@iterator+1,w,c
  3039  000994  6E13               	movwf	memcpy@d1+1,c
  3040  000996  0E3E               	movlw	low _BUFFCOM
  3041  000998  2428               	addwf	trataComando@iterator,w,c
  3042  00099A  6E26               	movwf	??_trataComando& (0+255),c
  3043  00099C  0E00               	movlw	high _BUFFCOM
  3044  00099E  2029               	addwfc	trataComando@iterator+1,w,c
  3045  0009A0  6E27               	movwf	(??_trataComando+1)& (0+255),c
  3046  0009A2  C026  F014         	movff	??_trataComando,memcpy@s1
  3047  0009A6  C027  F015         	movff	??_trataComando+1,memcpy@s1+1
  3048  0009AA  5014               	movf	memcpy@s1,w,c
  3049  0009AC  1015               	iorwf	memcpy@s1+1,w,c
  3050  0009AE  A4D8               	btfss	status,2,c
  3051  0009B0  0E20               	movlw	32
  3052  0009B2  6E16               	movwf	memcpy@s1+2,c
  3053  0009B4  0E00               	movlw	0
  3054  0009B6  6E18               	movwf	memcpy@n+1,c
  3055  0009B8  0E01               	movlw	1
  3056  0009BA  6E17               	movwf	memcpy@n,c
  3057  0009BC  ECC0  F007         	call	_memcpy	;wreg free
  3058  0009C0  4A28               	infsnz	trataComando@iterator,f,c
  3059  0009C2  2A29               	incf	trataComando@iterator+1,f,c
  3060  0009C4  D7DA               	goto	l2173
  3061  0009C6                     l2183:
  3062                           
  3063                           ;main.c: 473: versao = BUFFCOM[2]-48;
  3064  0009C6  5040               	movf	_BUFFCOM+2,w,c
  3065  0009C8  0FD0               	addlw	208
  3066  0009CA  6E4D               	movwf	_versao,c
  3067                           
  3068                           ;main.c: 474: revisao = BUFFCOM[3]-48;
  3069  0009CC  5041               	movf	_BUFFCOM+3,w,c
  3070  0009CE  0FD0               	addlw	208
  3071  0009D0  6E4C               	movwf	_revisao,c
  3072                           
  3073                           ;main.c: 475: break;
  3074  0009D2  D033               	goto	l2199
  3075  0009D4                     l2185:
  3076                           
  3077                           ;main.c: 479: horaAtual.h = (BUFFCOM[2]-48);
  3078  0009D4  5040               	movf	_BUFFCOM+2,w,c
  3079  0009D6  0FD0               	addlw	208
  3080  0009D8  6E2E               	movwf	_horaAtual,c
  3081                           
  3082                           ;main.c: 480: horaAtual.m = (BUFFCOM[3]-48);
  3083  0009DA  5041               	movf	_BUFFCOM+3,w,c
  3084  0009DC  0FD0               	addlw	208
  3085  0009DE  6E2F               	movwf	_horaAtual+1,c
  3086                           
  3087                           ;main.c: 481: horaAtual.s = (BUFFCOM[4]-48);
  3088  0009E0  5042               	movf	_BUFFCOM+4,w,c
  3089  0009E2  0FD0               	addlw	208
  3090  0009E4  6E30               	movwf	_horaAtual+2,c
  3091                           
  3092                           ;main.c: 482: break;
  3093  0009E6  D029               	goto	l2199
  3094  0009E8                     l2187:
  3095                           
  3096                           ;main.c: 486: dia = BUFFCOM[2]-48;
  3097  0009E8  5040               	movf	_BUFFCOM+2,w,c
  3098  0009EA  0FD0               	addlw	208
  3099  0009EC  6E4A               	movwf	_dia,c
  3100                           
  3101                           ;main.c: 487: mes = BUFFCOM[3]-48;
  3102  0009EE  5041               	movf	_BUFFCOM+3,w,c
  3103  0009F0  0FD0               	addlw	208
  3104  0009F2  6E49               	movwf	_mes,c
  3105                           
  3106                           ;main.c: 488: ano = BUFFCOM[4]-48;
  3107  0009F4  0ED0               	movlw	208
  3108  0009F6  2442               	addwf	_BUFFCOM+4,w,c
  3109  0009F8  6E45               	movwf	_ano,c
  3110  0009FA  6A46               	clrf	_ano+1,c
  3111  0009FC  0EFF               	movlw	255
  3112  0009FE  2246               	addwfc	_ano+1,f,c
  3113                           
  3114                           ;main.c: 489: break;
  3115  000A00  D01C               	goto	l2199
  3116  000A02                     l2189:
  3117                           
  3118                           ;main.c: 493: desp_hora = BUFFCOM[2]-48;
  3119  000A02  5040               	movf	_BUFFCOM+2,w,c
  3120  000A04  0FD0               	addlw	208
  3121  000A06  6E48               	movwf	_desp_hora,c
  3122                           
  3123                           ;main.c: 494: desp_min = BUFFCOM[3]-48;
  3124  000A08  5041               	movf	_BUFFCOM+3,w,c
  3125  000A0A  0FD0               	addlw	208
  3126  000A0C  6E47               	movwf	_desp_min,c
  3127                           
  3128                           ;main.c: 498: }
  3129                           
  3130                           ;main.c: 497: break;
  3131                           
  3132                           ;main.c: 496: default:
  3133  000A0E  D015               	goto	l2199
  3134  000A10                     l2193:
  3135  000A10  503F               	movf	_BUFFCOM+1,w,c
  3136                           
  3137                           ; Switch size 1, requested type "space"
  3138                           ; Number of cases is 4, Range of values is 48 to 51
  3139                           ; switch strategies available:
  3140                           ; Name         Instructions Cycles
  3141                           ; simple_byte           13     7 (average)
  3142                           ;	Chosen strategy is simple_byte
  3143  000A12  0A30               	xorlw	48	; case 48
  3144  000A14  B4D8               	btfsc	status,2,c
  3145  000A16  D7D7               	goto	l2183
  3146  000A18  0A01               	xorlw	1	; case 49
  3147  000A1A  B4D8               	btfsc	status,2,c
  3148  000A1C  D7DB               	goto	l2185
  3149  000A1E  0A03               	xorlw	3	; case 50
  3150  000A20  B4D8               	btfsc	status,2,c
  3151  000A22  D7E2               	goto	l2187
  3152  000A24  0A01               	xorlw	1	; case 51
  3153  000A26  B4D8               	btfsc	status,2,c
  3154  000A28  D7EC               	goto	l2189
  3155                           
  3156                           ;main.c: 500: }
  3157                           
  3158                           ;main.c: 499: break;
  3159  000A2A  D007               	goto	l2199
  3160  000A2C                     l2197:
  3161  000A2C  503E               	movf	_BUFFCOM,w,c
  3162                           
  3163                           ; Switch size 1, requested type "space"
  3164                           ; Number of cases is 2, Range of values is 49 to 50
  3165                           ; switch strategies available:
  3166                           ; Name         Instructions Cycles
  3167                           ; simple_byte            7     4 (average)
  3168                           ;	Chosen strategy is simple_byte
  3169  000A2E  0A31               	xorlw	49	; case 49
  3170  000A30  B4D8               	btfsc	status,2,c
  3171  000A32  D71E               	goto	l2163
  3172  000A34  0A03               	xorlw	3	; case 50
  3173  000A36  B4D8               	btfsc	status,2,c
  3174  000A38  D79C               	goto	l2171
  3175  000A3A                     l2199:
  3176                           
  3177                           ;main.c: 501: calculaCRCBUFFRESP();
  3178  000A3A  EC17  F007         	call	_calculaCRCBUFFRESP	;wreg free
  3179  000A3E  0012               	return		;funcret
  3180  000A40                     __end_of_trataComando:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           prodh	equ	0xFF4
  3187                           prodl	equ	0xFF3
  3188                           intcon	equ	0xFF2
  3189                           indf0	equ	0xFEF
  3190                           postinc0	equ	0xFEE
  3191                           fsr0h	equ	0xFEA
  3192                           fsr0l	equ	0xFE9
  3193                           wreg	equ	0xFE8
  3194                           postdec1	equ	0xFE5
  3195                           fsr1l	equ	0xFE1
  3196                           indf2	equ	0xFDF
  3197                           postinc2	equ	0xFDE
  3198                           postdec2	equ	0xFDD
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _calculaCRCBUFFRESP *****************
  3204 ;; Defined at:
  3205 ;;		line 412 in file "main.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  crc             2   35[COMRAM] unsigned int 
  3210 ;;  crc2            1   34[COMRAM] unsigned char 
  3211 ;;  crc1            1   33[COMRAM] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3221 ;;      Params:         0       0       0       0       0       0       0       0       0
  3222 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3223 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3224 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3225 ;;Total ram usage:        7 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    2
  3228 ;; This function calls:
  3229 ;;		_crc16
  3230 ;;		_memcpy
  3231 ;; This function is called by:
  3232 ;;		_trataComando
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text18
  3237  000E2E                     __ptext18:
  3238                           	opt stack 0
  3239  000E2E                     _calculaCRCBUFFRESP:
  3240                           	opt stack 26
  3241                           
  3242                           ;main.c: 413: unsigned int crc = crc16(BUFFCOM, 5);
  3243                           
  3244                           ;incstack = 0
  3245  000E2E  0E3E               	movlw	low _BUFFCOM
  3246  000E30  6E12               	movwf	crc16@data_p,c
  3247  000E32  0E00               	movlw	high _BUFFCOM
  3248  000E34  6E13               	movwf	crc16@data_p+1,c
  3249  000E36  0E00               	movlw	0
  3250  000E38  6E15               	movwf	crc16@length+1,c
  3251  000E3A  0E05               	movlw	5
  3252  000E3C  6E14               	movwf	crc16@length,c
  3253  000E3E  ECD1  F005         	call	_crc16	;wreg free
  3254  000E42  C012  F024         	movff	?_crc16,calculaCRCBUFFRESP@crc
  3255  000E46  C013  F025         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  3256                           
  3257                           ;main.c: 414: unsigned char crc1 = crc >> 8;
  3258  000E4A  5025               	movf	calculaCRCBUFFRESP@crc+1,w,c
  3259  000E4C  6E22               	movwf	calculaCRCBUFFRESP@crc1,c
  3260                           
  3261                           ;main.c: 415: unsigned char crc2 = crc & 0xFF;
  3262  000E4E  C024  F023         	movff	calculaCRCBUFFRESP@crc,calculaCRCBUFFRESP@crc2
  3263                           
  3264                           ;main.c: 416: memcpy(&BUFFCOM[5], crc1, sizeof(BUFFCOM[5]));
  3265  000E52  0E43               	movlw	low (_BUFFCOM+5)
  3266  000E54  6E12               	movwf	memcpy@d1,c
  3267  000E56  0E00               	movlw	high (_BUFFCOM+5)
  3268  000E58  6E13               	movwf	memcpy@d1+1,c
  3269  000E5A  5022               	movf	calculaCRCBUFFRESP@crc1,w,c
  3270  000E5C  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3271  000E5E  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3272  000E60  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3273  000E62  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3274  000E66  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3275  000E6A  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3276  000E6E  0E00               	movlw	0
  3277  000E70  6E18               	movwf	memcpy@n+1,c
  3278  000E72  0E01               	movlw	1
  3279  000E74  6E17               	movwf	memcpy@n,c
  3280  000E76  ECC0  F007         	call	_memcpy	;wreg free
  3281                           
  3282                           ;main.c: 417: memcpy(&BUFFCOM[6], crc2, sizeof(BUFFCOM[6]));
  3283  000E7A  0E44               	movlw	low (_BUFFCOM+6)
  3284  000E7C  6E12               	movwf	memcpy@d1,c
  3285  000E7E  0E00               	movlw	high (_BUFFCOM+6)
  3286  000E80  6E13               	movwf	memcpy@d1+1,c
  3287  000E82  5023               	movf	calculaCRCBUFFRESP@crc2,w,c
  3288  000E84  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3289  000E86  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3290  000E88  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3291  000E8A  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3292  000E8E  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3293  000E92  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3294  000E96  0E00               	movlw	0
  3295  000E98  6E18               	movwf	memcpy@n+1,c
  3296  000E9A  0E01               	movlw	1
  3297  000E9C  6E17               	movwf	memcpy@n,c
  3298  000E9E  ECC0  F007         	call	_memcpy	;wreg free
  3299                           
  3300                           ;main.c: 418: estado = 3;
  3301  000EA2  0E03               	movlw	3
  3302  000EA4  6E3C               	movwf	_estado,c
  3303  000EA6  0012               	return		;funcret
  3304  000EA8                     __end_of_calculaCRCBUFFRESP:
  3305                           	opt stack 0
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodh	equ	0xFF4
  3311                           prodl	equ	0xFF3
  3312                           intcon	equ	0xFF2
  3313                           indf0	equ	0xFEF
  3314                           postinc0	equ	0xFEE
  3315                           fsr0h	equ	0xFEA
  3316                           fsr0l	equ	0xFE9
  3317                           wreg	equ	0xFE8
  3318                           postdec1	equ	0xFE5
  3319                           fsr1l	equ	0xFE1
  3320                           indf2	equ	0xFDF
  3321                           postinc2	equ	0xFDE
  3322                           postdec2	equ	0xFDD
  3323                           fsr2h	equ	0xFDA
  3324                           fsr2l	equ	0xFD9
  3325                           status	equ	0xFD8
  3326                           
  3327 ;; *************** function _memcpy *****************
  3328 ;; Defined at:
  3329 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  d1              2   17[COMRAM] PTR void 
  3332 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3333 ;;  s1              3   19[COMRAM] PTR const void 
  3334 ;;		 -> ROM(32767), BUFFCOM(7), revisao(1), versao(1), 
  3335 ;;  n               2   22[COMRAM] unsigned int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  s               3   24[COMRAM] PTR const unsigned char 
  3338 ;;		 -> ROM(32767), BUFFCOM(7), revisao(1), versao(1), 
  3339 ;;  d               2   27[COMRAM] PTR unsigned char 
  3340 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  2   17[COMRAM] PTR void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3350 ;;      Params:         7       0       0       0       0       0       0       0       0
  3351 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3353 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3354 ;;Total ram usage:       12 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_calculaCRCBUFFRESP
  3361 ;;		_trataComando
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text19
  3366  000F80                     __ptext19:
  3367                           	opt stack 0
  3368  000F80                     _memcpy:
  3369                           	opt stack 27
  3370                           
  3371                           ;incstack = 0
  3372  000F80  C014  F019         	movff	memcpy@s1,memcpy@s
  3373  000F84  C015  F01A         	movff	memcpy@s1+1,memcpy@s+1
  3374  000F88  C016  F01B         	movff	memcpy@s1+2,memcpy@s+2
  3375  000F8C  C012  F01C         	movff	memcpy@d1,memcpy@d
  3376  000F90  C013  F01D         	movff	memcpy@d1+1,memcpy@d+1
  3377  000F94  D01D               	goto	l2023
  3378  000F96                     l2017:
  3379  000F96  C019  FFF6         	movff	memcpy@s,tblptrl
  3380  000F9A  C01A  FFF7         	movff	memcpy@s+1,tblptrh
  3381  000F9E  C01B  FFF8         	movff	memcpy@s+2,tblptru
  3382  000FA2  C01C  FFD9         	movff	memcpy@d,fsr2l
  3383  000FA6  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  3384  000FAA  BAF8               	btfsc	tblptru,5,c
  3385  000FAC  D003               	bra	u1037
  3386  000FAE  0008               	tblrd		*
  3387  000FB0  50F5               	movf	tablat,w,c
  3388  000FB2  D005               	bra	u1030
  3389  000FB4                     u1037:
  3390  000FB4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3391  000FB8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3392  000FBC  50EF               	movf	indf0,w,c
  3393  000FBE                     u1030:
  3394  000FBE  6EDF               	movwf	indf2,c
  3395  000FC0  0E01               	movlw	1
  3396  000FC2  2619               	addwf	memcpy@s,f,c
  3397  000FC4  0E00               	movlw	0
  3398  000FC6  221A               	addwfc	memcpy@s+1,f,c
  3399  000FC8  0E00               	movlw	0
  3400  000FCA  221B               	addwfc	memcpy@s+2,f,c
  3401  000FCC  4A1C               	infsnz	memcpy@d,f,c
  3402  000FCE  2A1D               	incf	memcpy@d+1,f,c
  3403  000FD0                     l2023:
  3404  000FD0  0617               	decf	memcpy@n,f,c
  3405  000FD2  A0D8               	btfss	status,0,c
  3406  000FD4  0618               	decf	memcpy@n+1,f,c
  3407  000FD6  2817               	incf	memcpy@n,w,c
  3408  000FD8  E1DE               	bnz	l2017
  3409  000FDA  2818               	incf	memcpy@n+1,w,c
  3410  000FDC  B4D8               	btfsc	status,2,c
  3411  000FDE  0012               	return	
  3412  000FE0  D7DA               	goto	l2017
  3413  000FE2                     __end_of_memcpy:
  3414                           	opt stack 0
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           prodh	equ	0xFF4
  3420                           prodl	equ	0xFF3
  3421                           intcon	equ	0xFF2
  3422                           indf0	equ	0xFEF
  3423                           postinc0	equ	0xFEE
  3424                           fsr0h	equ	0xFEA
  3425                           fsr0l	equ	0xFE9
  3426                           wreg	equ	0xFE8
  3427                           postdec1	equ	0xFE5
  3428                           fsr1l	equ	0xFE1
  3429                           indf2	equ	0xFDF
  3430                           postinc2	equ	0xFDE
  3431                           postdec2	equ	0xFDD
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436 ;; *************** function _crc16 *****************
  3437 ;; Defined at:
  3438 ;;		line 391 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  data_p          2   17[COMRAM] PTR unsigned char 
  3441 ;;		 -> BUFFCOM(7), 
  3442 ;;  length          2   19[COMRAM] unsigned short 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  crc             2   28[COMRAM] unsigned int 
  3445 ;;  data            2   25[COMRAM] unsigned int 
  3446 ;;  i               1   27[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2   17[COMRAM] unsigned short 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         4       0       0       0       0       0       0       0       0
  3457 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3459 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3460 ;;Total ram usage:       13 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_calculaCRCBUFFRESP
  3467 ;;		_verificaCRCBUFFCOM
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text20
  3472  000BA2                     __ptext20:
  3473                           	opt stack 0
  3474  000BA2                     _crc16:
  3475                           	opt stack 27
  3476                           
  3477                           ;main.c: 392: unsigned char i;
  3478                           ;main.c: 393: unsigned int data;
  3479                           ;main.c: 394: unsigned int crc = 0xffff;
  3480                           
  3481                           ;incstack = 0
  3482  000BA2  681D               	setf	crc16@crc,c
  3483  000BA4  681E               	setf	crc16@crc+1,c
  3484                           
  3485                           ;main.c: 395: if (length == 0)
  3486  000BA6  5014               	movf	crc16@length,w,c
  3487  000BA8  1015               	iorwf	crc16@length+1,w,c
  3488  000BAA  A4D8               	btfss	status,2,c
  3489  000BAC  D005               	goto	l1985
  3490                           
  3491                           ;main.c: 396: return (~crc);
  3492  000BAE  1C1D               	comf	crc16@crc,w,c
  3493  000BB0  6E12               	movwf	?_crc16,c
  3494  000BB2  1C1E               	comf	crc16@crc+1,w,c
  3495  000BB4  6E13               	movwf	?_crc16+1,c
  3496  000BB6  0012               	return	
  3497  000BB8                     l1985:
  3498                           
  3499                           ;main.c: 398: for (i=0, data=(unsigned int)0xff & *data_p++; i < 8; i++, data >>= 1){
  3500  000BB8  0E00               	movlw	0
  3501  000BBA  6E1C               	movwf	crc16@i,c
  3502  000BBC  C012  FFD9         	movff	crc16@data_p,fsr2l
  3503  000BC0  C013  FFDA         	movff	crc16@data_p+1,fsr2h
  3504  000BC4  50DF               	movf	indf2,w,c
  3505  000BC6  6E16               	movwf	??_crc16& (0+255),c
  3506  000BC8  5016               	movf	??_crc16,w,c
  3507  000BCA  6E1A               	movwf	crc16@data,c
  3508  000BCC  6A1B               	clrf	crc16@data+1,c
  3509  000BCE  4A12               	infsnz	crc16@data_p,f,c
  3510  000BD0  2A13               	incf	crc16@data_p+1,f,c
  3511  000BD2                     l1991:
  3512  000BD2  0E07               	movlw	7
  3513  000BD4  641C               	cpfsgt	crc16@i,c
  3514  000BD6  D001               	goto	l1995
  3515  000BD8  D028               	goto	l2003
  3516  000BDA                     l1995:
  3517                           
  3518                           ;main.c: 399: if ((crc & 0x0001) ^ (data & 0x0001))
  3519  000BDA  0E01               	movlw	1
  3520  000BDC  141A               	andwf	crc16@data,w,c
  3521  000BDE  6E16               	movwf	??_crc16& (0+255),c
  3522  000BE0  0E00               	movlw	0
  3523  000BE2  141B               	andwf	crc16@data+1,w,c
  3524  000BE4  6E17               	movwf	(??_crc16+1)& (0+255),c
  3525  000BE6  0E01               	movlw	1
  3526  000BE8  141D               	andwf	crc16@crc,w,c
  3527  000BEA  6E18               	movwf	(??_crc16+2)& (0+255),c
  3528  000BEC  0E00               	movlw	0
  3529  000BEE  141E               	andwf	crc16@crc+1,w,c
  3530  000BF0  6E19               	movwf	(??_crc16+3)& (0+255),c
  3531  000BF2  5016               	movf	??_crc16,w,c
  3532  000BF4  1A18               	xorwf	??_crc16+2,f,c
  3533  000BF6  5017               	movf	??_crc16+1,w,c
  3534  000BF8  1A19               	xorwf	??_crc16+3,f,c
  3535  000BFA  5018               	movf	??_crc16+2,w,c
  3536  000BFC  1019               	iorwf	??_crc16+3,w,c
  3537  000BFE  B4D8               	btfsc	status,2,c
  3538  000C00  D00C               	goto	l1999
  3539                           
  3540                           ;main.c: 400: crc = (crc >> 1) ^ 0x8408;
  3541  000C02  90D8               	bcf	status,0,c
  3542  000C04  301E               	rrcf	crc16@crc+1,w,c
  3543  000C06  6E17               	movwf	(??_crc16+1)& (0+255),c
  3544  000C08  301D               	rrcf	crc16@crc,w,c
  3545  000C0A  6E16               	movwf	??_crc16& (0+255),c
  3546  000C0C  0E08               	movlw	8
  3547  000C0E  1816               	xorwf	??_crc16,w,c
  3548  000C10  6E1D               	movwf	crc16@crc,c
  3549  000C12  0E84               	movlw	132
  3550  000C14  1817               	xorwf	??_crc16+1,w,c
  3551  000C16  6E1E               	movwf	crc16@crc+1,c
  3552  000C18  D003               	goto	l227
  3553  000C1A                     l1999:
  3554                           
  3555                           ;main.c: 401: else crc >>= 1;
  3556  000C1A  90D8               	bcf	status,0,c
  3557  000C1C  321E               	rrcf	crc16@crc+1,f,c
  3558  000C1E  321D               	rrcf	crc16@crc,f,c
  3559  000C20                     l227:
  3560  000C20  2A1C               	incf	crc16@i,f,c
  3561  000C22  90D8               	bcf	status,0,c
  3562  000C24  321B               	rrcf	crc16@data+1,f,c
  3563  000C26  321A               	rrcf	crc16@data,f,c
  3564  000C28  D7D4               	goto	l1991
  3565  000C2A                     l2003:
  3566                           
  3567                           ;main.c: 402: }
  3568                           ;main.c: 403: } while (--length);
  3569  000C2A  0614               	decf	crc16@length,f,c
  3570  000C2C  A0D8               	btfss	status,0,c
  3571  000C2E  0615               	decf	crc16@length+1,f,c
  3572  000C30  5014               	movf	crc16@length,w,c
  3573  000C32  1015               	iorwf	crc16@length+1,w,c
  3574  000C34  A4D8               	btfss	status,2,c
  3575  000C36  D7C0               	goto	l1985
  3576                           
  3577                           ;main.c: 405: crc = ~crc;
  3578  000C38  1E1D               	comf	crc16@crc,f,c
  3579  000C3A  1E1E               	comf	crc16@crc+1,f,c
  3580                           
  3581                           ;main.c: 406: data = crc;
  3582  000C3C  C01D  F01A         	movff	crc16@crc,crc16@data
  3583  000C40  C01E  F01B         	movff	crc16@crc+1,crc16@data+1
  3584                           
  3585                           ;main.c: 407: crc = (crc << 8) | (data >> 8 & 0xff);
  3586  000C44  C01A  F016         	movff	crc16@data,??_crc16
  3587  000C48  C01B  F017         	movff	crc16@data+1,??_crc16+1
  3588  000C4C  C017  F016         	movff	??_crc16+1,??_crc16
  3589  000C50  6A17               	clrf	??_crc16+1,c
  3590  000C52  5016               	movf	??_crc16,w,c
  3591  000C54  C01D  F018         	movff	crc16@crc,??_crc16+2
  3592  000C58  C01E  F019         	movff	crc16@crc+1,??_crc16+3
  3593  000C5C  C018  F019         	movff	??_crc16+2,??_crc16+3
  3594  000C60  6A18               	clrf	??_crc16+2,c
  3595  000C62  1018               	iorwf	??_crc16+2,w,c
  3596  000C64  6E1D               	movwf	crc16@crc,c
  3597  000C66  5019               	movf	??_crc16+3,w,c
  3598  000C68  6E1E               	movwf	crc16@crc+1,c
  3599                           
  3600                           ;main.c: 408: return (crc);
  3601  000C6A  C01D  F012         	movff	crc16@crc,?_crc16
  3602  000C6E  C01E  F013         	movff	crc16@crc+1,?_crc16+1
  3603  000C72  0012               	return	
  3604  000C74                     __end_of_crc16:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           prodh	equ	0xFF4
  3611                           prodl	equ	0xFF3
  3612                           intcon	equ	0xFF2
  3613                           indf0	equ	0xFEF
  3614                           postinc0	equ	0xFEE
  3615                           fsr0h	equ	0xFEA
  3616                           fsr0l	equ	0xFE9
  3617                           wreg	equ	0xFE8
  3618                           postdec1	equ	0xFE5
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           postinc2	equ	0xFDE
  3622                           postdec2	equ	0xFDD
  3623                           fsr2h	equ	0xFDA
  3624                           fsr2l	equ	0xFD9
  3625                           status	equ	0xFD8
  3626                           
  3627 ;; *************** function _enviaByte *****************
  3628 ;; Defined at:
  3629 ;;		line 548 in file "main.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  BYTE            1    wreg     unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  BYTE            1   17[COMRAM] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0
  3644 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3646 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3647 ;;Total ram usage:        1 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_maquinaEstado
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text21
  3658  001410                     __ptext21:
  3659                           	opt stack 0
  3660  001410                     _enviaByte:
  3661                           	opt stack 28
  3662                           
  3663                           ;incstack = 0
  3664                           ;enviaByte@BYTE stored from wreg
  3665  001410  6E12               	movwf	enviaByte@BYTE,c
  3666  001412                     l276:
  3667  001412  A89E               	btfss	3998,4,c	;volatile
  3668  001414  D7FE               	goto	l276
  3669                           
  3670                           ;main.c: 550: TXREG = BYTE;
  3671  001416  C012  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  3672                           
  3673                           ;main.c: 552: if(BYTE==0x05)
  3674  00141A  0E05               	movlw	5
  3675  00141C  1812               	xorwf	enviaByte@BYTE,w,c
  3676  00141E  A4D8               	btfss	status,2,c
  3677  001420  D003               	goto	l1533
  3678                           
  3679                           ;main.c: 553: estado = 2;
  3680  001422  0E02               	movlw	2
  3681  001424  6E3C               	movwf	_estado,c
  3682  001426  0012               	return	
  3683  001428                     l1533:
  3684                           
  3685                           ;main.c: 554: else
  3686                           ;main.c: 555: estado = 0;
  3687  001428  0E00               	movlw	0
  3688  00142A  6E3C               	movwf	_estado,c
  3689  00142C  0012               	return	
  3690  00142E                     __end_of_enviaByte:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           intcon	equ	0xFF2
  3699                           indf0	equ	0xFEF
  3700                           postinc0	equ	0xFEE
  3701                           fsr0h	equ	0xFEA
  3702                           fsr0l	equ	0xFE9
  3703                           wreg	equ	0xFE8
  3704                           postdec1	equ	0xFE5
  3705                           fsr1l	equ	0xFE1
  3706                           indf2	equ	0xFDF
  3707                           postinc2	equ	0xFDE
  3708                           postdec2	equ	0xFDD
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function _init_XLCD *****************
  3714 ;; Defined at:
  3715 ;;		line 271 in file "main.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3732 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3733 ;;Total ram usage:        0 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    5
  3736 ;; This function calls:
  3737 ;;		_BusyXLCD
  3738 ;;		_OpenXLCD
  3739 ;;		_WriteCmdXLCD
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text22
  3746  00142E                     __ptext22:
  3747                           	opt stack 0
  3748  00142E                     _init_XLCD:
  3749                           	opt stack 25
  3750                           
  3751                           ;main.c: 272: OpenXLCD(0b00101100&0b00111000);
  3752                           
  3753                           ;incstack = 0
  3754  00142E  0E28               	movlw	40
  3755  001430  EC3A  F006         	call	_OpenXLCD
  3756  001434                     l2269:
  3757  001434  EC65  F009         	call	_BusyXLCD	;wreg free
  3758  001438  0900               	iorlw	0
  3759  00143A  A4D8               	btfss	status,2,c
  3760  00143C  D7FB               	goto	l2269
  3761                           
  3762                           ;main.c: 274: WriteCmdXLCD(0x06);
  3763  00143E  0E06               	movlw	6
  3764  001440  EC29  F009         	call	_WriteCmdXLCD
  3765                           
  3766                           ;main.c: 275: WriteCmdXLCD(0x0C);
  3767  001444  0E0C               	movlw	12
  3768  001446  EC29  F009         	call	_WriteCmdXLCD
  3769  00144A  0012               	return		;funcret
  3770  00144C                     __end_of_init_XLCD:
  3771                           	opt stack 0
  3772                           tblptru	equ	0xFF8
  3773                           tblptrh	equ	0xFF7
  3774                           tblptrl	equ	0xFF6
  3775                           tablat	equ	0xFF5
  3776                           prodh	equ	0xFF4
  3777                           prodl	equ	0xFF3
  3778                           intcon	equ	0xFF2
  3779                           indf0	equ	0xFEF
  3780                           postinc0	equ	0xFEE
  3781                           fsr0h	equ	0xFEA
  3782                           fsr0l	equ	0xFE9
  3783                           wreg	equ	0xFE8
  3784                           postdec1	equ	0xFE5
  3785                           fsr1l	equ	0xFE1
  3786                           indf2	equ	0xFDF
  3787                           postinc2	equ	0xFDE
  3788                           postdec2	equ	0xFDD
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _OpenXLCD *****************
  3794 ;; Defined at:
  3795 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  lcdtype         1    wreg     unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  lcdtype         1   22[COMRAM] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0
  3810 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3812 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3813 ;;Total ram usage:        1 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    4
  3816 ;; This function calls:
  3817 ;;		_BusyXLCD
  3818 ;;		_Delay10KTCYx
  3819 ;;		_DelayPORXLCD
  3820 ;;		_SetDDRamAddr
  3821 ;;		_WriteCmdXLCD
  3822 ;; This function is called by:
  3823 ;;		_init_XLCD
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text23
  3828  000C74                     __ptext23:
  3829                           	opt stack 0
  3830  000C74                     _OpenXLCD:
  3831                           	opt stack 25
  3832                           
  3833                           ;incstack = 0
  3834                           ;OpenXLCD@lcdtype stored from wreg
  3835  000C74  6E17               	movwf	OpenXLCD@lcdtype,c
  3836  000C76  0EF0               	movlw	240
  3837  000C78  1681               	andwf	3969,f,c	;volatile
  3838  000C7A  0EF0               	movlw	240
  3839  000C7C  1693               	andwf	3987,f,c	;volatile
  3840  000C7E  9C93               	bcf	3987,6,c	;volatile
  3841  000C80  9A93               	bcf	3987,5,c	;volatile
  3842  000C82  9893               	bcf	3987,4,c	;volatile
  3843  000C84  9C8A               	bcf	3978,6,c	;volatile
  3844  000C86  9A8A               	bcf	3978,5,c	;volatile
  3845  000C88  988A               	bcf	3978,4,c	;volatile
  3846  000C8A  EC4B  F00A         	call	_DelayPORXLCD	;wreg free
  3847  000C8E  0E30               	movlw	48
  3848  000C90  EC29  F009         	call	_WriteCmdXLCD
  3849  000C94  0E05               	movlw	5
  3850  000C96  EC26  F00A         	call	_Delay10KTCYx
  3851  000C9A  0E30               	movlw	48
  3852  000C9C  EC29  F009         	call	_WriteCmdXLCD
  3853  000CA0  0E01               	movlw	1
  3854  000CA2  EC26  F00A         	call	_Delay10KTCYx
  3855  000CA6  0E32               	movlw	50
  3856  000CA8  EC29  F009         	call	_WriteCmdXLCD
  3857  000CAC                     l2133:
  3858  000CAC  EC65  F009         	call	_BusyXLCD	;wreg free
  3859  000CB0  0900               	iorlw	0
  3860  000CB2  A4D8               	btfss	status,2,c
  3861  000CB4  D7FB               	goto	l2133
  3862  000CB6                     l2135:
  3863  000CB6  EC65  F009         	call	_BusyXLCD	;wreg free
  3864  000CBA  0900               	iorlw	0
  3865  000CBC  A4D8               	btfss	status,2,c
  3866  000CBE  D7FB               	goto	l2135
  3867  000CC0  5017               	movf	OpenXLCD@lcdtype,w,c
  3868  000CC2  EC29  F009         	call	_WriteCmdXLCD
  3869  000CC6                     l2139:
  3870  000CC6  EC65  F009         	call	_BusyXLCD	;wreg free
  3871  000CCA  0900               	iorlw	0
  3872  000CCC  A4D8               	btfss	status,2,c
  3873  000CCE  D7FB               	goto	l2139
  3874  000CD0  0E08               	movlw	8
  3875  000CD2  EC29  F009         	call	_WriteCmdXLCD
  3876  000CD6                     l2143:
  3877  000CD6  EC65  F009         	call	_BusyXLCD	;wreg free
  3878  000CDA  0900               	iorlw	0
  3879  000CDC  A4D8               	btfss	status,2,c
  3880  000CDE  D7FB               	goto	l2143
  3881  000CE0  0E0F               	movlw	15
  3882  000CE2  EC29  F009         	call	_WriteCmdXLCD
  3883  000CE6                     l2147:
  3884  000CE6  EC65  F009         	call	_BusyXLCD	;wreg free
  3885  000CEA  0900               	iorlw	0
  3886  000CEC  A4D8               	btfss	status,2,c
  3887  000CEE  D7FB               	goto	l2147
  3888  000CF0  0E01               	movlw	1
  3889  000CF2  EC29  F009         	call	_WriteCmdXLCD
  3890  000CF6                     l2151:
  3891  000CF6  EC65  F009         	call	_BusyXLCD	;wreg free
  3892  000CFA  0900               	iorlw	0
  3893  000CFC  A4D8               	btfss	status,2,c
  3894  000CFE  D7FB               	goto	l2151
  3895  000D00  0E04               	movlw	4
  3896  000D02  EC29  F009         	call	_WriteCmdXLCD
  3897  000D06                     l2155:
  3898  000D06  EC65  F009         	call	_BusyXLCD	;wreg free
  3899  000D0A  0900               	iorlw	0
  3900  000D0C  A4D8               	btfss	status,2,c
  3901  000D0E  D7FB               	goto	l2155
  3902  000D10  0E80               	movlw	128
  3903  000D12  EC73  F008         	call	_SetDDRamAddr
  3904  000D16  0012               	return	
  3905  000D18                     __end_of_OpenXLCD:
  3906                           	opt stack 0
  3907                           tblptru	equ	0xFF8
  3908                           tblptrh	equ	0xFF7
  3909                           tblptrl	equ	0xFF6
  3910                           tablat	equ	0xFF5
  3911                           prodh	equ	0xFF4
  3912                           prodl	equ	0xFF3
  3913                           intcon	equ	0xFF2
  3914                           indf0	equ	0xFEF
  3915                           postinc0	equ	0xFEE
  3916                           fsr0h	equ	0xFEA
  3917                           fsr0l	equ	0xFE9
  3918                           wreg	equ	0xFE8
  3919                           postdec1	equ	0xFE5
  3920                           fsr1l	equ	0xFE1
  3921                           indf2	equ	0xFDF
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _WriteCmdXLCD *****************
  3929 ;; Defined at:
  3930 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  cmd             1    wreg     unsigned char 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  cmd             1   18[COMRAM] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0
  3945 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3947 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3948 ;;Total ram usage:        1 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    3
  3951 ;; This function calls:
  3952 ;;		_DelayFor18TCY
  3953 ;; This function is called by:
  3954 ;;		_init_XLCD
  3955 ;;		_OpenXLCD
  3956 ;;		_limpa_tela
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text24
  3961  001252                     __ptext24:
  3962                           	opt stack 0
  3963  001252                     _WriteCmdXLCD:
  3964                           	opt stack 26
  3965                           
  3966                           ;incstack = 0
  3967                           ;WriteCmdXLCD@cmd stored from wreg
  3968  001252  6E13               	movwf	WriteCmdXLCD@cmd,c
  3969  001254  0EF0               	movlw	240
  3970  001256  1693               	andwf	3987,f,c	;volatile
  3971  001258  0EF0               	movlw	240
  3972  00125A  1681               	andwf	3969,f,c	;volatile
  3973  00125C  3813               	swapf	WriteCmdXLCD@cmd,w,c
  3974  00125E  0B0F               	andlw	15
  3975  001260  0B0F               	andlw	15
  3976  001262  1281               	iorwf	3969,f,c	;volatile
  3977  001264  9C8A               	bcf	3978,6,c	;volatile
  3978  001266  9A8A               	bcf	3978,5,c	;volatile
  3979  001268  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  3980  00126C  888A               	bsf	3978,4,c	;volatile
  3981  00126E  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  3982  001272  988A               	bcf	3978,4,c	;volatile
  3983  001274  0EF0               	movlw	240
  3984  001276  1681               	andwf	3969,f,c	;volatile
  3985  001278  5013               	movf	WriteCmdXLCD@cmd,w,c
  3986  00127A  0B0F               	andlw	15
  3987  00127C  1281               	iorwf	3969,f,c	;volatile
  3988  00127E  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  3989  001282  888A               	bsf	3978,4,c	;volatile
  3990  001284  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  3991  001288  988A               	bcf	3978,4,c	;volatile
  3992  00128A  0E0F               	movlw	15
  3993  00128C  1293               	iorwf	3987,f,c	;volatile
  3994  00128E  0012               	return	
  3995  001290                     __end_of_WriteCmdXLCD:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           prodh	equ	0xFF4
  4002                           prodl	equ	0xFF3
  4003                           intcon	equ	0xFF2
  4004                           indf0	equ	0xFEF
  4005                           postinc0	equ	0xFEE
  4006                           fsr0h	equ	0xFEA
  4007                           fsr0l	equ	0xFE9
  4008                           wreg	equ	0xFE8
  4009                           postdec1	equ	0xFE5
  4010                           fsr1l	equ	0xFE1
  4011                           indf2	equ	0xFDF
  4012                           postinc2	equ	0xFDE
  4013                           postdec2	equ	0xFDD
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _SetDDRamAddr *****************
  4019 ;; Defined at:
  4020 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  DDaddr          1    wreg     unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  DDaddr          1   21[COMRAM] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4036 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4037 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        4 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    3
  4041 ;; This function calls:
  4042 ;;		_DelayFor18TCY
  4043 ;; This function is called by:
  4044 ;;		_telaConfiguracaoDia
  4045 ;;		_telaConfiguracaoHora
  4046 ;;		_telaInicial
  4047 ;;		_OpenXLCD
  4048 ;;		_tela_1
  4049 ;;		_tela_4
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text25
  4054  0010E6                     __ptext25:
  4055                           	opt stack 0
  4056  0010E6                     _SetDDRamAddr:
  4057                           	opt stack 24
  4058                           
  4059                           ;incstack = 0
  4060                           ;SetDDRamAddr@DDaddr stored from wreg
  4061  0010E6  6E16               	movwf	SetDDRamAddr@DDaddr,c
  4062  0010E8  0EF0               	movlw	240
  4063  0010EA  1693               	andwf	3987,f,c	;volatile
  4064  0010EC  0EF0               	movlw	240
  4065  0010EE  1681               	andwf	3969,f,c	;volatile
  4066  0010F0  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4067  0010F2  6E13               	movwf	??_SetDDRamAddr& (0+255),c
  4068  0010F4  6A14               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4069  0010F6  8E13               	bsf	??_SetDDRamAddr,7,c
  4070  0010F8  0E04               	movlw	4
  4071  0010FA  6E15               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4072  0010FC                     u855:
  4073  0010FC  3414               	rlcf	??_SetDDRamAddr+1,w,c
  4074  0010FE  3214               	rrcf	??_SetDDRamAddr+1,f,c
  4075  001100  3213               	rrcf	??_SetDDRamAddr,f,c
  4076  001102  2E15               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4077  001104  D7FB               	goto	u855
  4078  001106  5013               	movf	??_SetDDRamAddr,w,c
  4079  001108  0B0F               	andlw	15
  4080  00110A  1281               	iorwf	3969,f,c	;volatile
  4081  00110C  9C8A               	bcf	3978,6,c	;volatile
  4082  00110E  9A8A               	bcf	3978,5,c	;volatile
  4083  001110  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4084  001114  888A               	bsf	3978,4,c	;volatile
  4085  001116  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4086  00111A  988A               	bcf	3978,4,c	;volatile
  4087  00111C  0EF0               	movlw	240
  4088  00111E  1681               	andwf	3969,f,c	;volatile
  4089  001120  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4090  001122  0B0F               	andlw	15
  4091  001124  1281               	iorwf	3969,f,c	;volatile
  4092  001126  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4093  00112A  888A               	bsf	3978,4,c	;volatile
  4094  00112C  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4095  001130  988A               	bcf	3978,4,c	;volatile
  4096  001132  0E0F               	movlw	15
  4097  001134  1293               	iorwf	3987,f,c	;volatile
  4098  001136  0012               	return	
  4099  001138                     __end_of_SetDDRamAddr:
  4100                           	opt stack 0
  4101                           tblptru	equ	0xFF8
  4102                           tblptrh	equ	0xFF7
  4103                           tblptrl	equ	0xFF6
  4104                           tablat	equ	0xFF5
  4105                           prodh	equ	0xFF4
  4106                           prodl	equ	0xFF3
  4107                           intcon	equ	0xFF2
  4108                           indf0	equ	0xFEF
  4109                           postinc0	equ	0xFEE
  4110                           fsr0h	equ	0xFEA
  4111                           fsr0l	equ	0xFE9
  4112                           wreg	equ	0xFE8
  4113                           postdec1	equ	0xFE5
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           postinc2	equ	0xFDE
  4117                           postdec2	equ	0xFDD
  4118                           fsr2h	equ	0xFDA
  4119                           fsr2l	equ	0xFD9
  4120                           status	equ	0xFD8
  4121                           
  4122 ;; *************** function _DelayPORXLCD *****************
  4123 ;; Defined at:
  4124 ;;		line 380 in file "main.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    2
  4145 ;; This function calls:
  4146 ;;		_Delay1KTCYx
  4147 ;; This function is called by:
  4148 ;;		_OpenXLCD
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text26
  4153  001496                     __ptext26:
  4154                           	opt stack 0
  4155  001496                     _DelayPORXLCD:
  4156                           	opt stack 26
  4157                           
  4158                           ;main.c: 381: Delay1KTCYx(180);
  4159                           
  4160                           ;incstack = 0
  4161  001496  0EB4               	movlw	180
  4162  001498  EC31  F00A         	call	_Delay1KTCYx
  4163  00149C  0012               	return	
  4164  00149E                     __end_of_DelayPORXLCD:
  4165                           	opt stack 0
  4166                           tblptru	equ	0xFF8
  4167                           tblptrh	equ	0xFF7
  4168                           tblptrl	equ	0xFF6
  4169                           tablat	equ	0xFF5
  4170                           prodh	equ	0xFF4
  4171                           prodl	equ	0xFF3
  4172                           intcon	equ	0xFF2
  4173                           indf0	equ	0xFEF
  4174                           postinc0	equ	0xFEE
  4175                           fsr0h	equ	0xFEA
  4176                           fsr0l	equ	0xFE9
  4177                           wreg	equ	0xFE8
  4178                           postdec1	equ	0xFE5
  4179                           fsr1l	equ	0xFE1
  4180                           indf2	equ	0xFDF
  4181                           postinc2	equ	0xFDE
  4182                           postdec2	equ	0xFDD
  4183                           fsr2h	equ	0xFDA
  4184                           fsr2l	equ	0xFD9
  4185                           status	equ	0xFD8
  4186                           
  4187 ;; *************** function _Delay1KTCYx *****************
  4188 ;; Defined at:
  4189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  unit            1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  unit            1   17[COMRAM] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4206 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_DelayPORXLCD
  4214 ;;		_DelayXLCD
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text27
  4219  001462                     __ptext27:
  4220                           	opt stack 0
  4221  001462                     _Delay1KTCYx:
  4222                           	opt stack 26
  4223                           
  4224                           ;incstack = 0
  4225                           ;Delay1KTCYx@unit stored from wreg
  4226  001462  6E12               	movwf	Delay1KTCYx@unit,c
  4227  001464  0EC8               	movlw	200
  4228  001466                     u1917:
  4229  001466  D000               	nop2	
  4230  001468  2EE8               	decfsz	wreg,f,c
  4231  00146A  D7FD               	bra	u1917
  4232  00146C  2E12               	decfsz	Delay1KTCYx@unit,f,c
  4233  00146E  D7FA               	goto	l1255
  4234  001470  0012               	return	
  4235  001472                     __end_of_Delay1KTCYx:
  4236                           	opt stack 0
  4237                           tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           prodh	equ	0xFF4
  4242                           prodl	equ	0xFF3
  4243                           intcon	equ	0xFF2
  4244                           indf0	equ	0xFEF
  4245                           postinc0	equ	0xFEE
  4246                           fsr0h	equ	0xFEA
  4247                           fsr0l	equ	0xFE9
  4248                           wreg	equ	0xFE8
  4249                           postdec1	equ	0xFE5
  4250                           fsr1l	equ	0xFE1
  4251                           indf2	equ	0xFDF
  4252                           postinc2	equ	0xFDE
  4253                           postdec2	equ	0xFDD
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function _Delay10KTCYx *****************
  4259 ;; Defined at:
  4260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  unit            1    wreg     unsigned char 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  unit            1   18[COMRAM] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0
  4275 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4276 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4277 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        2 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    1
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_OpenXLCD
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text28
  4289  00144C                     __ptext28:
  4290                           	opt stack 0
  4291  00144C                     _Delay10KTCYx:
  4292                           	opt stack 27
  4293                           
  4294                           ;incstack = 0
  4295                           ;Delay10KTCYx@unit stored from wreg
  4296  00144C  6E13               	movwf	Delay10KTCYx@unit,c
  4297  00144E  0E0D               	movlw	13
  4298  001450  6E12               	movwf	??_Delay10KTCYx& (0+255),c
  4299  001452  0EFC               	movlw	252
  4300  001454                     u1927:
  4301  001454  2EE8               	decfsz	wreg,f,c
  4302  001456  D7FE               	bra	u1927
  4303  001458  2E12               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4304  00145A  D7FC               	bra	u1927
  4305  00145C  2E13               	decfsz	Delay10KTCYx@unit,f,c
  4306  00145E  D7F7               	goto	l1373
  4307  001460  0012               	return	
  4308  001462                     __end_of_Delay10KTCYx:
  4309                           	opt stack 0
  4310                           tblptru	equ	0xFF8
  4311                           tblptrh	equ	0xFF7
  4312                           tblptrl	equ	0xFF6
  4313                           tablat	equ	0xFF5
  4314                           prodh	equ	0xFF4
  4315                           prodl	equ	0xFF3
  4316                           intcon	equ	0xFF2
  4317                           indf0	equ	0xFEF
  4318                           postinc0	equ	0xFEE
  4319                           fsr0h	equ	0xFEA
  4320                           fsr0l	equ	0xFE9
  4321                           wreg	equ	0xFE8
  4322                           postdec1	equ	0xFE5
  4323                           fsr1l	equ	0xFE1
  4324                           indf2	equ	0xFDF
  4325                           postinc2	equ	0xFDE
  4326                           postdec2	equ	0xFDD
  4327                           fsr2h	equ	0xFDA
  4328                           fsr2l	equ	0xFD9
  4329                           status	equ	0xFD8
  4330                           
  4331 ;; *************** function _BusyXLCD *****************
  4332 ;; Defined at:
  4333 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      unsigned char 
  4340 ;; Registers used:
  4341 ;;		wreg, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4350 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4351 ;;Total ram usage:        0 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    3
  4354 ;; This function calls:
  4355 ;;		_DelayFor18TCY
  4356 ;; This function is called by:
  4357 ;;		_init_XLCD
  4358 ;;		_OpenXLCD
  4359 ;;		_putrsXLCD
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text29
  4364  0012CA                     __ptext29:
  4365                           	opt stack 0
  4366  0012CA                     _BusyXLCD:
  4367                           	opt stack 23
  4368                           
  4369                           ;incstack = 0
  4370  0012CA  8C8A               	bsf	3978,6,c	;volatile
  4371  0012CC  9A8A               	bcf	3978,5,c	;volatile
  4372  0012CE  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4373  0012D2  888A               	bsf	3978,4,c	;volatile
  4374  0012D4  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4375  0012D8  A681               	btfss	3969,3,c	;volatile
  4376  0012DA  D00A               	goto	l326
  4377  0012DC  988A               	bcf	3978,4,c	;volatile
  4378  0012DE  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4379  0012E2  888A               	bsf	3978,4,c	;volatile
  4380  0012E4  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4381  0012E8  988A               	bcf	3978,4,c	;volatile
  4382  0012EA  9C8A               	bcf	3978,6,c	;volatile
  4383  0012EC  0E01               	movlw	1
  4384  0012EE  0012               	return	
  4385  0012F0                     l326:
  4386  0012F0  988A               	bcf	3978,4,c	;volatile
  4387  0012F2  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4388  0012F6  888A               	bsf	3978,4,c	;volatile
  4389  0012F8  EC4F  F00A         	call	_DelayFor18TCY	;wreg free
  4390  0012FC  988A               	bcf	3978,4,c	;volatile
  4391  0012FE  9C8A               	bcf	3978,6,c	;volatile
  4392  001300  0E00               	movlw	0
  4393  001302  0012               	return	
  4394  001304                     __end_of_BusyXLCD:
  4395                           	opt stack 0
  4396                           tblptru	equ	0xFF8
  4397                           tblptrh	equ	0xFF7
  4398                           tblptrl	equ	0xFF6
  4399                           tablat	equ	0xFF5
  4400                           prodh	equ	0xFF4
  4401                           prodl	equ	0xFF3
  4402                           intcon	equ	0xFF2
  4403                           indf0	equ	0xFEF
  4404                           postinc0	equ	0xFEE
  4405                           fsr0h	equ	0xFEA
  4406                           fsr0l	equ	0xFE9
  4407                           wreg	equ	0xFE8
  4408                           postdec1	equ	0xFE5
  4409                           fsr1l	equ	0xFE1
  4410                           indf2	equ	0xFDF
  4411                           postinc2	equ	0xFDE
  4412                           postdec2	equ	0xFDD
  4413                           fsr2h	equ	0xFDA
  4414                           fsr2l	equ	0xFD9
  4415                           status	equ	0xFD8
  4416                           
  4417 ;; *************** function _DelayFor18TCY *****************
  4418 ;; Defined at:
  4419 ;;		line 376 in file "main.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4433 ;;      Params:         0       0       0       0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    2
  4440 ;; This function calls:
  4441 ;;		_Delay10TCYx
  4442 ;; This function is called by:
  4443 ;;		_BusyXLCD
  4444 ;;		_SetDDRamAddr
  4445 ;;		_WriteCmdXLCD
  4446 ;;		_WriteDataXLCD
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text30
  4451  00149E                     __ptext30:
  4452                           	opt stack 0
  4453  00149E                     _DelayFor18TCY:
  4454                           	opt stack 23
  4455                           
  4456                           ;main.c: 377: Delay10TCYx(120);
  4457                           
  4458                           ;incstack = 0
  4459  00149E  0E78               	movlw	120
  4460  0014A0  EC39  F00A         	call	_Delay10TCYx
  4461  0014A4  0012               	return		;funcret
  4462  0014A6                     __end_of_DelayFor18TCY:
  4463                           	opt stack 0
  4464                           tblptru	equ	0xFF8
  4465                           tblptrh	equ	0xFF7
  4466                           tblptrl	equ	0xFF6
  4467                           tablat	equ	0xFF5
  4468                           prodh	equ	0xFF4
  4469                           prodl	equ	0xFF3
  4470                           intcon	equ	0xFF2
  4471                           indf0	equ	0xFEF
  4472                           postinc0	equ	0xFEE
  4473                           fsr0h	equ	0xFEA
  4474                           fsr0l	equ	0xFE9
  4475                           wreg	equ	0xFE8
  4476                           postdec1	equ	0xFE5
  4477                           fsr1l	equ	0xFE1
  4478                           indf2	equ	0xFDF
  4479                           postinc2	equ	0xFDE
  4480                           postdec2	equ	0xFDD
  4481                           fsr2h	equ	0xFDA
  4482                           fsr2l	equ	0xFD9
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _Delay10TCYx *****************
  4486 ;; Defined at:
  4487 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  unit            1    wreg     unsigned char 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  unit            1   17[COMRAM] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0
  4502 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4504 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4505 ;;Total ram usage:        1 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_DelayFor18TCY
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text31
  4516  001472                     __ptext31:
  4517                           	opt stack 0
  4518  001472                     _Delay10TCYx:
  4519                           	opt stack 23
  4520                           
  4521                           ;incstack = 0
  4522                           ;Delay10TCYx@unit stored from wreg
  4523  001472  6E12               	movwf	Delay10TCYx@unit,c
  4524  001474  0E03               	movlw	3
  4525  001476                     u1937:
  4526  001476  2EE8               	decfsz	wreg,f,c
  4527  001478  D7FE               	bra	u1937
  4528  00147A  F000               	nop	
  4529  00147C  2E12               	decfsz	Delay10TCYx@unit,f,c
  4530  00147E  D7FA               	goto	l1779
  4531  001480  0012               	return	
  4532  001482                     __end_of_Delay10TCYx:
  4533                           	opt stack 0
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodh	equ	0xFF4
  4539                           prodl	equ	0xFF3
  4540                           intcon	equ	0xFF2
  4541                           indf0	equ	0xFEF
  4542                           postinc0	equ	0xFEE
  4543                           fsr0h	equ	0xFEA
  4544                           fsr0l	equ	0xFE9
  4545                           wreg	equ	0xFE8
  4546                           postdec1	equ	0xFE5
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _despertar *****************
  4556 ;; Defined at:
  4557 ;;		line 260 in file "main.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text32
  4586  0013C8                     __ptext32:
  4587                           	opt stack 0
  4588  0013C8                     _despertar:
  4589                           	opt stack 29
  4590                           
  4591                           ;main.c: 261: if((horaAtual.h) == desp_hora && (horaAtual.m) == desp_min && despertou ==
      +                           0){
  4592                           
  4593                           ;incstack = 0
  4594  0013C8  5048               	movf	_desp_hora,w,c
  4595  0013CA  182E               	xorwf	_horaAtual,w,c
  4596  0013CC  A4D8               	btfss	status,2,c
  4597  0013CE  D009               	goto	l1631
  4598  0013D0  5047               	movf	_desp_min,w,c
  4599  0013D2  182F               	xorwf	_horaAtual+1,w,c
  4600  0013D4  A4D8               	btfss	status,2,c
  4601  0013D6  D005               	goto	l1631
  4602  0013D8  5038               	movf	_despertou,w,c
  4603  0013DA  A4D8               	btfss	status,2,c
  4604  0013DC  D002               	goto	l1631
  4605                           
  4606                           ;main.c: 262: PORTAbits.RA0 = 1;
  4607  0013DE  8080               	bsf	3968,0,c	;volatile
  4608                           
  4609                           ;main.c: 263: contador_alarme += 1;
  4610  0013E0  2A39               	incf	_contador_alarme,f,c
  4611  0013E2                     l1631:
  4612                           
  4613                           ;main.c: 264: }
  4614                           ;main.c: 265: if(contador_alarme >= 15){
  4615  0013E2  0E0E               	movlw	14
  4616  0013E4  6439               	cpfsgt	_contador_alarme,c
  4617  0013E6  0012               	return	
  4618                           
  4619                           ;main.c: 266: PORTAbits.RA0 = 0;
  4620  0013E8  9080               	bcf	3968,0,c	;volatile
  4621                           
  4622                           ;main.c: 267: despertou = 1;
  4623  0013EA  0E01               	movlw	1
  4624  0013EC  6E38               	movwf	_despertou,c
  4625  0013EE  0012               	return	
  4626  0013F0                     __end_of_despertar:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           indf0	equ	0xFEF
  4636                           postinc0	equ	0xFEE
  4637                           fsr0h	equ	0xFEA
  4638                           fsr0l	equ	0xFE9
  4639                           wreg	equ	0xFE8
  4640                           postdec1	equ	0xFE5
  4641                           fsr1l	equ	0xFE1
  4642                           indf2	equ	0xFDF
  4643                           postinc2	equ	0xFDE
  4644                           postdec2	equ	0xFDD
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _pic_isr *****************
  4650 ;; Defined at:
  4651 ;;		line 278 in file "main.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4667 ;;      Temps:         17       0       0       0       0       0       0       0       0
  4668 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:       17 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		Interrupt level 1
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	intcodelo
  4679  000018                     __pintcodelo:
  4680                           	opt stack 0
  4681  000018                     _pic_isr:
  4682                           	opt stack 23
  4683                           
  4684                           ;incstack = 0
  4685  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4686  00001A  CFD8 F001          	movff	status,??_pic_isr
  4687  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
  4688  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
  4689  000026  CFFA F004          	movff	pclath,??_pic_isr+3
  4690  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
  4691  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
  4692  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
  4693  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
  4694  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
  4695  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
  4696  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
  4697  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
  4698  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
  4699  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
  4700  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
  4701  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
  4702  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
  4703                           
  4704                           ;main.c: 279: if(TMR0IF){
  4705  00005E  A4F2               	btfss	intcon,2,c	;volatile
  4706  000060  D00E               	goto	i1l1707
  4707                           
  4708                           ;main.c: 280: TMR0 = 28021;
  4709  000062  0E6D               	movlw	109
  4710  000064  6ED7               	movwf	4055,c	;volatile
  4711  000066  0E75               	movlw	117
  4712  000068  6ED6               	movwf	4054,c	;volatile
  4713                           
  4714                           ;main.c: 282: INTCONbits.TMR0IF = 0;
  4715  00006A  94F2               	bcf	intcon,2,c	;volatile
  4716                           
  4717                           ;main.c: 283: contador_interrupcao++;
  4718  00006C  2A3B               	incf	_contador_interrupcao,f,c
  4719                           
  4720                           ;main.c: 284: if(contador_interrupcao == 20){
  4721  00006E  0E14               	movlw	20
  4722  000070  183B               	xorwf	_contador_interrupcao,w,c
  4723  000072  A4D8               	btfss	status,2,c
  4724  000074  D004               	goto	i1l1707
  4725                           
  4726                           ;main.c: 285: contador_um_segundo += 1;
  4727  000076  2A3A               	incf	_contador_um_segundo,f,c
  4728                           
  4729                           ;main.c: 286: contador_interrupcao = 0;
  4730  000078  0E00               	movlw	0
  4731  00007A  6E3B               	movwf	_contador_interrupcao,c
  4732                           
  4733                           ;main.c: 287: horaAtual.s+=1;
  4734  00007C  2A30               	incf	_horaAtual+2,f,c
  4735  00007E                     i1l1707:
  4736                           
  4737                           ;main.c: 288: }
  4738                           ;main.c: 289: }
  4739                           ;main.c: 291: if(PIR1bits.RCIF == 1){
  4740  00007E  AA9E               	btfss	3998,5,c	;volatile
  4741  000080  D01B               	goto	i1l201
  4742  000082                     i1l197:
  4743  000082  AA9E               	btfss	3998,5,c	;volatile
  4744  000084  D7FE               	goto	i1l197
  4745                           
  4746                           ;main.c: 293: BUFFCOM[i]= RCREG;
  4747  000086  0E3E               	movlw	low _BUFFCOM
  4748  000088  2435               	addwf	_i,w,c
  4749  00008A  6ED9               	movwf	fsr2l,c
  4750  00008C  0E00               	movlw	high _BUFFCOM
  4751  00008E  2036               	addwfc	_i+1,w,c
  4752  000090  6EDA               	movwf	fsr2h,c
  4753  000092  CFAE FFDF          	movff	4014,indf2	;volatile
  4754                           
  4755                           ;main.c: 294: i++;
  4756  000096  4A35               	infsnz	_i,f,c
  4757  000098  2A36               	incf	_i+1,f,c
  4758                           
  4759                           ;main.c: 295: if(i>6){
  4760  00009A  BE36               	btfsc	_i+1,7,c
  4761  00009C  D00D               	goto	i1l201
  4762  00009E  5036               	movf	_i+1,w,c
  4763  0000A0  E104               	bnz	i1u75_20
  4764  0000A2  0E07               	movlw	7
  4765  0000A4  5C35               	subwf	_i,w,c
  4766  0000A6  A0D8               	btfss	status,0,c
  4767  0000A8  D007               	goto	i1l201
  4768  0000AA                     i1u75_20:
  4769                           
  4770                           ;main.c: 296: PIR1bits.RCIF = 0;
  4771  0000AA  9A9E               	bcf	3998,5,c	;volatile
  4772                           
  4773                           ;main.c: 297: i = 0;
  4774  0000AC  0E00               	movlw	0
  4775  0000AE  6E36               	movwf	_i+1,c
  4776  0000B0  0E00               	movlw	0
  4777  0000B2  6E35               	movwf	_i,c
  4778                           
  4779                           ;main.c: 298: estado = 1;
  4780  0000B4  0E01               	movlw	1
  4781  0000B6  6E3C               	movwf	_estado,c
  4782  0000B8                     i1l201:
  4783  0000B8  C011  FFF5         	movff	??_pic_isr+16,tablat
  4784  0000BC  C010  FFF8         	movff	??_pic_isr+15,tblptru
  4785  0000C0  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
  4786  0000C4  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
  4787  0000C8  C00D  FFF4         	movff	??_pic_isr+12,prodh
  4788  0000CC  C00C  FFF3         	movff	??_pic_isr+11,prodl
  4789  0000D0  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
  4790  0000D4  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
  4791  0000D8  C009  FFE2         	movff	??_pic_isr+8,fsr1h
  4792  0000DC  C008  FFE1         	movff	??_pic_isr+7,fsr1l
  4793  0000E0  C007  FFEA         	movff	??_pic_isr+6,fsr0h
  4794  0000E4  C006  FFE9         	movff	??_pic_isr+5,fsr0l
  4795  0000E8  C005  FFFB         	movff	??_pic_isr+4,pclatu
  4796  0000EC  C004  FFFA         	movff	??_pic_isr+3,pclath
  4797  0000F0  C003  FFE0         	movff	??_pic_isr+2,bsr
  4798  0000F4  C002  FFE8         	movff	??_pic_isr+1,wreg
  4799  0000F8  C001  FFD8         	movff	??_pic_isr,status
  4800  0000FC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4801  0000FE  0010               	retfie	
  4802  000100                     __end_of_pic_isr:
  4803                           	opt stack 0
  4804                           pclatu	equ	0xFFB
  4805                           pclath	equ	0xFFA
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           intcon	equ	0xFF2
  4813                           indf0	equ	0xFEF
  4814                           postinc0	equ	0xFEE
  4815                           fsr0h	equ	0xFEA
  4816                           fsr0l	equ	0xFE9
  4817                           wreg	equ	0xFE8
  4818                           postdec1	equ	0xFE5
  4819                           fsr1h	equ	0xFE2
  4820                           fsr1l	equ	0xFE1
  4821                           bsr	equ	0xFE0
  4822                           indf2	equ	0xFDF
  4823                           postinc2	equ	0xFDE
  4824                           postdec2	equ	0xFDD
  4825                           fsr2h	equ	0xFDA
  4826                           fsr2l	equ	0xFD9
  4827                           status	equ	0xFD8
  4828                           pclatu	equ	0xFFB
  4829                           pclath	equ	0xFFA
  4830                           tblptru	equ	0xFF8
  4831                           tblptrh	equ	0xFF7
  4832                           tblptrl	equ	0xFF6
  4833                           tablat	equ	0xFF5
  4834                           prodh	equ	0xFF4
  4835                           prodl	equ	0xFF3
  4836                           intcon	equ	0xFF2
  4837                           indf0	equ	0xFEF
  4838                           postinc0	equ	0xFEE
  4839                           fsr0h	equ	0xFEA
  4840                           fsr0l	equ	0xFE9
  4841                           wreg	equ	0xFE8
  4842                           postdec1	equ	0xFE5
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           bsr	equ	0xFE0
  4846                           indf2	equ	0xFDF
  4847                           postinc2	equ	0xFDE
  4848                           postdec2	equ	0xFDD
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853                           	psect	rparam
  4854  0000                     pclatu	equ	0xFFB
  4855                           pclath	equ	0xFFA
  4856                           tblptru	equ	0xFF8
  4857                           tblptrh	equ	0xFF7
  4858                           tblptrl	equ	0xFF6
  4859                           tablat	equ	0xFF5
  4860                           prodh	equ	0xFF4
  4861                           prodl	equ	0xFF3
  4862                           intcon	equ	0xFF2
  4863                           indf0	equ	0xFEF
  4864                           postinc0	equ	0xFEE
  4865                           fsr0h	equ	0xFEA
  4866                           fsr0l	equ	0xFE9
  4867                           wreg	equ	0xFE8
  4868                           postdec1	equ	0xFE5
  4869                           fsr1h	equ	0xFE2
  4870                           fsr1l	equ	0xFE1
  4871                           bsr	equ	0xFE0
  4872                           indf2	equ	0xFDF
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879                           	psect	temp
  4880  00004E                     btemp:
  4881                           	opt stack 0
  4882  00004E                     	ds	1
  4883  0000                     int$flags	set	btemp
  4884                           pclatu	equ	0xFFB
  4885                           pclath	equ	0xFFA
  4886                           tblptru	equ	0xFF8
  4887                           tblptrh	equ	0xFF7
  4888                           tblptrl	equ	0xFF6
  4889                           tablat	equ	0xFF5
  4890                           prodh	equ	0xFF4
  4891                           prodl	equ	0xFF3
  4892                           intcon	equ	0xFF2
  4893                           indf0	equ	0xFEF
  4894                           postinc0	equ	0xFEE
  4895                           fsr0h	equ	0xFEA
  4896                           fsr0l	equ	0xFE9
  4897                           wreg	equ	0xFE8
  4898                           postdec1	equ	0xFE5
  4899                           fsr1h	equ	0xFE2
  4900                           fsr1l	equ	0xFE1
  4901                           bsr	equ	0xFE0
  4902                           indf2	equ	0xFDF
  4903                           postinc2	equ	0xFDE
  4904                           postdec2	equ	0xFDD
  4905                           fsr2h	equ	0xFDA
  4906                           fsr2l	equ	0xFD9
  4907                           status	equ	0xFD8


Data Sizes:
    Strings     98
    Constant    10
    Data        20
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      77
    BANK0           160     18      66
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    memcpy@s1	PTR const void  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), BUFFCOM(COMRAM[7]), revisao(COMRAM[1]), versao(COMRAM[1]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), BUFFCOM(COMRAM[7]), revisao(COMRAM[1]), versao(COMRAM[1]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[8]), STR_8(CODE[5]), STR_7(CODE[13]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_3(CODE[7]), buffer(BANK0[16]), STR_1(CODE[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[5]), STR_10(CODE[6]), STR_9(CODE[21]), STR_4(CODE[9]), 
		 -> STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _telaInicial->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _telaConfiguracaoHora->_SetDDRamAddr
    _telaConfiguracaoDia->_SetDDRamAddr
    _putrsXLCD->_WriteDataXLCD
    _maquinaEstado->_trataComando
    _verificaCRCBUFFCOM->_crc16
    _trataComando->_calculaCRCBUFFRESP
    _calculaCRCBUFFRESP->_crc16
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _telaInicial->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20942
                          _despertar
                          _init_XLCD
                      _maquinaEstado
                              _telas
                         _trata_data
                  _trata_despertador
                         _trata_hora
                        _troca_telas
 ---------------------------------------------------------------------------------
 (1) _troca_telas                                          2     2      0    5264
                                             37 COMRAM     2     2      0
                              _telas
 ---------------------------------------------------------------------------------
 (1) _trata_hora                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trata_despertador                                    2     2      0    5264
                                             37 COMRAM     2     2      0
                              _telas
 ---------------------------------------------------------------------------------
 (2) _telas                                                1     1      0    5264
                _telaConfiguracaoDia
               _telaConfiguracaoHora
                        _telaInicial
 ---------------------------------------------------------------------------------
 (3) _telaInicial                                          0     0      0    3202
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             35    17     18    2171
                                             29 COMRAM     8     8      0
                                              0 BANK0     18     0     18
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _telaConfiguracaoHora                                 0     0      0    1031
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (3) _telaConfiguracaoDia                                  0     0      0    1031
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (4) _putrsXLCD                                            2     0      2     965
                                             19 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (5) _WriteDataXLCD                                        1     1      0      66
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _trata_data                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0    4856
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   5     5      0     690
                                             30 COMRAM     5     5      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      68
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         4     4      0    4068
                                             37 COMRAM     4     4      0
                 _calculaCRCBUFFRESP
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   7     7      0    2322
                                             30 COMRAM     7     7      0
                              _crc16
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     5      7    1656
                                             17 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     575
                                             17 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      30
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     294
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     206
                                             22 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _SetDDRamAddr                                         4     4      0      66
                                             18 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (6) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (7) _Delay10TCYx                                          1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _despertar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _despertar
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       _calculaCRCBUFFRESP
         _crc16
         _memcpy
       _memcpy
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _telas
     _telaConfiguracaoDia
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _telaConfiguracaoHora
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _telaInicial
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _trata_data
   _trata_despertador
     _telas
       _telaConfiguracaoDia
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _telaConfiguracaoHora
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _telaInicial
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _trata_hora
   _troca_telas
     _telas
       _telaConfiguracaoDia
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _telaConfiguracaoHora
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _telaInicial
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      42       5       41.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      4D       1       81.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8F      20        0.0%
DATA                 0      0      8F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Nov 27 21:00:33 2018

                            _i 0035           _contador_interrupcao 003B                             bsr 000FE0  
                          l150 13C2                            l240 093A                            l241 0948  
                          l227 0C20                            l156 0EE2                            l165 0F18  
                          l326 12F0                            l239 092C                            l159 0EDE  
                          l276 1412                            l286 131C                            l840 10DC  
                          l850 120A                            u870 100E                            u855 10FC  
                          u880 1036                            u877 1004   __end_of_telaConfiguracaoHora 136E  
                          u887 102C                            _dia 004A                            _ano 0045  
                          _mes 0049          __size_of_WriteCmdXLCD 003E                            wreg 000FE8  
                  _troca_telas 13A0                           l2003 0C2A                           l2023 0FD0  
                         l2017 0F96                           l2133 0CAC                           l2213 1170  
                         l1255 1464                           l2151 0CF6                           l2143 0CD6  
                         l2135 0CB6                           l2223 130C                           l2233 1336  
                         l2155 0D06                           l2147 0CE6                           l2139 0CC6  
                         l2171 0972                           l2163 0870                           l2219 1180  
                         l1373 144E                           l1533 1428                           l2173 097A  
                         l2165 08BE                           l1613 1400                           l1631 13E2  
                         l2183 09C6                           l2185 09D4                           l2193 0A10  
                         l2177 098A                           l2169 0956                           l2281 119A  
                         l2601 0B78                           l2187 09E8                           l2283 11A2  
                         l2275 1188                           l2603 0B94                           l2269 1434  
                         l2189 0A02                           l2197 0A2C                           l2277 118E  
                         l2199 0A3A                           l2279 1194                           l2287 11AA  
                         l1575 104E                           l2623 12A4                           l1585 1066  
                         l2561 0A94                           l2625 12A8                           l1915 1016  
                         l1851 10AA                           l2571 0ABC                           l2555 0A66  
                         l2651 0ED2                           l1597 1084                           l1909 0FE4  
                         l1853 10B2                           l2573 0AC0                           l2549 0A4A  
                         l2653 0ED4                           l2733 0DFE                           l1863 10D2  
                         l1855 10B6                           l1871 11E0                           l2591 0B10  
                         l2663 0F0C                           l1873 11E8                           l2593 0B16  
                         l2585 0AF2                           l2665 0F0E                           l1779 1474  
                         l1875 11EC                           l2747 0E1E                           l1991 0BD2  
                         l1879 1200                           l2599 0B70                           l1985 0BB8  
                         l1995 0BDA                           l1999 0C1A                           STR_1 0855  
                         STR_2 0844                           STR_3 085C                           STR_4 083B  
                         STR_5 082E                           STR_6 0820                           STR_7 082E  
                         STR_8 0868                           STR_9 080B                           u1030 0FBE  
                         u1037 0FB4                           u1907 0EF0                           u1917 1466  
                         u1927 1454                           u1937 1476                           _PEIE 007F96  
                         u1887 13AE                           u1897 0EB6                           _RCIE 007CED  
                         _RCIF 007CF5                           _RCIP 007CFD                           _TMR0 000FD6  
                         _TXIF 007CF4                           _main 0DB2                           fsr0h 000FEA  
                         fsr1h 000FE2                           indf0 000FEF                           fsr2h 000FDA  
                         fsr0l 000FE9                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 004E         __size_of_WriteDataXLCD 003E  
                         prodh 000FF4                           prodl 000FF3                           start 0100  
       verificaCRCBUFFCOM@crc1 001F         verificaCRCBUFFCOM@crc2 0020                   ___param_bank 000000  
                  _Delay10TCYx 1472                   _WriteCmdXLCD 1252                    _Delay1KTCYx 1462  
                ?_SetDDRamAddr 0001                          ?_main 0001                _contador_alarme 0039  
                        STR_10 0847                          STR_11 084D                          STR_12 0863  
           _verificaCRCBUFFCOM 1138                __end_of___lwdiv 10E6                          i1l201 00B8  
              __end_of___lwmod 1214                          i1l197 0082                          _RCREG 000FAE  
                        _RCSTA 000FAB                          _SPBRG 000FAF                          _PORTB 000F81  
                        _TRISA 000F92                          _TRISB 000F93                          _TXREG 000FAD  
        __size_of_Delay10KTCYx 0016                          _TXSTA 000FAC            _telaConfiguracaoDia 136E  
                        _crc16 0BA2            ?_verificaCRCBUFFCOM 0001                __end_of_dpowers 080B  
                        _telas 1290                __end_of_pic_isr 0100                          pclath 000FFA  
                        tablat 000FF5                __end_of_tx_data 133C                          status 000FD8  
              __end_of_sprintf 0BA2           ?_telaConfiguracaoDia 0001                __initialization 0F1E  
         ??_verificaCRCBUFFCOM 001F                   __end_of_main 0E2E               __end_of_BusyXLCD 1304  
                 _Delay10KTCYx 144C          __size_of_DelayPORXLCD 0008                 ??_SetDDRamAddr 0013  
             __end_of_OpenXLCD 0D18     __end_of_calculaCRCBUFFRESP 0EA8                   ?_telaInicial 0001  
                       ??_main 002A                  __activetblptr 000003                  _WriteDataXLCD 1214  
                       ?_crc16 0012                         ?_telas 0001                         i1l1707 007E  
                       _TMR0IF 007F92          ??_telaConfiguracaoDia 0017           _telaConfiguracaoHora 133C  
                 _DelayPORXLCD 1496                         crc16@i 001C         __size_of_maquinaEstado 004C  
                    ??___lwdiv 0016                      ??___lwmod 001D                         _buffer 006E  
                       _estado 003C                         _funcao 0033                         _memcpy 0F80  
                       clear_0 0F64                         clear_1 0F70                         _versao 004D  
               ?_WriteDataXLCD 0001                   _calcula_temp 0037                   __pdataCOMRAM 0045  
                    ??_pic_isr 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                      ??_tx_data 0012  
                    ??_sprintf 001E       verificaCRCBUFFCOM@CRC_OK 0021                     __accesstop 0060  
      __end_of__initialization 0F76                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
        ?_telaConfiguracaoHora 0001          calculaCRCBUFFRESP@crc 0024                 __pcstackCOMRAM 0001  
              telas@troca_tela 0001                   __pidataBANK0 1482                  __end_of_crc16 0C74  
                __end_of_telas 12CA           trataComando@iterator 0028             __size_of_despertar 0028  
                 ?_troca_telas 0001                        ??_crc16 0016                  _maquinaEstado 1186  
                      ??_telas 0026         __size_of_DelayFor18TCY 0008                     __pbssBANK0 0060  
           __size_of_enviaByte 001E                      ?_BusyXLCD 0001                WriteCmdXLCD@cmd 0013  
         __end_of_SetDDRamAddr 1138             __size_of_init_XLCD 001E                      ?_OpenXLCD 0001  
            WriteDataXLCD@data 0013                   ?_Delay10TCYx 0001                ??_WriteDataXLCD 0013  
                 ?_Delay1KTCYx 0001                        ?_memcpy 0012                        _BUFFCOM 003E  
         __size_of_telaInicial 009A                        i1u75_20 00AA                 ?_maquinaEstado 0001  
           __size_of_putrsXLCD 005C                     ??_BusyXLCD 0013         ??_telaConfiguracaoHora 0017  
                   ??_OpenXLCD 0017                        __Hparam 0000                        __Lparam 0000  
            __end_of_despertar 13F0                  _DelayFor18TCY 149E                        ___lwdiv 1094  
                      ___lwmod 11D2                   __psmallconst 0800              __end_of_enviaByte 142E  
                      __pcinit 0F1E                __size_of_memcpy 0062                putrsXLCD@buffer 0014  
              Delay10TCYx@unit 0012                        __ramtop 0800                        __ptext0 0DB2  
                      __ptext1 13A0                        __ptext2 13F0                        __ptext3 0EA8  
                      __ptext4 1290                        __ptext5 0D18                        __ptext6 0A40  
                      __ptext7 11D2                        __ptext8 1094                        __ptext9 133C  
            __end_of_init_XLCD 144C                      _T0CONbits 000FD5                        _dpowers 0801  
                      _pic_isr 0018                        _revisao 004C                        _tx_data 1304  
                      _sprintf 0A40           end_of_initialization 0F76             _calculaCRCBUFFRESP 0E2E  
                      memcpy@d 001C                        memcpy@n 0017                        memcpy@s 0019  
                   _tela_atual 004B            ?_calculaCRCBUFFRESP 0001                  enviaByte@BYTE 0012  
               ?_DelayFor18TCY 0001    __size_of_verificaCRCBUFFCOM 004E                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
            __end_of_putrsXLCD 103E                      _PORTAbits 000F80                      _PORTDbits 000F83  
         ??_calculaCRCBUFFRESP 001F                ??_maquinaEstado 002A                      _TRISBbits 000F93  
                    _TRISCbits 000F94                     _trata_data 103E                     _trata_hora 13F0  
        __size_of_SetDDRamAddr 0052           __size_of_troca_telas 0028    __end_of_telaConfiguracaoDia 13A0  
       calculaCRCBUFFRESP@crc1 0022         calculaCRCBUFFRESP@crc2 0023              _trata_despertador 0EA8  
                ?_trataComando 0001             ?_trata_despertador 0001          verificaCRCBUFFCOM@crc 0022  
                 _constante_ad 009E            ??_trata_despertador 0026           __size_of_Delay10TCYx 0010  
                __pidataCOMRAM 148D                 __end_of_memcpy 0FE2                   _SetDDRamAddr 10E6  
         __size_of_Delay1KTCYx 0010             SetDDRamAddr@DDaddr 0016            start_initialization 0F1E  
          _contador_um_segundo 003A      __end_of_trata_despertador 0F1E                 ??_trataComando 0026  
            __size_of_BusyXLCD 003A                ??_DelayFor18TCY 0013              __size_of_OpenXLCD 00A4  
                ?_WriteCmdXLCD 0001                    tx_data@cont 0012                    __pdataBANK0 0097  
                     ??_memcpy 0019                    crc16@data_p 0012                    crc16@length 0014  
                  __pbssCOMRAM 002A                  __pcstackBANK0 0085                    ?_trata_data 0001  
                  ?_trata_hora 0001                Delay1KTCYx@unit 0012                    sprintf@flag 0021  
                  sprintf@prec 0022                      crc16@data 001A               ___lwdiv@dividend 0012  
               ??_WriteCmdXLCD 0013                      _desp_hora 0048                  ?_Delay10KTCYx 0001  
                     ?___lwdiv 0012                       ?___lwmod 0019                      _despertar 13C8  
                    _despertou 0038                    __pintcodelo 0018                  ??_telaInicial 0026  
        __end_of_WriteDataXLCD 1252                    __smallconst 0800                      _enviaByte 1410  
                     ?_pic_isr 0001                      _horaAtual 002E                      _init_XLCD 142E  
               __size_of_crc16 00D2               ___lwdiv@quotient 0016                       ?_tx_data 0001  
                     ?_sprintf 0085                       _BUFFRESP 007E                 __size_of_telas 003A  
                     _ADResult 0031     __size_of_trata_despertador 0076                       _LATBbits 000F8A  
                ?_DelayPORXLCD 0001  __size_of_telaConfiguracaoHora 0032                       _PIR1bits 000F9E  
              OpenXLCD@lcdtype 0017                 ??_Delay10KTCYx 0012            __size_of_trata_data 0056  
          __size_of_trata_hora 0020                     ?_despertar 0001           __end_of_trataComando 0A40  
                   ?_enviaByte 0001                      _putrsXLCD 0FE2               Delay10KTCYx@unit 0013  
                   ?_init_XLCD 0001            __end_of_telaInicial 0DB2                      copy_data0 0F32  
                    copy_data1 0F52                       _BusyXLCD 12CA                 ??_DelayPORXLCD 0013  
                     _OpenXLCD 0C74                   _semanaAlarme 0060     __end_of_verificaCRCBUFFCOM 1186  
                     __Hrparam 0000                       __Lrparam 0000               __size_of___lwdiv 0052  
             __size_of___lwmod 0042                     sprintf@val 0023                     ?_putrsXLCD 0014  
                     crc16@crc 001D    __size_of_calculaCRCBUFFRESP 007A                  ??_troca_telas 0026  
             __size_of_pic_isr 00E8                ___lwdiv@divisor 0014                ___lwdiv@counter 0018  
        __end_of_maquinaEstado 11D2                       __ptext10 136E                       __ptext11 0FE2  
                     __ptext20 0BA2                       __ptext12 1214                       __ptext21 1410  
                     __ptext13 103E                       __ptext30 149E                       __ptext22 142E  
                     __ptext14 1186                       __ptext31 1472                       __ptext23 0C74  
                     __ptext15 1138                       __ptext32 13C8                       __ptext24 1252  
                     __ptext16 1304                       __ptext25 10E6                       __ptext17 086E  
                     __ptext26 1496                       __ptext18 0E2E                       __ptext27 1462  
                     __ptext19 0F80                       __ptext28 144C                       __ptext29 12CA  
                     _desp_min 0047           __end_of_WriteCmdXLCD 1290               __size_of_tx_data 0038  
             __size_of_sprintf 0162                  __size_of_main 007C   __size_of_telaConfiguracaoDia 0032  
                ??_Delay10TCYx 0012                       int$flags 004E                    ??_despertar 0012  
                ??_Delay1KTCYx 0012                    _telaInicial 0D18                    ??_enviaByte 0012  
                   _INTCONbits 000FF2                       memcpy@d1 0012                       memcpy@s1 0014  
                  ??_init_XLCD 0018                   ??_trata_data 0012                    _semanaPrint 0097  
                 ??_trata_hora 0012           __end_of_Delay10KTCYx 1462                       intlevel1 0000  
                    sprintf@ap 001F                      sprintf@sp 0085            __end_of_troca_telas 13C8  
             ___lwmod@dividend 0019                    _serial_data 003D          __end_of_DelayFor18TCY 14A6  
        __size_of_trataComando 01D2             __end_of_trata_data 1094             __end_of_trata_hora 1410  
          __end_of_Delay10TCYx 1482                    _temperatura 002A                       sprintf@c 0025  
                     sprintf@f 0087           __end_of_DelayPORXLCD 149E                    ??_putrsXLCD 0016  
              ___lwmod@divisor 001B            __end_of_Delay1KTCYx 1472                ___lwmod@counter 001D  
                 _trataComando 086E  
