

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Nov 29 00:39:09 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 1.41
    53                           ; Generated 25/01/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  0015F8                     __pidataCOMRAM:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _tela
    92  0015F8  0001               	dw	1
    93                           
    94                           ;initializer for _ano
    95  0015FA  07E2               	dw	2018
    96                           
    97                           ;initializer for _primeiraExec
    98  0015FC  01                 	db	1
    99                           
   100                           ;initializer for _desp_min
   101  0015FD  0A                 	db	10
   102                           
   103                           ;initializer for _desp_hora
   104  0015FE  05                 	db	5
   105                           
   106                           ;initializer for _mes
   107  0015FF  06                 	db	6
   108                           
   109                           ;initializer for _dia
   110  001600  04                 	db	4
   111                           
   112                           ;initializer for _tela_atual
   113  001601  01                 	db	1
   114                           
   115                           ;initializer for _revisao
   116  001602  02                 	db	2
   117                           
   118                           ;initializer for _versao
   119  001603  01                 	db	1
   120                           
   121                           	psect	idataBANK0
   122  001604                     __pidataBANK0:
   123                           	opt stack 0
   124                           
   125                           ;initializer for _semanaPrint
   126  001604  64                 	db	100
   127  001605  73                 	db	115
   128  001606  74                 	db	116
   129  001607  71                 	db	113
   130  001608  71                 	db	113
   131  001609  73                 	db	115
   132  00160A  73                 	db	115
   133                           
   134                           ;initializer for _constante_ad
   135  00160B  280A               	dw	10250
   136  00160D  3BA0               	dw	15264
   137                           
   138                           	psect	smallconst
   139  000800                     __psmallconst:
   140                           	opt stack 0
   141  000800  00                 	db	0
   142  000801                     _dpowers:
   143                           	opt stack 0
   144  000801  0001               	dw	1
   145  000803  000A               	dw	10
   146  000805  0064               	dw	100
   147  000807  03E8               	dw	1000
   148  000809  2710               	dw	10000
   149  00080B                     __end_of_dpowers:
   150                           	opt stack 0
   151  0000                     _TMR0	set	4054
   152  0000                     _TRISBbits	set	3987
   153  0000                     _TRISB	set	3987
   154  0000                     _PORTB	set	3969
   155  0000                     _LATBbits	set	3978
   156  0000                     _TXREG	set	4013
   157  0000                     _TRISCbits	set	3988
   158  0000                     _TXSTA	set	4012
   159  0000                     _RCSTA	set	4011
   160  0000                     _SPBRG	set	4015
   161  0000                     _TRISA	set	3986
   162  0000                     _T0CONbits	set	4053
   163  0000                     _RCREG	set	4014
   164  0000                     _PIR1bits	set	3998
   165  0000                     _INTCONbits	set	4082
   166  0000                     _PORTAbits	set	3968
   167  0000                     _PORTDbits	set	3971
   168  0000                     _TXIF	set	31988
   169  0000                     _PEIE	set	32662
   170  0000                     _RCIE	set	31981
   171  0000                     _RCIP	set	31997
   172  0000                     _RCIF	set	31989
   173  0000                     _TMR0IF	set	32658
   174  00080B                     STR_8:
   175  00080B  66                 	db	102	;'f'
   176  00080C  2A                 	db	42
   177  00080D  20                 	db	32
   178  00080E  68                 	db	104	;'h'
   179  00080F  6F                 	db	111	;'o'
   180  000810  72                 	db	114	;'r'
   181  000811  61                 	db	97	;'a'
   182  000812  5F                 	db	95	;'_'
   183  000813  6C                 	db	108	;'l'
   184  000814  69                 	db	105	;'i'
   185  000815  67                 	db	103	;'g'
   186  000816  61                 	db	97	;'a'
   187  000817  2F                 	db	47
   188  000818  68                 	db	104	;'h'
   189  000819  6F                 	db	111	;'o'
   190  00081A  72                 	db	114	;'r'
   191  00081B  61                 	db	97	;'a'
   192  00081C  5F                 	db	95	;'_'
   193  00081D  64                 	db	100	;'d'
   194  00081E  65                 	db	101	;'e'
   195  00081F  73                 	db	115	;'s'
   196  000820  6C                 	db	108	;'l'
   197  000821  2E                 	db	46
   198  000822  00                 	db	0
   199  000823                     STR_1:
   200  000823  5B                 	db	91	;'['
   201  000824  25                 	db	37
   202  000825  63                 	db	99	;'c'
   203  000826  20                 	db	32
   204  000827  25                 	db	37
   205  000828  63                 	db	99	;'c'
   206  000829  20                 	db	32
   207  00082A  25                 	db	37
   208  00082B  63                 	db	99	;'c'
   209  00082C  20                 	db	32
   210  00082D  25                 	db	37
   211  00082E  63                 	db	99	;'c'
   212  00082F  20                 	db	32
   213  000830  25                 	db	37
   214  000831  63                 	db	99	;'c'
   215  000832  20                 	db	32
   216  000833  25                 	db	37
   217  000834  63                 	db	99	;'c'
   218  000835  20                 	db	32
   219  000836  25                 	db	37
   220  000837  63                 	db	99	;'c'
   221  000838  5D                 	db	93	;']'
   222  000839  00                 	db	0
   223  00083A                     STR_6:
   224  00083A  66                 	db	102	;'f'
   225  00083B  2A                 	db	42
   226  00083C  20                 	db	32
   227  00083D  6F                 	db	111	;'o'
   228  00083E  6E                 	db	110	;'n'
   229  00083F  2F                 	db	47
   230  000840  6F                 	db	111	;'o'
   231  000841  66                 	db	102	;'f'
   232  000842  66                 	db	102	;'f'
   233  000843  5F                 	db	95	;'_'
   234  000844  73                 	db	115	;'s'
   235  000845  65                 	db	101	;'e'
   236  000846  6D                 	db	109	;'m'
   237  000847  2F                 	db	47
   238  000848  68                 	db	104	;'h'
   239  000849  6F                 	db	111	;'o'
   240  00084A  72                 	db	114	;'r'
   241  00084B  5F                 	db	95	;'_'
   242  00084C  72                 	db	114	;'r'
   243  00084D  65                 	db	101	;'e'
   244  00084E  6C                 	db	108	;'l'
   245  00084F  00                 	db	0
   246  000850                     STR_2:
   247  000850  48                 	db	72	;'H'
   248  000851  6F                 	db	111	;'o'
   249  000852  72                 	db	114	;'r'
   250  000853  61                 	db	97	;'a'
   251  000854  72                 	db	114	;'r'
   252  000855  69                 	db	105	;'i'
   253  000856  6F                 	db	111	;'o'
   254  000857  20                 	db	32
   255  000858  3A                 	db	58	;':'
   256  000859  20                 	db	32
   257  00085A  25                 	db	37
   258  00085B  64                 	db	100	;'d'
   259  00085C  3A                 	db	58	;':'
   260  00085D  25                 	db	37
   261  00085E  64                 	db	100	;'d'
   262  00085F  3A                 	db	58	;':'
   263  000860  25                 	db	37
   264  000861  64                 	db	100	;'d'
   265  000862  00                 	db	0
   266  000863                     STR_5:
   267  000863  43                 	db	67	;'C'
   268  000864  4F                 	db	79	;'O'
   269  000865  4E                 	db	78	;'N'
   270  000866  46                 	db	70	;'F'
   271  000867  49                 	db	73	;'I'
   272  000868  47                 	db	71	;'G'
   273  000869  55                 	db	85	;'U'
   274  00086A  52                 	db	82	;'R'
   275  00086B  41                 	db	65	;'A'
   276  00086C  43                 	db	67	;'C'
   277  00086D  41                 	db	65	;'A'
   278  00086E  4F                 	db	79	;'O'
   279  00086F  20                 	db	32
   280  000870  3A                 	db	58	;':'
   281  000871  20                 	db	32
   282  000872  00                 	db	0
   283  000873                     STR_4:
   284  000873  66                 	db	102	;'f'
   285  000874  2A                 	db	42
   286  000875  20                 	db	32
   287  000876  20                 	db	32
   288  000877  20                 	db	32
   289  000878  20                 	db	32
   290  000879  20                 	db	32
   291  00087A  20                 	db	32
   292  00087B  20                 	db	32
   293  00087C  20                 	db	32
   294  00087D  25                 	db	37
   295  00087E  64                 	db	100	;'d'
   296  00087F  20                 	db	32
   297  000880  57                 	db	87	;'W'
   298  000881  00                 	db	0
   299  000882                     STR_3:
   300  000882  43                 	db	67	;'C'
   301  000883  4F                 	db	79	;'O'
   302  000884  4E                 	db	78	;'N'
   303  000885  53                 	db	83	;'S'
   304  000886  55                 	db	85	;'U'
   305  000887  4D                 	db	77	;'M'
   306  000888  4F                 	db	79	;'O'
   307  000889  20                 	db	32
   308  00088A  3A                 	db	58	;':'
   309  00088B  20                 	db	32
   310  00088C  00                 	db	0
   311  00088D                     STR_7:
   312  00088D  41                 	db	65	;'A'
   313  00088E  4C                 	db	76	;'L'
   314  00088F  41                 	db	65	;'A'
   315  000890  52                 	db	82	;'R'
   316  000891  4D                 	db	77	;'M'
   317  000892  45                 	db	69	;'E'
   318  000893  20                 	db	32
   319  000894  3A                 	db	58	;':'
   320  000895  20                 	db	32
   321  000896  00                 	db	0
   322  000897                     STR_9:
   323  000897  44                 	db	68	;'D'
   324  000898  65                 	db	101	;'e'
   325  000899  66                 	db	102	;'f'
   326  00089A  61                 	db	97	;'a'
   327  00089B  6C                 	db	108	;'l'
   328  00089C  74                 	db	116	;'t'
   329  00089D  6F                 	db	111	;'o'
   330  00089E  73                 	db	115	;'s'
   331  00089F  73                 	db	115	;'s'
   332  0008A0  00                 	db	0
   333  0008A1                     STR_10:
   334  0008A1  74                 	db	116	;'t'
   335  0008A2  65                 	db	101	;'e'
   336  0008A3  6C                 	db	108	;'l'
   337  0008A4  61                 	db	97	;'a'
   338  0008A5  20                 	db	32
   339  0008A6  25                 	db	37
   340  0008A7  69                 	db	105	;'i'
   341  0008A8  00                 	db	0
   342                           
   343                           ; #config settings
   344  0008A9  00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           	psect	cinit
   347  00111A                     __pcinit:
   348                           	opt stack 0
   349  00111A                     start_initialization:
   350                           	opt stack 0
   351  00111A                     __initialization:
   352                           	opt stack 0
   353                           
   354                           ; Initialize objects allocated to BANK0 (11 bytes)
   355                           ; load TBLPTR registers with __pidataBANK0
   356  00111A  0E04               	movlw	low __pidataBANK0
   357  00111C  6EF6               	movwf	tblptrl,c
   358  00111E  0E16               	movlw	high __pidataBANK0
   359  001120  6EF7               	movwf	tblptrh,c
   360  001122  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   361  001124  6EF8               	movwf	tblptru,c
   362  001126  EE00  F0B1         	lfsr	0,__pdataBANK0
   363  00112A  EE10 F00B          	lfsr	1,11
   364  00112E                     copy_data0:
   365  00112E  0009               	tblrd		*+
   366  001130  CFF5 FFEE          	movff	tablat,postinc0
   367  001134  50E5               	movf	postdec1,w,c
   368  001136  50E1               	movf	fsr1l,w,c
   369  001138  E1FA               	bnz	copy_data0
   370                           
   371                           ; Initialize objects allocated to COMRAM (12 bytes)
   372                           ; load TBLPTR registers with __pidataCOMRAM
   373  00113A  0EF8               	movlw	low __pidataCOMRAM
   374  00113C  6EF6               	movwf	tblptrl,c
   375  00113E  0E15               	movlw	high __pidataCOMRAM
   376  001140  6EF7               	movwf	tblptrh,c
   377  001142  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   378  001144  6EF8               	movwf	tblptru,c
   379  001146  EE00  F041         	lfsr	0,__pdataCOMRAM
   380  00114A  EE10 F00C          	lfsr	1,12
   381  00114E                     copy_data1:
   382  00114E  0009               	tblrd		*+
   383  001150  CFF5 FFEE          	movff	tablat,postinc0
   384  001154  50E5               	movf	postdec1,w,c
   385  001156  50E1               	movf	fsr1l,w,c
   386  001158  E1FA               	bnz	copy_data1
   387                           
   388                           ; Clear objects allocated to BANK1 (120 bytes)
   389  00115A  EE01  F000         	lfsr	0,__pbssBANK1
   390  00115E  0E78               	movlw	120
   391  001160                     clear_0:
   392  001160  6AEE               	clrf	postinc0,c
   393  001162  06E8               	decf	wreg,f,c
   394  001164  E1FD               	bnz	clear_0
   395                           
   396                           ; Clear objects allocated to BANK0 (61 bytes)
   397  001166  EE00  F060         	lfsr	0,__pbssBANK0
   398  00116A  0E3D               	movlw	61
   399  00116C                     clear_1:
   400  00116C  6AEE               	clrf	postinc0,c
   401  00116E  06E8               	decf	wreg,f,c
   402  001170  E1FD               	bnz	clear_1
   403                           
   404                           ; Clear objects allocated to COMRAM (21 bytes)
   405  001172  EE00  F02C         	lfsr	0,__pbssCOMRAM
   406  001176  0E15               	movlw	21
   407  001178                     clear_2:
   408  001178  6AEE               	clrf	postinc0,c
   409  00117A  06E8               	decf	wreg,f,c
   410  00117C  E1FD               	bnz	clear_2
   411  00117E                     end_of_initialization:
   412                           	opt stack 0
   413  00117E                     __end_of__initialization:
   414                           	opt stack 0
   415  00117E  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   416  001180  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   417  001182  0100               	movlb	0
   418  001184  EF1B  F007         	goto	_main	;jump to C main() function
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	bssCOMRAM
   429  00002C                     __pbssCOMRAM:
   430                           	opt stack 0
   431  00002C                     _horaAtual:
   432                           	opt stack 0
   433  00002C                     	ds	3
   434  00002F                     _ADResult:
   435                           	opt stack 0
   436  00002F                     	ds	2
   437  000031                     _i:
   438                           	opt stack 0
   439  000031                     	ds	2
   440  000033                     _calcula_temp:
   441                           	opt stack 0
   442  000033                     	ds	1
   443  000034                     _despertou:
   444                           	opt stack 0
   445  000034                     	ds	1
   446  000035                     _contador_alarme:
   447                           	opt stack 0
   448  000035                     	ds	1
   449  000036                     _contador_um_segundo:
   450                           	opt stack 0
   451  000036                     	ds	1
   452  000037                     _contador_interrupcao:
   453                           	opt stack 0
   454  000037                     	ds	1
   455  000038                     _estado:
   456                           	opt stack 0
   457  000038                     	ds	1
   458  000039                     _serial_data:
   459                           	opt stack 0
   460  000039                     	ds	1
   461  00003A                     _BUFFCOM:
   462                           	opt stack 0
   463  00003A                     	ds	7
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           
   473                           	psect	dataCOMRAM
   474  000041                     __pdataCOMRAM:
   475                           	opt stack 0
   476  000041                     _tela:
   477                           	opt stack 0
   478  000041                     	ds	2
   479  000043                     _ano:
   480                           	opt stack 0
   481  000043                     	ds	2
   482  000045                     _primeiraExec:
   483                           	opt stack 0
   484  000045                     	ds	1
   485  000046                     _desp_min:
   486                           	opt stack 0
   487  000046                     	ds	1
   488  000047                     _desp_hora:
   489                           	opt stack 0
   490  000047                     	ds	1
   491  000048                     _mes:
   492                           	opt stack 0
   493  000048                     	ds	1
   494  000049                     _dia:
   495                           	opt stack 0
   496  000049                     	ds	1
   497  00004A                     _tela_atual:
   498                           	opt stack 0
   499  00004A                     	ds	1
   500  00004B                     _revisao:
   501                           	opt stack 0
   502  00004B                     	ds	1
   503  00004C                     _versao:
   504                           	opt stack 0
   505  00004C                     	ds	1
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           postdec1	equ	0xFE5
   513                           fsr1l	equ	0xFE1
   514                           
   515                           	psect	bssBANK0
   516  000060                     __pbssBANK0:
   517                           	opt stack 0
   518  000060                     _semanaAlarme:
   519                           	opt stack 0
   520  000060                     	ds	14
   521  00006E                     _temperatura:
   522                           	opt stack 0
   523  00006E                     	ds	4
   524  000072                     _telaAntiga:
   525                           	opt stack 0
   526  000072                     	ds	2
   527  000074                     _funcao:
   528                           	opt stack 0
   529  000074                     	ds	2
   530  000076                     _mensagemL2:
   531                           	opt stack 0
   532  000076                     	ds	16
   533  000086                     _mensagemL1:
   534                           	opt stack 0
   535  000086                     	ds	16
   536  000096                     _BUFFRESP:
   537                           	opt stack 0
   538  000096                     	ds	7
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           
   548                           	psect	dataBANK0
   549  0000B1                     __pdataBANK0:
   550                           	opt stack 0
   551  0000B1                     _semanaPrint:
   552                           	opt stack 0
   553  0000B1                     	ds	7
   554  0000B8                     _constante_ad:
   555                           	opt stack 0
   556  0000B8                     	ds	4
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           postdec1	equ	0xFE5
   564                           fsr1l	equ	0xFE1
   565                           
   566                           	psect	bssBANK1
   567  000100                     __pbssBANK1:
   568                           	opt stack 0
   569  000100                     _energia:
   570                           	opt stack 0
   571  000100                     	ds	120
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           postdec1	equ	0xFE5
   579                           fsr1l	equ	0xFE1
   580                           
   581                           	psect	cstackBANK0
   582  00009D                     __pcstackBANK0:
   583                           	opt stack 0
   584  00009D                     ?_sprintf:
   585                           	opt stack 0
   586  00009D                     sprintf@sp:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x0
   590  00009D                     	ds	2
   591  00009F                     sprintf@f:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x2
   595  00009F                     	ds	16
   596  0000AF                     main@b:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  0000AF                     	ds	2
   601                           tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           postdec1	equ	0xFE5
   608                           fsr1l	equ	0xFE1
   609                           
   610                           	psect	cstackCOMRAM
   611  000001                     __pcstackCOMRAM:
   612                           	opt stack 0
   613  000001                     ??_pic_isr:
   614  000001                     
   615                           ; 1 bytes @ 0x0
   616  000001                     	ds	17
   617  000012                     ??_Delay10KTCYx:
   618  000012                     ??_troca_telas:
   619  000012                     ?_crc16:
   620                           	opt stack 0
   621  000012                     ?___lwdiv:
   622                           	opt stack 0
   623  000012                     enviaByte@BYTE:
   624                           	opt stack 0
   625  000012                     Delay10TCYx@unit:
   626                           	opt stack 0
   627  000012                     Delay1KTCYx@unit:
   628                           	opt stack 0
   629  000012                     crc16@data_p:
   630                           	opt stack 0
   631  000012                     tx_data@cont:
   632                           	opt stack 0
   633  000012                     ___lwdiv@dividend:
   634                           	opt stack 0
   635  000012                     memcpy@d1:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x11
   639  000012                     	ds	1
   640  000013                     ??_SetDDRamAddr:
   641  000013                     WriteCmdXLCD@cmd:
   642                           	opt stack 0
   643  000013                     WriteDataXLCD@data:
   644                           	opt stack 0
   645  000013                     Delay10KTCYx@unit:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x12
   649  000013                     	ds	1
   650  000014                     crc16@length:
   651                           	opt stack 0
   652  000014                     putrsXLCD@buffer:
   653                           	opt stack 0
   654  000014                     ___lwdiv@divisor:
   655                           	opt stack 0
   656  000014                     memcpy@s1:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x13
   660  000014                     	ds	2
   661  000016                     ??_crc16:
   662  000016                     SetDDRamAddr@DDaddr:
   663                           	opt stack 0
   664  000016                     ___lwdiv@counter:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x15
   668  000016                     	ds	1
   669  000017                     OpenXLCD@lcdtype:
   670                           	opt stack 0
   671  000017                     escreveMensagem@l1:
   672                           	opt stack 0
   673  000017                     ___lwdiv@quotient:
   674                           	opt stack 0
   675  000017                     memcpy@n:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x16
   679  000017                     	ds	1
   680  000018                     
   681                           ; 1 bytes @ 0x17
   682  000018                     	ds	1
   683  000019                     ?___lwmod:
   684                           	opt stack 0
   685  000019                     escreveMensagem@l2:
   686                           	opt stack 0
   687  000019                     ___lwmod@dividend:
   688                           	opt stack 0
   689  000019                     memcpy@s:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x18
   693  000019                     	ds	1
   694  00001A                     crc16@i:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x19
   698  00001A                     	ds	1
   699  00001B                     crc16@data:
   700                           	opt stack 0
   701  00001B                     ___lwmod@divisor:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x1A
   705  00001B                     	ds	1
   706  00001C                     memcpy@d:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x1B
   710  00001C                     	ds	1
   711  00001D                     ___lwmod@counter:
   712                           	opt stack 0
   713  00001D                     crc16@crc:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x1C
   717  00001D                     	ds	1
   718  00001E                     ??_sprintf:
   719                           
   720                           ; 1 bytes @ 0x1D
   721  00001E                     	ds	1
   722  00001F                     ??_calculaCRCBUFFRESP:
   723  00001F                     verificaCRCBUFFCOM@crc1:
   724                           	opt stack 0
   725  00001F                     sprintf@flag:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x1E
   729  00001F                     	ds	1
   730  000020                     verificaCRCBUFFCOM@crc2:
   731                           	opt stack 0
   732  000020                     sprintf@prec:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x1F
   736  000020                     	ds	1
   737  000021                     verificaCRCBUFFCOM@CRC_OK:
   738                           	opt stack 0
   739  000021                     sprintf@ap:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x20
   743  000021                     	ds	1
   744  000022                     calculaCRCBUFFRESP@crc1:
   745                           	opt stack 0
   746  000022                     verificaCRCBUFFCOM@crc:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x21
   750  000022                     	ds	1
   751  000023                     calculaCRCBUFFRESP@crc2:
   752                           	opt stack 0
   753  000023                     sprintf@val:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x22
   757  000023                     	ds	1
   758  000024                     calculaCRCBUFFRESP@crc:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x23
   762  000024                     	ds	1
   763  000025                     sprintf@c:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x24
   767  000025                     	ds	1
   768  000026                     ??_telas:
   769  000026                     ??_trataComando:
   770                           
   771                           ; 1 bytes @ 0x25
   772  000026                     	ds	2
   773  000028                     trataComando@iterator:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x27
   777  000028                     	ds	2
   778  00002A                     ??_main:
   779                           
   780                           ; 1 bytes @ 0x29
   781  00002A                     	ds	2
   782                           tblptru	equ	0xFF8
   783                           tblptrh	equ	0xFF7
   784                           tblptrl	equ	0xFF6
   785                           tablat	equ	0xFF5
   786                           postinc0	equ	0xFEE
   787                           wreg	equ	0xFE8
   788                           postdec1	equ	0xFE5
   789                           fsr1l	equ	0xFE1
   790                           
   791 ;;
   792 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   793 ;;
   794 ;; *************** function _main *****************
   795 ;; Defined at:
   796 ;;		line 297 in file "main.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  b               2   18[BANK0 ] int 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   810 ;;      Params:         0       0       0       0       0       0       0       0       0
   811 ;;      Locals:         0       2       0       0       0       0       0       0       0
   812 ;;      Temps:          2       0       0       0       0       0       0       0       0
   813 ;;      Totals:         2       2       0       0       0       0       0       0       0
   814 ;;Total ram usage:        4 bytes
   815 ;; Hardware stack levels required when called:    8
   816 ;; This function calls:
   817 ;;		_despertar
   818 ;;		_init_XLCD
   819 ;;		_maquinaEstado
   820 ;;		_telas
   821 ;;		_trata_data
   822 ;;		_trata_hora
   823 ;;		_troca_telas
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text0
   830  000E36                     __ptext0:
   831                           	opt stack 0
   832  000E36                     _main:
   833                           	opt stack 23
   834                           
   835                           ;main.c: 298: T0CONbits.TMR0ON = 0;
   836                           
   837                           ;incstack = 0
   838  000E36  9ED5               	bcf	4053,7,c	;volatile
   839                           
   840                           ;main.c: 299: INTCONbits.TMR0IE = 1;
   841  000E38  8AF2               	bsf	intcon,5,c	;volatile
   842                           
   843                           ;main.c: 300: INTCONbits.TMR0IF = 0;
   844  000E3A  94F2               	bcf	intcon,2,c	;volatile
   845                           
   846                           ;main.c: 301: T0CONbits.T08BIT = 0;
   847  000E3C  9CD5               	bcf	4053,6,c	;volatile
   848                           
   849                           ;main.c: 302: T0CONbits.PSA = 0;
   850  000E3E  96D5               	bcf	4053,3,c	;volatile
   851                           
   852                           ;main.c: 304: T0CONbits.T0PS0 = 1;
   853  000E40  80D5               	bsf	4053,0,c	;volatile
   854                           
   855                           ;main.c: 305: T0CONbits.T0PS1 = 1;
   856  000E42  82D5               	bsf	4053,1,c	;volatile
   857                           
   858                           ;main.c: 306: T0CONbits.T0PS2 = 0;
   859  000E44  94D5               	bcf	4053,2,c	;volatile
   860                           
   861                           ;main.c: 308: T0CONbits.T0CS = 0;
   862  000E46  9AD5               	bcf	4053,5,c	;volatile
   863                           
   864                           ;main.c: 309: TMR0 = 32768;
   865  000E48  0E80               	movlw	128
   866  000E4A  6ED7               	movwf	4055,c	;volatile
   867  000E4C  0E00               	movlw	0
   868  000E4E  6ED6               	movwf	4054,c	;volatile
   869                           
   870                           ;main.c: 310: T0CONbits.TMR0ON = 1;
   871  000E50  8ED5               	bsf	4053,7,c	;volatile
   872                           
   873                           ;main.c: 311: INTCONbits.GIEH = 1;
   874  000E52  8EF2               	bsf	intcon,7,c	;volatile
   875                           
   876                           ;main.c: 312: INTCONbits.GIEL = 1;
   877  000E54  8CF2               	bsf	intcon,6,c	;volatile
   878                           
   879                           ;main.c: 315: TRISA = 0x00000000;
   880  000E56  0E00               	movlw	0
   881  000E58  6E92               	movwf	3986,c	;volatile
   882                           
   883                           ;main.c: 316: init_XLCD();
   884  000E5A  ECC3  F00A         	call	_init_XLCD	;wreg free
   885                           
   886                           ;main.c: 318: SPBRG = (((48000000/64)/9600)-1);
   887  000E5E  0E4D               	movlw	77
   888  000E60  6EAF               	movwf	4015,c	;volatile
   889                           
   890                           ;main.c: 322: RCSTA = 0b10010000;
   891  000E62  0E90               	movlw	144
   892  000E64  6EAB               	movwf	4011,c	;volatile
   893                           
   894                           ;main.c: 323: TXSTA = 0b00100000;
   895  000E66  0E20               	movlw	32
   896  000E68  6EAC               	movwf	4012,c	;volatile
   897                           
   898                           ;main.c: 324: TRISCbits.RC6 = 0;
   899  000E6A  9C94               	bcf	3988,6,c	;volatile
   900                           
   901                           ;main.c: 325: TRISCbits.RC7 = 1;
   902  000E6C  8E94               	bsf	3988,7,c	;volatile
   903                           
   904                           ;main.c: 327: RCIF = 0;
   905  000E6E  9A9E               	bcf	3998,5,c	;volatile
   906                           
   907                           ;main.c: 328: RCIP = 0;
   908  000E70  9A9F               	bcf	3999,5,c	;volatile
   909                           
   910                           ;main.c: 329: RCIE = 1;
   911  000E72  8A9D               	bsf	3997,5,c	;volatile
   912                           
   913                           ;main.c: 330: PEIE = 1;
   914  000E74  8CF2               	bsf	intcon,6,c	;volatile
   915                           
   916                           ;main.c: 333: horaAtual.h = 0x0;
   917  000E76  0E00               	movlw	0
   918  000E78  6E2C               	movwf	_horaAtual,c
   919                           
   920                           ;main.c: 334: horaAtual.m = 0x0;
   921  000E7A  0E00               	movlw	0
   922  000E7C  6E2D               	movwf	_horaAtual+1,c
   923                           
   924                           ;main.c: 335: horaAtual.s = 0x0;
   925  000E7E  0E00               	movlw	0
   926  000E80  6E2E               	movwf	_horaAtual+2,c
   927                           
   928                           ;main.c: 339: for (int b = 1; b<31; b++){
   929  000E82  0E00               	movlw	0
   930  000E84  0100               	movlb	0	; () banked
   931  000E86  6FB0               	movwf	(main@b+1)& (0+255),b
   932  000E88  0E01               	movlw	1
   933  000E8A  6FAF               	movwf	main@b& (0+255),b
   934  000E8C                     l3244:
   935                           
   936                           ; BSR set to: 0
   937  000E8C  0100               	movlb	0	; () banked
   938  000E8E  BFB0               	btfsc	(main@b+1)& (0+255),7,b
   939  000E90  D008               	goto	l3248
   940  000E92  0100               	movlb	0	; () banked
   941  000E94  51B0               	movf	(main@b+1)& (0+255),w,b
   942  000E96  E137               	bnz	l3254
   943  000E98  0E1F               	movlw	31
   944  000E9A  0100               	movlb	0	; () banked
   945  000E9C  5DAF               	subwf	main@b& (0+255),w,b
   946  000E9E  B0D8               	btfsc	status,0,c
   947  000EA0  D032               	goto	l3254
   948  000EA2                     l3248:
   949                           
   950                           ; BSR set to: 0
   951                           ;main.c: 340: energia.consumoDia[b].potencia = 0;
   952  000EA2  0E00               	movlw	low _energia
   953  000EA4  6E2A               	movwf	??_main& (0+255),c
   954  000EA6  0E01               	movlw	high _energia
   955  000EA8  6E2B               	movwf	(??_main+1)& (0+255),c
   956  000EAA  90D8               	bcf	status,0,c
   957  000EAC  0100               	movlb	0	; () banked
   958  000EAE  35AF               	rlcf	main@b& (0+255),w,b
   959  000EB0  6ED9               	movwf	fsr2l,c
   960  000EB2  0100               	movlb	0	; () banked
   961  000EB4  35B0               	rlcf	(main@b+1)& (0+255),w,b
   962  000EB6  6EDA               	movwf	fsr2h,c
   963  000EB8  90D8               	bcf	status,0,c
   964  000EBA  36D9               	rlcf	fsr2l,f,c
   965  000EBC  36DA               	rlcf	fsr2h,f,c
   966  000EBE  502A               	movf	??_main,w,c
   967  000EC0  26D9               	addwf	fsr2l,f,c
   968  000EC2  502B               	movf	??_main+1,w,c
   969  000EC4  22DA               	addwfc	fsr2h,f,c
   970  000EC6  0E00               	movlw	0
   971  000EC8  6EDE               	movwf	postinc2,c
   972  000ECA  0E00               	movlw	0
   973  000ECC  6EDD               	movwf	postdec2,c
   974                           
   975                           ;main.c: 341: energia.consumoDia[b].dia = 0;
   976  000ECE  C0AF  F02A         	movff	main@b,??_main
   977  000ED2  C0B0  F02B         	movff	main@b+1,??_main+1
   978  000ED6  90D8               	bcf	status,0,c
   979  000ED8  362A               	rlcf	??_main,f,c
   980  000EDA  362B               	rlcf	??_main+1,f,c
   981  000EDC  90D8               	bcf	status,0,c
   982  000EDE  362A               	rlcf	??_main,f,c
   983  000EE0  362B               	rlcf	??_main+1,f,c
   984  000EE2  0E02               	movlw	2
   985  000EE4  262A               	addwf	??_main,f,c
   986  000EE6  0E00               	movlw	0
   987  000EE8  222B               	addwfc	??_main+1,f,c
   988  000EEA  0E00               	movlw	low _energia
   989  000EEC  242A               	addwf	??_main,w,c
   990  000EEE  6ED9               	movwf	fsr2l,c
   991  000EF0  0E01               	movlw	high _energia
   992  000EF2  202B               	addwfc	??_main+1,w,c
   993  000EF4  6EDA               	movwf	fsr2h,c
   994  000EF6  0E00               	movlw	0
   995  000EF8  6EDE               	movwf	postinc2,c
   996  000EFA  0E00               	movlw	0
   997  000EFC  6EDD               	movwf	postdec2,c
   998                           
   999                           ; BSR set to: 0
  1000  000EFE  0100               	movlb	0	; () banked
  1001  000F00  4BAF               	infsnz	main@b& (0+255),f,b
  1002  000F02  2BB0               	incf	(main@b+1)& (0+255),f,b
  1003  000F04  D7C3               	goto	l3244
  1004  000F06                     l3254:
  1005                           
  1006                           ;main.c: 346: if(contador_um_segundo == 1){
  1007  000F06  0436               	decf	_contador_um_segundo,w,c
  1008  000F08  A4D8               	btfss	status,2,c
  1009  000F0A  D00C               	goto	l3268
  1010                           
  1011                           ;main.c: 347: contador_um_segundo = 0;
  1012  000F0C  0E00               	movlw	0
  1013  000F0E  6E36               	movwf	_contador_um_segundo,c
  1014                           
  1015                           ;main.c: 348: trata_hora();
  1016  000F10  ECA3  F00A         	call	_trata_hora	;wreg free
  1017                           
  1018                           ;main.c: 349: trata_data();
  1019  000F14  ECF5  F008         	call	_trata_data	;wreg free
  1020                           
  1021                           ;main.c: 350: despertar();
  1022  000F18  EC8F  F00A         	call	_despertar	;wreg free
  1023                           
  1024                           ;main.c: 351: maquinaEstado();
  1025  000F1C  EC99  F009         	call	_maquinaEstado	;wreg free
  1026                           
  1027                           ;main.c: 352: telas();
  1028  000F20  EC55  F004         	call	_telas	;wreg free
  1029  000F24                     l3268:
  1030                           
  1031                           ;main.c: 353: }
  1032                           ;main.c: 354: troca_telas();
  1033  000F24  ECBF  F009         	call	_troca_telas	;wreg free
  1034  000F28  D7EE               	goto	l3254
  1035  000F2A                     __end_of_main:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           intcon	equ	0xFF2
  1042                           postinc0	equ	0xFEE
  1043                           wreg	equ	0xFE8
  1044                           postdec1	equ	0xFE5
  1045                           fsr1l	equ	0xFE1
  1046                           postinc2	equ	0xFDE
  1047                           postdec2	equ	0xFDD
  1048                           fsr2h	equ	0xFDA
  1049                           fsr2l	equ	0xFD9
  1050                           status	equ	0xFD8
  1051                           
  1052 ;; *************** function _troca_telas *****************
  1053 ;; Defined at:
  1054 ;;		line 190 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1070 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text1
  1083  00137E                     __ptext1:
  1084                           	opt stack 0
  1085  00137E                     _troca_telas:
  1086                           	opt stack 29
  1087                           
  1088                           ;main.c: 191: if(PORTDbits.RD0){
  1089                           
  1090                           ;incstack = 0
  1091  00137E  A083               	btfss	3971,0,c	;volatile
  1092  001380  0012               	return	
  1093                           
  1094                           ;main.c: 192: _delay((unsigned long)((150)*(48000000/4000.0)));
  1095  001382  0E0A               	movlw	10
  1096  001384  6E13               	movwf	(??_troca_telas+1)& (0+255),c
  1097  001386  0E22               	movlw	34
  1098  001388  6E12               	movwf	??_troca_telas& (0+255),c
  1099  00138A  0EA1               	movlw	161
  1100  00138C                     u2187:
  1101  00138C  2EE8               	decfsz	wreg,f,c
  1102  00138E  D7FE               	bra	u2187
  1103  001390  2E12               	decfsz	??_troca_telas& (0+255),f,c
  1104  001392  D7FC               	bra	u2187
  1105  001394  2E13               	decfsz	(??_troca_telas+1)& (0+255),f,c
  1106  001396  D7FA               	bra	u2187
  1107  001398  F000               	nop	
  1108                           
  1109                           ;main.c: 194: tela += tela;
  1110  00139A  5041               	movf	_tela,w,c
  1111  00139C  2641               	addwf	_tela,f,c
  1112  00139E  5042               	movf	_tela+1,w,c
  1113  0013A0  2242               	addwfc	_tela+1,f,c
  1114                           
  1115                           ;main.c: 195: if(tela>4){tela = 1;}
  1116  0013A2  BE42               	btfsc	_tela+1,7,c
  1117  0013A4  D00A               	goto	l156
  1118  0013A6  5042               	movf	_tela+1,w,c
  1119  0013A8  E104               	bnz	u2010
  1120  0013AA  0E05               	movlw	5
  1121  0013AC  5C41               	subwf	_tela,w,c
  1122  0013AE  A0D8               	btfss	status,0,c
  1123  0013B0  D004               	goto	l156
  1124  0013B2                     u2010:
  1125  0013B2  0E00               	movlw	0
  1126  0013B4  6E42               	movwf	_tela+1,c
  1127  0013B6  0E01               	movlw	1
  1128  0013B8  6E41               	movwf	_tela,c
  1129  0013BA                     l156:
  1130  0013BA  A083               	btfss	3971,0,c	;volatile
  1131  0013BC  0012               	return	
  1132  0013BE  D7FD               	goto	l156
  1133  0013C0                     __end_of_troca_telas:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           intcon	equ	0xFF2
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           postinc2	equ	0xFDE
  1145                           postdec2	equ	0xFDD
  1146                           fsr2h	equ	0xFDA
  1147                           fsr2l	equ	0xFD9
  1148                           status	equ	0xFD8
  1149                           
  1150 ;; *************** function _trata_hora *****************
  1151 ;; Defined at:
  1152 ;;		line 230 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text2
  1181  001546                     __ptext2:
  1182                           	opt stack 0
  1183  001546                     _trata_hora:
  1184                           	opt stack 29
  1185                           
  1186                           ;main.c: 231: if((horaAtual.s) == 60){
  1187                           
  1188                           ;incstack = 0
  1189  001546  0E3C               	movlw	60
  1190  001548  182E               	xorwf	_horaAtual+2,w,c
  1191  00154A  A4D8               	btfss	status,2,c
  1192  00154C  D004               	goto	l3164
  1193                           
  1194                           ;main.c: 232: horaAtual.m += 1;
  1195  00154E  2A2D               	incf	_horaAtual+1,f,c
  1196                           
  1197                           ;main.c: 233: horaAtual.s = 0;
  1198  001550  0E00               	movlw	0
  1199  001552  6E2E               	movwf	_horaAtual+2,c
  1200                           
  1201                           ;main.c: 234: return;
  1202  001554  0012               	return	
  1203  001556                     l3164:
  1204                           
  1205                           ;main.c: 235: }
  1206                           ;main.c: 236: if((horaAtual.m) == 60){
  1207  001556  0E3C               	movlw	60
  1208  001558  182D               	xorwf	_horaAtual+1,w,c
  1209  00155A  A4D8               	btfss	status,2,c
  1210  00155C  0012               	return	
  1211                           
  1212                           ;main.c: 237: horaAtual.h+=1;
  1213  00155E  2A2C               	incf	_horaAtual,f,c
  1214                           
  1215                           ;main.c: 238: horaAtual.m = 0;
  1216  001560  0E00               	movlw	0
  1217  001562  6E2D               	movwf	_horaAtual+1,c
  1218                           
  1219                           ;main.c: 239: return;
  1220  001564  0012               	return	
  1221  001566                     __end_of_trata_hora:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec1	equ	0xFE5
  1231                           fsr1l	equ	0xFE1
  1232                           postinc2	equ	0xFDE
  1233                           postdec2	equ	0xFDD
  1234                           fsr2h	equ	0xFDA
  1235                           fsr2l	equ	0xFD9
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _trata_data *****************
  1239 ;; Defined at:
  1240 ;;		line 206 in file "main.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1254 ;;      Params:         0       0       0       0       0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1257 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text3
  1269  0011EA                     __ptext3:
  1270                           	opt stack 0
  1271  0011EA                     _trata_data:
  1272                           	opt stack 29
  1273                           
  1274                           ;main.c: 207: if(horaAtual.h == 24){
  1275                           
  1276                           ;incstack = 0
  1277  0011EA  0E18               	movlw	24
  1278  0011EC  182C               	xorwf	_horaAtual,w,c
  1279  0011EE  A4D8               	btfss	status,2,c
  1280  0011F0  D004               	goto	l3126
  1281                           
  1282                           ;main.c: 208: dia+=1;
  1283  0011F2  2A49               	incf	_dia,f,c
  1284                           
  1285                           ;main.c: 209: horaAtual.h = 0;
  1286  0011F4  0E00               	movlw	0
  1287  0011F6  6E2C               	movwf	_horaAtual,c
  1288                           
  1289                           ;main.c: 210: return;
  1290  0011F8  0012               	return	
  1291  0011FA                     l3126:
  1292                           
  1293                           ;main.c: 211: }
  1294                           ;main.c: 212: if(mes == 2 && dia == 28){
  1295  0011FA  0E02               	movlw	2
  1296  0011FC  1848               	xorwf	_mes,w,c
  1297  0011FE  A4D8               	btfss	status,2,c
  1298  001200  D008               	goto	l3136
  1299  001202  0E1C               	movlw	28
  1300  001204  1849               	xorwf	_dia,w,c
  1301  001206  A4D8               	btfss	status,2,c
  1302  001208  D004               	goto	l3136
  1303                           
  1304                           ;main.c: 213: mes+=1;
  1305  00120A  2A48               	incf	_mes,f,c
  1306                           
  1307                           ;main.c: 214: dia = 1;
  1308  00120C  0E01               	movlw	1
  1309  00120E  6E49               	movwf	_dia,c
  1310                           
  1311                           ;main.c: 215: return;
  1312  001210  0012               	return	
  1313  001212                     l3136:
  1314                           
  1315                           ;main.c: 216: }
  1316                           ;main.c: 217: if(mes == 12 && dia == 30){
  1317  001212  0E0C               	movlw	12
  1318  001214  1848               	xorwf	_mes,w,c
  1319  001216  A4D8               	btfss	status,2,c
  1320  001218  D00B               	goto	l3148
  1321  00121A  0E1E               	movlw	30
  1322  00121C  1849               	xorwf	_dia,w,c
  1323  00121E  A4D8               	btfss	status,2,c
  1324  001220  D007               	goto	l3148
  1325                           
  1326                           ;main.c: 218: ano+=1;
  1327  001222  4A43               	infsnz	_ano,f,c
  1328  001224  2A44               	incf	_ano+1,f,c
  1329                           
  1330                           ;main.c: 219: mes = 1;
  1331  001226  0E01               	movlw	1
  1332  001228  6E48               	movwf	_mes,c
  1333                           
  1334                           ;main.c: 220: dia = 1;
  1335  00122A  0E01               	movlw	1
  1336  00122C  6E49               	movwf	_dia,c
  1337                           
  1338                           ;main.c: 221: return;
  1339  00122E  0012               	return	
  1340  001230                     l3148:
  1341                           
  1342                           ;main.c: 222: }
  1343                           ;main.c: 223: if(dia == 30){
  1344  001230  0E1E               	movlw	30
  1345  001232  1849               	xorwf	_dia,w,c
  1346  001234  A4D8               	btfss	status,2,c
  1347  001236  0012               	return	
  1348                           
  1349                           ;main.c: 224: mes+=1;
  1350  001238  2A48               	incf	_mes,f,c
  1351                           
  1352                           ;main.c: 225: dia = 1;
  1353  00123A  0E01               	movlw	1
  1354  00123C  6E49               	movwf	_dia,c
  1355                           
  1356                           ;main.c: 226: return;
  1357  00123E  0012               	return	
  1358  001240                     __end_of_trata_data:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           intcon	equ	0xFF2
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           fsr1l	equ	0xFE1
  1369                           postinc2	equ	0xFDE
  1370                           postdec2	equ	0xFDD
  1371                           fsr2h	equ	0xFDA
  1372                           fsr2l	equ	0xFD9
  1373                           status	equ	0xFD8
  1374                           
  1375 ;; *************** function _telas *****************
  1376 ;; Defined at:
  1377 ;;		line 147 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1393 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1394 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    7
  1398 ;; This function calls:
  1399 ;;		_escreveMensagem
  1400 ;;		_limpaTela
  1401 ;;		_sprintf
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text4
  1408  0008AA                     __ptext4:
  1409                           	opt stack 0
  1410  0008AA                     _telas:
  1411                           	opt stack 23
  1412                           
  1413                           ;main.c: 149: switch(tela){
  1414                           
  1415                           ;incstack = 0
  1416  0008AA  D105               	goto	l3102
  1417  0008AC                     l3062:
  1418                           
  1419                           ;main.c: 151: limpaTela();
  1420  0008AC  EC10  F00B         	call	_limpaTela	;wreg free
  1421                           
  1422                           ;main.c: 152: sprintf(mensagemL1,"[%c %c %c %c %c %c %c]", semanaPrint[0], semanaPrint[1
      +                          ], semanaPrint[2], semanaPrint[3], semanaPrint[4], semanaPrint[5], semanaPrint[6]);
  1423  0008B0  0E86               	movlw	low _mensagemL1
  1424  0008B2  0100               	movlb	0	; () banked
  1425  0008B4  6F9D               	movwf	sprintf@sp& (0+255),b
  1426  0008B6  0E00               	movlw	high _mensagemL1
  1427  0008B8  0100               	movlb	0	; () banked
  1428  0008BA  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1429  0008BC  0E23               	movlw	low STR_1
  1430  0008BE  0100               	movlb	0	; () banked
  1431  0008C0  6F9F               	movwf	sprintf@f& (0+255),b
  1432  0008C2  0E08               	movlw	high STR_1
  1433  0008C4  0100               	movlb	0	; () banked
  1434  0008C6  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1435  0008C8  C0B1  F0A1         	movff	_semanaPrint,?_sprintf+4
  1436  0008CC  0100               	movlb	0	; () banked
  1437  0008CE  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1438  0008D0  C0B2  F0A3         	movff	_semanaPrint+1,?_sprintf+6
  1439  0008D4  0100               	movlb	0	; () banked
  1440  0008D6  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1441  0008D8  C0B3  F0A5         	movff	_semanaPrint+2,?_sprintf+8
  1442  0008DC  0100               	movlb	0	; () banked
  1443  0008DE  6BA6               	clrf	(?_sprintf+9)& (0+255),b
  1444  0008E0  C0B4  F0A7         	movff	_semanaPrint+3,?_sprintf+10
  1445  0008E4  0100               	movlb	0	; () banked
  1446  0008E6  6BA8               	clrf	(?_sprintf+11)& (0+255),b
  1447  0008E8  C0B5  F0A9         	movff	_semanaPrint+4,?_sprintf+12
  1448  0008EC  0100               	movlb	0	; () banked
  1449  0008EE  6BAA               	clrf	(?_sprintf+13)& (0+255),b
  1450  0008F0  C0B6  F0AB         	movff	_semanaPrint+5,?_sprintf+14
  1451  0008F4  0100               	movlb	0	; () banked
  1452  0008F6  6BAC               	clrf	(?_sprintf+15)& (0+255),b
  1453  0008F8  C0B7  F0AD         	movff	_semanaPrint+6,?_sprintf+16
  1454  0008FC  0100               	movlb	0	; () banked
  1455  0008FE  6BAE               	clrf	(?_sprintf+17)& (0+255),b
  1456  000900  EC5A  F006         	call	_sprintf	;wreg free
  1457                           
  1458                           ;main.c: 153: sprintf(mensagemL2,"Horario : %d:%d:%d",horaAtual.h , horaAtual.m, horaAtu
      +                          al.s);
  1459  000904  0E76               	movlw	low _mensagemL2
  1460  000906  0100               	movlb	0	; () banked
  1461  000908  6F9D               	movwf	sprintf@sp& (0+255),b
  1462  00090A  0E00               	movlw	high _mensagemL2
  1463  00090C  0100               	movlb	0	; () banked
  1464  00090E  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1465  000910  0E50               	movlw	low STR_2
  1466  000912  0100               	movlb	0	; () banked
  1467  000914  6F9F               	movwf	sprintf@f& (0+255),b
  1468  000916  0E08               	movlw	high STR_2
  1469  000918  0100               	movlb	0	; () banked
  1470  00091A  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1471  00091C  C02C  F0A1         	movff	_horaAtual,?_sprintf+4
  1472  000920  0100               	movlb	0	; () banked
  1473  000922  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  1474  000924  C02D  F0A3         	movff	_horaAtual+1,?_sprintf+6
  1475  000928  0100               	movlb	0	; () banked
  1476  00092A  6BA4               	clrf	(?_sprintf+7)& (0+255),b
  1477  00092C  C02E  F0A5         	movff	_horaAtual+2,?_sprintf+8
  1478  000930  0100               	movlb	0	; () banked
  1479  000932  6BA6               	clrf	(?_sprintf+9)& (0+255),b
  1480  000934  EC5A  F006         	call	_sprintf	;wreg free
  1481                           
  1482                           ;main.c: 154: escreveMensagem(mensagemL1,mensagemL2);
  1483  000938  0E86               	movlw	low _mensagemL1
  1484  00093A  6E17               	movwf	escreveMensagem@l1,c
  1485  00093C  0E00               	movlw	high _mensagemL1
  1486  00093E  6E18               	movwf	escreveMensagem@l1+1,c
  1487  000940  0E76               	movlw	low _mensagemL2
  1488  000942  6E19               	movwf	escreveMensagem@l2,c
  1489  000944  0E00               	movlw	high _mensagemL2
  1490  000946  6E1A               	movwf	escreveMensagem@l2+1,c
  1491  000948  ECB3  F00A         	call	_escreveMensagem	;wreg free
  1492                           
  1493                           ;main.c: 155: break;
  1494  00094C  0012               	return	
  1495  00094E                     l3070:
  1496                           
  1497                           ;main.c: 158: limpaTela();
  1498  00094E  EC10  F00B         	call	_limpaTela	;wreg free
  1499                           
  1500                           ;main.c: 159: sprintf(mensagemL1,"CONSUMO : ");
  1501  000952  0E86               	movlw	low _mensagemL1
  1502  000954  0100               	movlb	0	; () banked
  1503  000956  6F9D               	movwf	sprintf@sp& (0+255),b
  1504  000958  0E00               	movlw	high _mensagemL1
  1505  00095A  0100               	movlb	0	; () banked
  1506  00095C  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1507  00095E  0E82               	movlw	low STR_3
  1508  000960  0100               	movlb	0	; () banked
  1509  000962  6F9F               	movwf	sprintf@f& (0+255),b
  1510  000964  0E08               	movlw	high STR_3
  1511  000966  0100               	movlb	0	; () banked
  1512  000968  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1513  00096A  EC5A  F006         	call	_sprintf	;wreg free
  1514                           
  1515                           ;main.c: 160: sprintf(mensagemL2,"f*        %d W",energia.consumoDia[dia].potencia);
  1516  00096E  0E76               	movlw	low _mensagemL2
  1517  000970  0100               	movlb	0	; () banked
  1518  000972  6F9D               	movwf	sprintf@sp& (0+255),b
  1519  000974  0E00               	movlw	high _mensagemL2
  1520  000976  0100               	movlb	0	; () banked
  1521  000978  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1522  00097A  0E73               	movlw	low STR_4
  1523  00097C  0100               	movlb	0	; () banked
  1524  00097E  6F9F               	movwf	sprintf@f& (0+255),b
  1525  000980  0E08               	movlw	high STR_4
  1526  000982  0100               	movlb	0	; () banked
  1527  000984  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1528  000986  5049               	movf	_dia,w,c
  1529  000988  0D04               	mullw	4
  1530  00098A  0E00               	movlw	low _energia
  1531  00098C  24F3               	addwf	prodl,w,c
  1532  00098E  6ED9               	movwf	fsr2l,c
  1533  000990  0E01               	movlw	high _energia
  1534  000992  20F4               	addwfc	prodh,w,c
  1535  000994  6EDA               	movwf	fsr2h,c
  1536  000996  CFDE F0A1          	movff	postinc2,?_sprintf+4
  1537  00099A  CFDD F0A2          	movff	postdec2,?_sprintf+5
  1538  00099E  EC5A  F006         	call	_sprintf	;wreg free
  1539                           
  1540                           ;main.c: 161: escreveMensagem(mensagemL1,mensagemL2);
  1541  0009A2  0E86               	movlw	low _mensagemL1
  1542  0009A4  6E17               	movwf	escreveMensagem@l1,c
  1543  0009A6  0E00               	movlw	high _mensagemL1
  1544  0009A8  6E18               	movwf	escreveMensagem@l1+1,c
  1545  0009AA  0E76               	movlw	low _mensagemL2
  1546  0009AC  6E19               	movwf	escreveMensagem@l2,c
  1547  0009AE  0E00               	movlw	high _mensagemL2
  1548  0009B0  6E1A               	movwf	escreveMensagem@l2+1,c
  1549  0009B2  ECB3  F00A         	call	_escreveMensagem	;wreg free
  1550                           
  1551                           ;main.c: 163: break;
  1552  0009B6  0012               	return	
  1553  0009B8                     l3078:
  1554                           
  1555                           ;main.c: 166: limpaTela();
  1556  0009B8  EC10  F00B         	call	_limpaTela	;wreg free
  1557                           
  1558                           ;main.c: 167: sprintf(mensagemL1,"CONFIGURACAO : ");
  1559  0009BC  0E86               	movlw	low _mensagemL1
  1560  0009BE  0100               	movlb	0	; () banked
  1561  0009C0  6F9D               	movwf	sprintf@sp& (0+255),b
  1562  0009C2  0E00               	movlw	high _mensagemL1
  1563  0009C4  0100               	movlb	0	; () banked
  1564  0009C6  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1565  0009C8  0E63               	movlw	low STR_5
  1566  0009CA  0100               	movlb	0	; () banked
  1567  0009CC  6F9F               	movwf	sprintf@f& (0+255),b
  1568  0009CE  0E08               	movlw	high STR_5
  1569  0009D0  0100               	movlb	0	; () banked
  1570  0009D2  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1571  0009D4  EC5A  F006         	call	_sprintf	;wreg free
  1572                           
  1573                           ;main.c: 168: sprintf(mensagemL2,"f* on/off_sem/hor_rel");
  1574  0009D8  0E76               	movlw	low _mensagemL2
  1575  0009DA  0100               	movlb	0	; () banked
  1576  0009DC  6F9D               	movwf	sprintf@sp& (0+255),b
  1577  0009DE  0E00               	movlw	high _mensagemL2
  1578  0009E0  0100               	movlb	0	; () banked
  1579  0009E2  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1580  0009E4  0E3A               	movlw	low STR_6
  1581  0009E6  0100               	movlb	0	; () banked
  1582  0009E8  6F9F               	movwf	sprintf@f& (0+255),b
  1583  0009EA  0E08               	movlw	high STR_6
  1584  0009EC  0100               	movlb	0	; () banked
  1585  0009EE  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1586  0009F0  EC5A  F006         	call	_sprintf	;wreg free
  1587                           
  1588                           ;main.c: 169: escreveMensagem(mensagemL1,mensagemL2);
  1589  0009F4  0E86               	movlw	low _mensagemL1
  1590  0009F6  6E17               	movwf	escreveMensagem@l1,c
  1591  0009F8  0E00               	movlw	high _mensagemL1
  1592  0009FA  6E18               	movwf	escreveMensagem@l1+1,c
  1593  0009FC  0E76               	movlw	low _mensagemL2
  1594  0009FE  6E19               	movwf	escreveMensagem@l2,c
  1595  000A00  0E00               	movlw	high _mensagemL2
  1596  000A02  6E1A               	movwf	escreveMensagem@l2+1,c
  1597  000A04  ECB3  F00A         	call	_escreveMensagem	;wreg free
  1598                           
  1599                           ;main.c: 170: break;
  1600  000A08  0012               	return	
  1601  000A0A                     l3086:
  1602                           
  1603                           ;main.c: 173: limpaTela();
  1604  000A0A  EC10  F00B         	call	_limpaTela	;wreg free
  1605                           
  1606                           ;main.c: 174: sprintf(mensagemL1,"ALARME : ");
  1607  000A0E  0E86               	movlw	low _mensagemL1
  1608  000A10  0100               	movlb	0	; () banked
  1609  000A12  6F9D               	movwf	sprintf@sp& (0+255),b
  1610  000A14  0E00               	movlw	high _mensagemL1
  1611  000A16  0100               	movlb	0	; () banked
  1612  000A18  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1613  000A1A  0E8D               	movlw	low STR_7
  1614  000A1C  0100               	movlb	0	; () banked
  1615  000A1E  6F9F               	movwf	sprintf@f& (0+255),b
  1616  000A20  0E08               	movlw	high STR_7
  1617  000A22  0100               	movlb	0	; () banked
  1618  000A24  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1619  000A26  EC5A  F006         	call	_sprintf	;wreg free
  1620                           
  1621                           ;main.c: 175: sprintf(mensagemL2,"f* hora_liga/hora_desl.");
  1622  000A2A  0E76               	movlw	low _mensagemL2
  1623  000A2C  0100               	movlb	0	; () banked
  1624  000A2E  6F9D               	movwf	sprintf@sp& (0+255),b
  1625  000A30  0E00               	movlw	high _mensagemL2
  1626  000A32  0100               	movlb	0	; () banked
  1627  000A34  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1628  000A36  0E0B               	movlw	low STR_8
  1629  000A38  0100               	movlb	0	; () banked
  1630  000A3A  6F9F               	movwf	sprintf@f& (0+255),b
  1631  000A3C  0E08               	movlw	high STR_8
  1632  000A3E  0100               	movlb	0	; () banked
  1633  000A40  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1634  000A42  EC5A  F006         	call	_sprintf	;wreg free
  1635                           
  1636                           ;main.c: 176: escreveMensagem(mensagemL1,mensagemL2);
  1637  000A46  0E86               	movlw	low _mensagemL1
  1638  000A48  6E17               	movwf	escreveMensagem@l1,c
  1639  000A4A  0E00               	movlw	high _mensagemL1
  1640  000A4C  6E18               	movwf	escreveMensagem@l1+1,c
  1641  000A4E  0E76               	movlw	low _mensagemL2
  1642  000A50  6E19               	movwf	escreveMensagem@l2,c
  1643  000A52  0E00               	movlw	high _mensagemL2
  1644  000A54  6E1A               	movwf	escreveMensagem@l2+1,c
  1645  000A56  ECB3  F00A         	call	_escreveMensagem	;wreg free
  1646                           
  1647                           ;main.c: 178: break;
  1648  000A5A  0012               	return	
  1649  000A5C                     l3094:
  1650                           
  1651                           ;main.c: 181: limpaTela();
  1652  000A5C  EC10  F00B         	call	_limpaTela	;wreg free
  1653                           
  1654                           ;main.c: 182: sprintf(mensagemL1,"Defaltoss");
  1655  000A60  0E86               	movlw	low _mensagemL1
  1656  000A62  0100               	movlb	0	; () banked
  1657  000A64  6F9D               	movwf	sprintf@sp& (0+255),b
  1658  000A66  0E00               	movlw	high _mensagemL1
  1659  000A68  0100               	movlb	0	; () banked
  1660  000A6A  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1661  000A6C  0E97               	movlw	low STR_9
  1662  000A6E  0100               	movlb	0	; () banked
  1663  000A70  6F9F               	movwf	sprintf@f& (0+255),b
  1664  000A72  0E08               	movlw	high STR_9
  1665  000A74  0100               	movlb	0	; () banked
  1666  000A76  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1667  000A78  EC5A  F006         	call	_sprintf	;wreg free
  1668                           
  1669                           ;main.c: 183: sprintf(mensagemL2,"tela %i", tela);
  1670  000A7C  0E76               	movlw	low _mensagemL2
  1671  000A7E  0100               	movlb	0	; () banked
  1672  000A80  6F9D               	movwf	sprintf@sp& (0+255),b
  1673  000A82  0E00               	movlw	high _mensagemL2
  1674  000A84  0100               	movlb	0	; () banked
  1675  000A86  6F9E               	movwf	(sprintf@sp+1)& (0+255),b
  1676  000A88  0EA1               	movlw	low STR_10
  1677  000A8A  0100               	movlb	0	; () banked
  1678  000A8C  6F9F               	movwf	sprintf@f& (0+255),b
  1679  000A8E  0E08               	movlw	high STR_10
  1680  000A90  0100               	movlb	0	; () banked
  1681  000A92  6FA0               	movwf	(sprintf@f+1)& (0+255),b
  1682  000A94  C041  F0A1         	movff	_tela,?_sprintf+4
  1683  000A98  C042  F0A2         	movff	_tela+1,?_sprintf+5
  1684  000A9C  EC5A  F006         	call	_sprintf	;wreg free
  1685                           
  1686                           ;main.c: 184: escreveMensagem(mensagemL1,mensagemL2);
  1687  000AA0  0E86               	movlw	low _mensagemL1
  1688  000AA2  6E17               	movwf	escreveMensagem@l1,c
  1689  000AA4  0E00               	movlw	high _mensagemL1
  1690  000AA6  6E18               	movwf	escreveMensagem@l1+1,c
  1691  000AA8  0E76               	movlw	low _mensagemL2
  1692  000AAA  6E19               	movwf	escreveMensagem@l2,c
  1693  000AAC  0E00               	movlw	high _mensagemL2
  1694  000AAE  6E1A               	movwf	escreveMensagem@l2+1,c
  1695  000AB0  ECB3  F00A         	call	_escreveMensagem	;wreg free
  1696                           
  1697                           ;main.c: 186: }
  1698  000AB4  0012               	return	
  1699  000AB6                     l3102:
  1700  000AB6  C041  F026         	movff	_tela,??_telas
  1701  000ABA  C042  F027         	movff	_tela+1,??_telas+1
  1702                           
  1703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1704                           ; Switch size 1, requested type "space"
  1705                           ; Number of cases is 1, Range of values is 0 to 0
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte            4     3 (average)
  1709                           ;	Chosen strategy is simple_byte
  1710  000ABE  5027               	movf	??_telas+1,w,c
  1711  000AC0  0A00               	xorlw	0	; case 0
  1712  000AC2  A4D8               	btfss	status,2,c
  1713  000AC4  D7CB               	goto	l3094
  1714                           
  1715                           ; Switch size 1, requested type "space"
  1716                           ; Number of cases is 4, Range of values is 1 to 4
  1717                           ; switch strategies available:
  1718                           ; Name         Instructions Cycles
  1719                           ; simple_byte           13     7 (average)
  1720                           ;	Chosen strategy is simple_byte
  1721  000AC6  5026               	movf	??_telas,w,c
  1722  000AC8  0A01               	xorlw	1	; case 1
  1723  000ACA  B4D8               	btfsc	status,2,c
  1724  000ACC  D6EF               	goto	l3062
  1725  000ACE  0A03               	xorlw	3	; case 2
  1726  000AD0  B4D8               	btfsc	status,2,c
  1727  000AD2  D73D               	goto	l3070
  1728  000AD4  0A01               	xorlw	1	; case 3
  1729  000AD6  B4D8               	btfsc	status,2,c
  1730  000AD8  D76F               	goto	l3078
  1731  000ADA  0A07               	xorlw	7	; case 4
  1732  000ADC  B4D8               	btfsc	status,2,c
  1733  000ADE  D795               	goto	l3086
  1734  000AE0  D7BD               	goto	l3094
  1735  000AE2                     __end_of_telas:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           intcon	equ	0xFF2
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           postdec1	equ	0xFE5
  1747                           fsr1l	equ	0xFE1
  1748                           postinc2	equ	0xFDE
  1749                           postdec2	equ	0xFDD
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _sprintf *****************
  1755 ;; Defined at:
  1756 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  1759 ;;		 -> mensagemL2(16), mensagemL1(16), 
  1760 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1761 ;;		 -> STR_10(8), STR_9(10), STR_8(24), STR_7(10), 
  1762 ;;		 -> STR_6(22), STR_5(16), STR_4(15), STR_3(11), 
  1763 ;;		 -> STR_2(19), STR_1(23), 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  tmpval          4    0        struct .
  1766 ;;  cp              3    0        PTR const unsigned char 
  1767 ;;  val             2   34[COMRAM] unsigned int 
  1768 ;;  ap              2   32[COMRAM] PTR void [1]
  1769 ;;		 -> ?_sprintf(2), 
  1770 ;;  len             2    0        unsigned int 
  1771 ;;  c               1   36[COMRAM] char 
  1772 ;;  prec            1   31[COMRAM] char 
  1773 ;;  flag            1   30[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  2    0[BANK0 ] int 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1783 ;;      Params:         0      18       0       0       0       0       0       0       0
  1784 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1785 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1786 ;;      Totals:         8      18       0       0       0       0       0       0       0
  1787 ;;Total ram usage:       26 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    2
  1790 ;; This function calls:
  1791 ;;		___lwdiv
  1792 ;;		___lwmod
  1793 ;; This function is called by:
  1794 ;;		_telas
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text5
  1799  000CB4                     __ptext5:
  1800                           	opt stack 0
  1801  000CB4                     _sprintf:
  1802                           	opt stack 27
  1803                           
  1804                           ;doprnt.c: 494: va_list ap;
  1805                           ;doprnt.c: 499: signed char c;
  1806                           ;doprnt.c: 506: signed char prec;
  1807                           ;doprnt.c: 508: unsigned char flag;
  1808                           ;doprnt.c: 523: union {
  1809                           ;doprnt.c: 524: unsigned long vd;
  1810                           ;doprnt.c: 525: double integ;
  1811                           ;doprnt.c: 526: } tmpval;
  1812                           ;doprnt.c: 528: unsigned int val;
  1813                           ;doprnt.c: 529: unsigned len;
  1814                           ;doprnt.c: 530: const char * cp;
  1815                           ;doprnt.c: 533: *ap = __va_start();
  1816                           
  1817                           ;incstack = 0
  1818  000CB4  0EA1               	movlw	low (?_sprintf+4)
  1819  000CB6  6E21               	movwf	sprintf@ap,c
  1820  000CB8  0E00               	movlw	high (?_sprintf+4)
  1821  000CBA  6E22               	movwf	sprintf@ap+1,c
  1822                           
  1823                           ;doprnt.c: 536: while(c = *f++) {
  1824  000CBC  D0A7               	goto	l2970
  1825  000CBE                     l2910:
  1826                           
  1827                           ;doprnt.c: 538: if(c != '%')
  1828  000CBE  0E25               	movlw	37
  1829  000CC0  1825               	xorwf	sprintf@c,w,c
  1830  000CC2  B4D8               	btfsc	status,2,c
  1831  000CC4  D005               	goto	l2916
  1832  000CC6  D011               	goto	l2922
  1833  000CC8                     l2914:
  1834  000CC8  0100               	movlb	0	; () banked
  1835  000CCA  4B9D               	infsnz	sprintf@sp& (0+255),f,b
  1836  000CCC  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
  1837                           
  1838                           ;doprnt.c: 542: continue;
  1839  000CCE  D09E               	goto	l2970
  1840  000CD0                     l2916:
  1841                           
  1842                           ;doprnt.c: 543: }
  1843                           ;doprnt.c: 548: flag = 0;
  1844  000CD0  0E00               	movlw	0
  1845  000CD2  6E1F               	movwf	sprintf@flag,c
  1846                           
  1847                           ;doprnt.c: 635: switch(c = *f++) {
  1848  000CD4  D011               	goto	l2928
  1849  000CD6                     l2918:
  1850                           
  1851                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1852  000CD6  C021  FFD9         	movff	sprintf@ap,fsr2l
  1853  000CDA  C022  FFDA         	movff	sprintf@ap+1,fsr2h
  1854  000CDE  50DF               	movf	indf2,w,c
  1855  000CE0  6E25               	movwf	sprintf@c,c
  1856  000CE2  0E02               	movlw	2
  1857  000CE4  2621               	addwf	sprintf@ap,f,c
  1858  000CE6  0E00               	movlw	0
  1859  000CE8  2222               	addwfc	sprintf@ap+1,f,c
  1860  000CEA                     l2922:
  1861                           
  1862                           ;doprnt.c: 809: ((*sp++ = (c)));
  1863  000CEA  C09D  FFD9         	movff	sprintf@sp,fsr2l
  1864  000CEE  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  1865  000CF2  C025  FFDF         	movff	sprintf@c,indf2
  1866  000CF6  D7E8               	goto	l2914
  1867  000CF8                     l2928:
  1868  000CF8  C09F  FFF6         	movff	sprintf@f,tblptrl
  1869  000CFC  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
  1870  000D00  0100               	movlb	0	; () banked
  1871  000D02  4B9F               	infsnz	sprintf@f& (0+255),f,b
  1872  000D04  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
  1873  000D06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1874  000D06  6AF8               	clrf	tblptru,c
  1875  000D08                     	endif
  1876  000D08                     	if	0	;tblptru may be non-zero
  1877  000D08                     	endif
  1878  000D08  0008               	tblrd		*
  1879  000D0A  CFF5 F025          	movff	tablat,sprintf@c
  1880  000D0E  5025               	movf	sprintf@c,w,c
  1881                           
  1882                           ; Switch size 1, requested type "space"
  1883                           ; Number of cases is 4, Range of values is 0 to 105
  1884                           ; switch strategies available:
  1885                           ; Name         Instructions Cycles
  1886                           ; simple_byte           13     7 (average)
  1887                           ;	Chosen strategy is simple_byte
  1888  000D10  0A00               	xorlw	0	; case 0
  1889  000D12  B4D8               	btfsc	status,2,c
  1890  000D14  D089               	goto	l2972
  1891  000D16  0A63               	xorlw	99	; case 99
  1892  000D18  B4D8               	btfsc	status,2,c
  1893  000D1A  D7DD               	goto	l2918
  1894  000D1C  0A07               	xorlw	7	; case 100
  1895  000D1E  B4D8               	btfsc	status,2,c
  1896  000D20  D003               	goto	l2930
  1897  000D22  0A0D               	xorlw	13	; case 105
  1898  000D24  A4D8               	btfss	status,2,c
  1899  000D26  D7E1               	goto	l2922
  1900  000D28                     l2930:
  1901                           
  1902                           ;doprnt.c: 1253: {
  1903                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1904  000D28  C021  FFD9         	movff	sprintf@ap,fsr2l
  1905  000D2C  C022  FFDA         	movff	sprintf@ap+1,fsr2h
  1906  000D30  CFDE F023          	movff	postinc2,sprintf@val
  1907  000D34  CFDD F024          	movff	postdec2,sprintf@val+1
  1908  000D38  0E02               	movlw	2
  1909  000D3A  2621               	addwf	sprintf@ap,f,c
  1910  000D3C  0E00               	movlw	0
  1911  000D3E  2222               	addwfc	sprintf@ap+1,f,c
  1912                           
  1913                           ;doprnt.c: 1261: if((int)val < 0) {
  1914  000D40  AE24               	btfss	sprintf@val+1,7,c
  1915  000D42  D006               	goto	l2940
  1916                           
  1917                           ;doprnt.c: 1262: flag |= 0x03;
  1918  000D44  0E03               	movlw	3
  1919  000D46  121F               	iorwf	sprintf@flag,f,c
  1920                           
  1921                           ;doprnt.c: 1263: val = -val;
  1922  000D48  6C23               	negf	sprintf@val,c
  1923  000D4A  1E24               	comf	sprintf@val+1,f,c
  1924  000D4C  B0D8               	btfsc	status,0,c
  1925  000D4E  2A24               	incf	sprintf@val+1,f,c
  1926  000D50                     l2940:
  1927                           
  1928                           ;doprnt.c: 1264: }
  1929                           ;doprnt.c: 1266: }
  1930                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1931  000D50  0E01               	movlw	1
  1932  000D52  6E25               	movwf	sprintf@c,c
  1933  000D54                     l2942:
  1934  000D54  0E05               	movlw	5
  1935  000D56  1825               	xorwf	sprintf@c,w,c
  1936  000D58  B4D8               	btfsc	status,2,c
  1937  000D5A  D015               	goto	l2954
  1938                           
  1939                           ;doprnt.c: 1306: if(val < dpowers[c])
  1940  000D5C  5025               	movf	sprintf@c,w,c
  1941  000D5E  0D02               	mullw	2
  1942  000D60  0E01               	movlw	low _dpowers
  1943  000D62  24F3               	addwf	prodl,w,c
  1944  000D64  6EF6               	movwf	tblptrl,c
  1945  000D66  0E08               	movlw	high _dpowers
  1946  000D68  20F4               	addwfc	prodh,w,c
  1947  000D6A  6EF7               	movwf	tblptrh,c
  1948  000D6C                     	if	1	;There are 3 active tblptr bytes
  1949  000D6C  6AF8               	clrf	tblptru,c
  1950  000D6E  0E00               	movlw	low (__mediumconst shr (0+16))
  1951  000D70  22F8               	addwfc	tblptru,f,c
  1952  000D72                     	endif
  1953  000D72  0009               	tblrd		*+
  1954  000D74  50F5               	movf	tablat,w,c
  1955  000D76  5C23               	subwf	sprintf@val,w,c
  1956  000D78  0009               	tblrd		*+
  1957  000D7A  50F5               	movf	tablat,w,c
  1958  000D7C  5824               	subwfb	sprintf@val+1,w,c
  1959  000D7E  A0D8               	btfss	status,0,c
  1960  000D80  D002               	goto	l2954
  1961                           
  1962                           ;doprnt.c: 1307: break;
  1963  000D82  2A25               	incf	sprintf@c,f,c
  1964  000D84  D7E7               	goto	l2942
  1965  000D86                     l2954:
  1966                           
  1967                           ;doprnt.c: 1422: {
  1968                           ;doprnt.c: 1438: if(flag & 0x03)
  1969  000D86  C01F  F01E         	movff	sprintf@flag,??_sprintf
  1970  000D8A  0E03               	movlw	3
  1971  000D8C  161E               	andwf	??_sprintf,f,c
  1972  000D8E  B4D8               	btfsc	status,2,c
  1973  000D90  D009               	goto	l2960
  1974                           
  1975                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1976  000D92  C09D  FFD9         	movff	sprintf@sp,fsr2l
  1977  000D96  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  1978  000D9A  0E2D               	movlw	45
  1979  000D9C  6EDF               	movwf	indf2,c
  1980  000D9E  0100               	movlb	0	; () banked
  1981  000DA0  4B9D               	infsnz	sprintf@sp& (0+255),f,b
  1982  000DA2  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
  1983  000DA4                     l2960:
  1984                           
  1985                           ;doprnt.c: 1469: }
  1986                           ;doprnt.c: 1472: prec = c;
  1987  000DA4  C025  F020         	movff	sprintf@c,sprintf@prec
  1988                           
  1989                           ;doprnt.c: 1474: while(prec--) {
  1990  000DA8  D02D               	goto	l2968
  1991  000DAA                     l2962:
  1992                           
  1993                           ;doprnt.c: 1478: {
  1994                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1995  000DAA  5020               	movf	sprintf@prec,w,c
  1996  000DAC  0D02               	mullw	2
  1997  000DAE  0E01               	movlw	low _dpowers
  1998  000DB0  24F3               	addwf	prodl,w,c
  1999  000DB2  6EF6               	movwf	tblptrl,c
  2000  000DB4  0E08               	movlw	high _dpowers
  2001  000DB6  20F4               	addwfc	prodh,w,c
  2002  000DB8  6EF7               	movwf	tblptrh,c
  2003  000DBA                     	if	1	;There are 3 active tblptr bytes
  2004  000DBA  6AF8               	clrf	tblptru,c
  2005  000DBC  0E00               	movlw	low (__mediumconst shr (0+16))
  2006  000DBE  22F8               	addwfc	tblptru,f,c
  2007  000DC0                     	endif
  2008  000DC0  0009               	tblrd		*+
  2009  000DC2  CFF5 F014          	movff	tablat,___lwdiv@divisor
  2010  000DC6  000A               	tblrd		*-
  2011  000DC8  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  2012  000DCC  C023  F012         	movff	sprintf@val,___lwdiv@dividend
  2013  000DD0  C024  F013         	movff	sprintf@val+1,___lwdiv@dividend+1
  2014  000DD4  EC20  F009         	call	___lwdiv	;wreg free
  2015  000DD8  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  2016  000DDC  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2017  000DE0  0E00               	movlw	0
  2018  000DE2  6E1C               	movwf	___lwmod@divisor+1,c
  2019  000DE4  0E0A               	movlw	10
  2020  000DE6  6E1B               	movwf	___lwmod@divisor,c
  2021  000DE8  ECE0  F009         	call	___lwmod	;wreg free
  2022  000DEC  5019               	movf	?___lwmod,w,c
  2023  000DEE  0F30               	addlw	48
  2024  000DF0  6E25               	movwf	sprintf@c,c
  2025                           
  2026                           ;doprnt.c: 1523: }
  2027                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2028  000DF2  C09D  FFD9         	movff	sprintf@sp,fsr2l
  2029  000DF6  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  2030  000DFA  C025  FFDF         	movff	sprintf@c,indf2
  2031  000DFE  0100               	movlb	0	; () banked
  2032  000E00  4B9D               	infsnz	sprintf@sp& (0+255),f,b
  2033  000E02  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
  2034  000E04                     l2968:
  2035  000E04  0620               	decf	sprintf@prec,f,c
  2036  000E06  2820               	incf	sprintf@prec,w,c
  2037  000E08  A4D8               	btfss	status,2,c
  2038  000E0A  D7CF               	goto	l2962
  2039  000E0C                     l2970:
  2040  000E0C  C09F  FFF6         	movff	sprintf@f,tblptrl
  2041  000E10  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
  2042  000E14  0100               	movlb	0	; () banked
  2043  000E16  4B9F               	infsnz	sprintf@f& (0+255),f,b
  2044  000E18  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
  2045  000E1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2046  000E1A  6AF8               	clrf	tblptru,c
  2047  000E1C                     	endif
  2048  000E1C                     	if	0	;tblptru may be non-zero
  2049  000E1C                     	endif
  2050  000E1C  0008               	tblrd		*
  2051  000E1E  CFF5 F025          	movff	tablat,sprintf@c
  2052  000E22  5025               	movf	sprintf@c,w,c
  2053  000E24  A4D8               	btfss	status,2,c
  2054  000E26  D74B               	goto	l2910
  2055  000E28                     l2972:
  2056                           
  2057                           ;doprnt.c: 1538: *sp = 0;
  2058  000E28  C09D  FFD9         	movff	sprintf@sp,fsr2l
  2059  000E2C  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
  2060  000E30  0E00               	movlw	0
  2061  000E32  6EDF               	movwf	indf2,c
  2062  000E34  0012               	return	
  2063  000E36                     __end_of_sprintf:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           intcon	equ	0xFF2
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1l	equ	0xFE1
  2076                           indf2	equ	0xFDF
  2077                           postinc2	equ	0xFDE
  2078                           postdec2	equ	0xFDD
  2079                           fsr2h	equ	0xFDA
  2080                           fsr2l	equ	0xFD9
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function ___lwmod *****************
  2084 ;; Defined at:
  2085 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  dividend        2   24[COMRAM] unsigned int 
  2088 ;;  divisor         2   26[COMRAM] unsigned int 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  counter         1   28[COMRAM] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  2   24[COMRAM] unsigned int 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2100 ;;      Params:         4       0       0       0       0       0       0       0       0
  2101 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2103 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2104 ;;Total ram usage:        5 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_sprintf
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text6
  2115  0013C0                     __ptext6:
  2116                           	opt stack 0
  2117  0013C0                     ___lwmod:
  2118                           	opt stack 27
  2119                           
  2120                           ;incstack = 0
  2121  0013C0  501B               	movf	___lwmod@divisor,w,c
  2122  0013C2  101C               	iorwf	___lwmod@divisor+1,w,c
  2123  0013C4  B4D8               	btfsc	status,2,c
  2124  0013C6  D018               	goto	l837
  2125  0013C8  0E01               	movlw	1
  2126  0013CA  6E1D               	movwf	___lwmod@counter,c
  2127  0013CC  D004               	goto	l2890
  2128  0013CE                     l2888:
  2129  0013CE  90D8               	bcf	status,0,c
  2130  0013D0  361B               	rlcf	___lwmod@divisor,f,c
  2131  0013D2  361C               	rlcf	___lwmod@divisor+1,f,c
  2132  0013D4  2A1D               	incf	___lwmod@counter,f,c
  2133  0013D6                     l2890:
  2134  0013D6  AE1C               	btfss	___lwmod@divisor+1,7,c
  2135  0013D8  D7FA               	goto	l2888
  2136  0013DA                     l2892:
  2137  0013DA  501B               	movf	___lwmod@divisor,w,c
  2138  0013DC  5C19               	subwf	___lwmod@dividend,w,c
  2139  0013DE  501C               	movf	___lwmod@divisor+1,w,c
  2140  0013E0  581A               	subwfb	___lwmod@dividend+1,w,c
  2141  0013E2  A0D8               	btfss	status,0,c
  2142  0013E4  D004               	goto	l2896
  2143  0013E6  501B               	movf	___lwmod@divisor,w,c
  2144  0013E8  5E19               	subwf	___lwmod@dividend,f,c
  2145  0013EA  501C               	movf	___lwmod@divisor+1,w,c
  2146  0013EC  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2147  0013EE                     l2896:
  2148  0013EE  90D8               	bcf	status,0,c
  2149  0013F0  321C               	rrcf	___lwmod@divisor+1,f,c
  2150  0013F2  321B               	rrcf	___lwmod@divisor,f,c
  2151  0013F4  2E1D               	decfsz	___lwmod@counter,f,c
  2152  0013F6  D7F1               	goto	l2892
  2153  0013F8                     l837:
  2154  0013F8  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2155  0013FC  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2156  001400  0012               	return		;funcret
  2157  001402                     __end_of___lwmod:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           indf2	equ	0xFDF
  2171                           postinc2	equ	0xFDE
  2172                           postdec2	equ	0xFDD
  2173                           fsr2h	equ	0xFDA
  2174                           fsr2l	equ	0xFD9
  2175                           status	equ	0xFD8
  2176                           
  2177 ;; *************** function ___lwdiv *****************
  2178 ;; Defined at:
  2179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  dividend        2   17[COMRAM] unsigned int 
  2182 ;;  divisor         2   19[COMRAM] unsigned int 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  quotient        2   22[COMRAM] unsigned int 
  2185 ;;  counter         1   21[COMRAM] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2   17[COMRAM] unsigned int 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2195 ;;      Params:         4       0       0       0       0       0       0       0       0
  2196 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2198 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:        7 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_sprintf
  2206 ;;		_calcula_temperatura
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text7
  2211  001240                     __ptext7:
  2212                           	opt stack 0
  2213  001240                     ___lwdiv:
  2214                           	opt stack 27
  2215                           
  2216                           ;incstack = 0
  2217  001240  0E00               	movlw	0
  2218  001242  6E18               	movwf	___lwdiv@quotient+1,c
  2219  001244  0E00               	movlw	0
  2220  001246  6E17               	movwf	___lwdiv@quotient,c
  2221  001248  5014               	movf	___lwdiv@divisor,w,c
  2222  00124A  1015               	iorwf	___lwdiv@divisor+1,w,c
  2223  00124C  B4D8               	btfsc	status,2,c
  2224  00124E  D01C               	goto	l827
  2225  001250  0E01               	movlw	1
  2226  001252  6E16               	movwf	___lwdiv@counter,c
  2227  001254  D004               	goto	l2870
  2228  001256                     l2868:
  2229  001256  90D8               	bcf	status,0,c
  2230  001258  3614               	rlcf	___lwdiv@divisor,f,c
  2231  00125A  3615               	rlcf	___lwdiv@divisor+1,f,c
  2232  00125C  2A16               	incf	___lwdiv@counter,f,c
  2233  00125E                     l2870:
  2234  00125E  AE15               	btfss	___lwdiv@divisor+1,7,c
  2235  001260  D7FA               	goto	l2868
  2236  001262                     l2872:
  2237  001262  90D8               	bcf	status,0,c
  2238  001264  3617               	rlcf	___lwdiv@quotient,f,c
  2239  001266  3618               	rlcf	___lwdiv@quotient+1,f,c
  2240  001268  5014               	movf	___lwdiv@divisor,w,c
  2241  00126A  5C12               	subwf	___lwdiv@dividend,w,c
  2242  00126C  5015               	movf	___lwdiv@divisor+1,w,c
  2243  00126E  5813               	subwfb	___lwdiv@dividend+1,w,c
  2244  001270  A0D8               	btfss	status,0,c
  2245  001272  D005               	goto	l2880
  2246  001274  5014               	movf	___lwdiv@divisor,w,c
  2247  001276  5E12               	subwf	___lwdiv@dividend,f,c
  2248  001278  5015               	movf	___lwdiv@divisor+1,w,c
  2249  00127A  5A13               	subwfb	___lwdiv@dividend+1,f,c
  2250  00127C  8017               	bsf	___lwdiv@quotient,0,c
  2251  00127E                     l2880:
  2252  00127E  90D8               	bcf	status,0,c
  2253  001280  3215               	rrcf	___lwdiv@divisor+1,f,c
  2254  001282  3214               	rrcf	___lwdiv@divisor,f,c
  2255  001284  2E16               	decfsz	___lwdiv@counter,f,c
  2256  001286  D7ED               	goto	l2872
  2257  001288                     l827:
  2258  001288  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  2259  00128C  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2260  001290  0012               	return		;funcret
  2261  001292                     __end_of___lwdiv:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           prodh	equ	0xFF4
  2268                           prodl	equ	0xFF3
  2269                           intcon	equ	0xFF2
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           postdec1	equ	0xFE5
  2273                           fsr1l	equ	0xFE1
  2274                           indf2	equ	0xFDF
  2275                           postinc2	equ	0xFDE
  2276                           postdec2	equ	0xFDD
  2277                           fsr2h	equ	0xFDA
  2278                           fsr2l	equ	0xFD9
  2279                           status	equ	0xFD8
  2280                           
  2281 ;; *************** function _limpaTela *****************
  2282 ;; Defined at:
  2283 ;;		line 142 in file "main.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2297 ;;      Params:         0       0       0       0       0       0       0       0       0
  2298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2300 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2301 ;;Total ram usage:        0 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    6
  2304 ;; This function calls:
  2305 ;;		_init_XLCD
  2306 ;; This function is called by:
  2307 ;;		_telas
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text8
  2312  001620                     __ptext8:
  2313                           	opt stack 0
  2314  001620                     _limpaTela:
  2315                           	opt stack 23
  2316                           
  2317                           ;main.c: 143: init_XLCD();
  2318                           
  2319                           ;incstack = 0
  2320  001620  ECC3  F00A         	call	_init_XLCD	;wreg free
  2321  001624  0012               	return		;funcret
  2322  001626                     __end_of_limpaTela:
  2323                           	opt stack 0
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           prodh	equ	0xFF4
  2329                           prodl	equ	0xFF3
  2330                           intcon	equ	0xFF2
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           postdec1	equ	0xFE5
  2334                           fsr1l	equ	0xFE1
  2335                           indf2	equ	0xFDF
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _init_XLCD *****************
  2343 ;; Defined at:
  2344 ;;		line 123 in file "main.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    5
  2365 ;; This function calls:
  2366 ;;		_BusyXLCD
  2367 ;;		_OpenXLCD
  2368 ;;		_WriteCmdXLCD
  2369 ;; This function is called by:
  2370 ;;		_limpaTela
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text9
  2376  001586                     __ptext9:
  2377                           	opt stack 0
  2378  001586                     _init_XLCD:
  2379                           	opt stack 23
  2380                           
  2381                           ;main.c: 124: OpenXLCD(0b00101100&0b00111000);
  2382                           
  2383                           ;incstack = 0
  2384  001586  0E28               	movlw	40
  2385  001588  ECFE  F007         	call	_OpenXLCD
  2386  00158C                     l2836:
  2387  00158C  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2388  001590  0900               	iorlw	0
  2389  001592  A4D8               	btfss	status,2,c
  2390  001594  D7FB               	goto	l2836
  2391                           
  2392                           ;main.c: 126: WriteCmdXLCD(0x06);
  2393  001596  0E06               	movlw	6
  2394  001598  EC01  F00A         	call	_WriteCmdXLCD
  2395                           
  2396                           ;main.c: 127: WriteCmdXLCD(0x0C);
  2397  00159C  0E0C               	movlw	12
  2398  00159E  EC01  F00A         	call	_WriteCmdXLCD
  2399  0015A2  0012               	return		;funcret
  2400  0015A4                     __end_of_init_XLCD:
  2401                           	opt stack 0
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           prodh	equ	0xFF4
  2407                           prodl	equ	0xFF3
  2408                           intcon	equ	0xFF2
  2409                           postinc0	equ	0xFEE
  2410                           wreg	equ	0xFE8
  2411                           postdec1	equ	0xFE5
  2412                           fsr1l	equ	0xFE1
  2413                           indf2	equ	0xFDF
  2414                           postinc2	equ	0xFDE
  2415                           postdec2	equ	0xFDD
  2416                           fsr2h	equ	0xFDA
  2417                           fsr2l	equ	0xFD9
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _OpenXLCD *****************
  2421 ;; Defined at:
  2422 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  lcdtype         1    wreg     unsigned char 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  lcdtype         1   22[COMRAM] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0
  2437 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2439 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2440 ;;Total ram usage:        1 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    4
  2443 ;; This function calls:
  2444 ;;		_BusyXLCD
  2445 ;;		_Delay10KTCYx
  2446 ;;		_DelayPORXLCD
  2447 ;;		_SetDDRamAddr
  2448 ;;		_WriteCmdXLCD
  2449 ;; This function is called by:
  2450 ;;		_init_XLCD
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text10
  2455  000FFC                     __ptext10:
  2456                           	opt stack 0
  2457  000FFC                     _OpenXLCD:
  2458                           	opt stack 23
  2459                           
  2460                           ;incstack = 0
  2461                           ;OpenXLCD@lcdtype stored from wreg
  2462  000FFC  6E17               	movwf	OpenXLCD@lcdtype,c
  2463  000FFE  0EF0               	movlw	240
  2464  001000  1681               	andwf	3969,f,c	;volatile
  2465  001002  0EF0               	movlw	240
  2466  001004  1693               	andwf	3987,f,c	;volatile
  2467  001006  9C93               	bcf	3987,6,c	;volatile
  2468  001008  9A93               	bcf	3987,5,c	;volatile
  2469  00100A  9893               	bcf	3987,4,c	;volatile
  2470  00100C  9C8A               	bcf	3978,6,c	;volatile
  2471  00100E  9A8A               	bcf	3978,5,c	;volatile
  2472  001010  988A               	bcf	3978,4,c	;volatile
  2473  001012  EC08  F00B         	call	_DelayPORXLCD	;wreg free
  2474  001016  0E30               	movlw	48
  2475  001018  EC01  F00A         	call	_WriteCmdXLCD
  2476  00101C  0E05               	movlw	5
  2477  00101E  ECE1  F00A         	call	_Delay10KTCYx
  2478  001022  0E30               	movlw	48
  2479  001024  EC01  F00A         	call	_WriteCmdXLCD
  2480  001028  0E01               	movlw	1
  2481  00102A  ECE1  F00A         	call	_Delay10KTCYx
  2482  00102E  0E32               	movlw	50
  2483  001030  EC01  F00A         	call	_WriteCmdXLCD
  2484  001034                     l2734:
  2485  001034  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2486  001038  0900               	iorlw	0
  2487  00103A  A4D8               	btfss	status,2,c
  2488  00103C  D7FB               	goto	l2734
  2489  00103E                     l2736:
  2490  00103E  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2491  001042  0900               	iorlw	0
  2492  001044  A4D8               	btfss	status,2,c
  2493  001046  D7FB               	goto	l2736
  2494  001048  5017               	movf	OpenXLCD@lcdtype,w,c
  2495  00104A  EC01  F00A         	call	_WriteCmdXLCD
  2496  00104E                     l2740:
  2497  00104E  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2498  001052  0900               	iorlw	0
  2499  001054  A4D8               	btfss	status,2,c
  2500  001056  D7FB               	goto	l2740
  2501  001058  0E08               	movlw	8
  2502  00105A  EC01  F00A         	call	_WriteCmdXLCD
  2503  00105E                     l2744:
  2504  00105E  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2505  001062  0900               	iorlw	0
  2506  001064  A4D8               	btfss	status,2,c
  2507  001066  D7FB               	goto	l2744
  2508  001068  0E0F               	movlw	15
  2509  00106A  EC01  F00A         	call	_WriteCmdXLCD
  2510  00106E                     l2748:
  2511  00106E  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2512  001072  0900               	iorlw	0
  2513  001074  A4D8               	btfss	status,2,c
  2514  001076  D7FB               	goto	l2748
  2515  001078  0E01               	movlw	1
  2516  00107A  EC01  F00A         	call	_WriteCmdXLCD
  2517  00107E                     l2752:
  2518  00107E  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2519  001082  0900               	iorlw	0
  2520  001084  A4D8               	btfss	status,2,c
  2521  001086  D7FB               	goto	l2752
  2522  001088  0E04               	movlw	4
  2523  00108A  EC01  F00A         	call	_WriteCmdXLCD
  2524  00108E                     l2756:
  2525  00108E  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2526  001092  0900               	iorlw	0
  2527  001094  A4D8               	btfss	status,2,c
  2528  001096  D7FB               	goto	l2756
  2529  001098  0E80               	movlw	128
  2530  00109A  EC49  F009         	call	_SetDDRamAddr
  2531  00109E  0012               	return	
  2532  0010A0                     __end_of_OpenXLCD:
  2533                           	opt stack 0
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           prodh	equ	0xFF4
  2539                           prodl	equ	0xFF3
  2540                           intcon	equ	0xFF2
  2541                           postinc0	equ	0xFEE
  2542                           wreg	equ	0xFE8
  2543                           postdec1	equ	0xFE5
  2544                           fsr1l	equ	0xFE1
  2545                           indf2	equ	0xFDF
  2546                           postinc2	equ	0xFDE
  2547                           postdec2	equ	0xFDD
  2548                           fsr2h	equ	0xFDA
  2549                           fsr2l	equ	0xFD9
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _WriteCmdXLCD *****************
  2553 ;; Defined at:
  2554 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  cmd             1    wreg     unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  cmd             1   18[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0
  2569 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2571 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2572 ;;Total ram usage:        1 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    3
  2575 ;; This function calls:
  2576 ;;		_DelayFor18TCY
  2577 ;; This function is called by:
  2578 ;;		_init_XLCD
  2579 ;;		_OpenXLCD
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text11
  2584  001402                     __ptext11:
  2585                           	opt stack 0
  2586  001402                     _WriteCmdXLCD:
  2587                           	opt stack 24
  2588                           
  2589                           ;incstack = 0
  2590                           ;WriteCmdXLCD@cmd stored from wreg
  2591  001402  6E13               	movwf	WriteCmdXLCD@cmd,c
  2592  001404  0EF0               	movlw	240
  2593  001406  1693               	andwf	3987,f,c	;volatile
  2594  001408  0EF0               	movlw	240
  2595  00140A  1681               	andwf	3969,f,c	;volatile
  2596  00140C  3813               	swapf	WriteCmdXLCD@cmd,w,c
  2597  00140E  0B0F               	andlw	15
  2598  001410  0B0F               	andlw	15
  2599  001412  1281               	iorwf	3969,f,c	;volatile
  2600  001414  9C8A               	bcf	3978,6,c	;volatile
  2601  001416  9A8A               	bcf	3978,5,c	;volatile
  2602  001418  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  2603  00141C  888A               	bsf	3978,4,c	;volatile
  2604  00141E  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  2605  001422  988A               	bcf	3978,4,c	;volatile
  2606  001424  0EF0               	movlw	240
  2607  001426  1681               	andwf	3969,f,c	;volatile
  2608  001428  5013               	movf	WriteCmdXLCD@cmd,w,c
  2609  00142A  0B0F               	andlw	15
  2610  00142C  1281               	iorwf	3969,f,c	;volatile
  2611  00142E  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  2612  001432  888A               	bsf	3978,4,c	;volatile
  2613  001434  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  2614  001438  988A               	bcf	3978,4,c	;volatile
  2615  00143A  0E0F               	movlw	15
  2616  00143C  1293               	iorwf	3987,f,c	;volatile
  2617  00143E  0012               	return	
  2618  001440                     __end_of_WriteCmdXLCD:
  2619                           	opt stack 0
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           postdec1	equ	0xFE5
  2630                           fsr1l	equ	0xFE1
  2631                           indf2	equ	0xFDF
  2632                           postinc2	equ	0xFDE
  2633                           postdec2	equ	0xFDD
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function _DelayPORXLCD *****************
  2639 ;; Defined at:
  2640 ;;		line 363 in file "main.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    2
  2661 ;; This function calls:
  2662 ;;		_Delay1KTCYx
  2663 ;; This function is called by:
  2664 ;;		_OpenXLCD
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text12
  2669  001610                     __ptext12:
  2670                           	opt stack 0
  2671  001610                     _DelayPORXLCD:
  2672                           	opt stack 24
  2673                           
  2674                           ;main.c: 364: Delay1KTCYx(180);
  2675                           
  2676                           ;incstack = 0
  2677  001610  0EB4               	movlw	180
  2678  001612  ECEC  F00A         	call	_Delay1KTCYx
  2679  001616  0012               	return	
  2680  001618                     __end_of_DelayPORXLCD:
  2681                           	opt stack 0
  2682                           tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           prodh	equ	0xFF4
  2687                           prodl	equ	0xFF3
  2688                           intcon	equ	0xFF2
  2689                           postinc0	equ	0xFEE
  2690                           wreg	equ	0xFE8
  2691                           postdec1	equ	0xFE5
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           postinc2	equ	0xFDE
  2695                           postdec2	equ	0xFDD
  2696                           fsr2h	equ	0xFDA
  2697                           fsr2l	equ	0xFD9
  2698                           status	equ	0xFD8
  2699                           
  2700 ;; *************** function _Delay1KTCYx *****************
  2701 ;; Defined at:
  2702 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  unit            1    wreg     unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  unit            1   17[COMRAM] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2716 ;;      Params:         0       0       0       0       0       0       0       0       0
  2717 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2719 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2720 ;;Total ram usage:        1 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_DelayPORXLCD
  2727 ;;		_DelayXLCD
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text13
  2732  0015D8                     __ptext13:
  2733                           	opt stack 0
  2734  0015D8                     _Delay1KTCYx:
  2735                           	opt stack 24
  2736                           
  2737                           ;incstack = 0
  2738                           ;Delay1KTCYx@unit stored from wreg
  2739  0015D8  6E12               	movwf	Delay1KTCYx@unit,c
  2740  0015DA  0EC8               	movlw	200
  2741  0015DC                     u2197:
  2742  0015DC  D000               	nop2	
  2743  0015DE  2EE8               	decfsz	wreg,f,c
  2744  0015E0  D7FD               	bra	u2197
  2745  0015E2  2E12               	decfsz	Delay1KTCYx@unit,f,c
  2746  0015E4  D7FA               	goto	l2612
  2747  0015E6  0012               	return	
  2748  0015E8                     __end_of_Delay1KTCYx:
  2749                           	opt stack 0
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           postdec1	equ	0xFE5
  2760                           fsr1l	equ	0xFE1
  2761                           indf2	equ	0xFDF
  2762                           postinc2	equ	0xFDE
  2763                           postdec2	equ	0xFDD
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _Delay10KTCYx *****************
  2769 ;; Defined at:
  2770 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  unit            1    wreg     unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  unit            1   18[COMRAM] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0
  2785 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2786 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2787 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2788 ;;Total ram usage:        2 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    1
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_OpenXLCD
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text14
  2799  0015C2                     __ptext14:
  2800                           	opt stack 0
  2801  0015C2                     _Delay10KTCYx:
  2802                           	opt stack 25
  2803                           
  2804                           ;incstack = 0
  2805                           ;Delay10KTCYx@unit stored from wreg
  2806  0015C2  6E13               	movwf	Delay10KTCYx@unit,c
  2807  0015C4  0E0D               	movlw	13
  2808  0015C6  6E12               	movwf	??_Delay10KTCYx& (0+255),c
  2809  0015C8  0EFC               	movlw	252
  2810  0015CA                     u2207:
  2811  0015CA  2EE8               	decfsz	wreg,f,c
  2812  0015CC  D7FE               	bra	u2207
  2813  0015CE  2E12               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2814  0015D0  D7FC               	bra	u2207
  2815  0015D2  2E13               	decfsz	Delay10KTCYx@unit,f,c
  2816  0015D4  D7F7               	goto	l2704
  2817  0015D6  0012               	return	
  2818  0015D8                     __end_of_Delay10KTCYx:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           tblptrh	equ	0xFF7
  2822                           tblptrl	equ	0xFF6
  2823                           tablat	equ	0xFF5
  2824                           prodh	equ	0xFF4
  2825                           prodl	equ	0xFF3
  2826                           intcon	equ	0xFF2
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           postdec1	equ	0xFE5
  2830                           fsr1l	equ	0xFE1
  2831                           indf2	equ	0xFDF
  2832                           postinc2	equ	0xFDE
  2833                           postdec2	equ	0xFDD
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _escreveMensagem *****************
  2839 ;; Defined at:
  2840 ;;		line 135 in file "main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  l1              2   22[COMRAM] PTR unsigned char 
  2843 ;;		 -> mensagemL1(16), 
  2844 ;;  l2              2   24[COMRAM] PTR unsigned char 
  2845 ;;		 -> mensagemL2(16), 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2857 ;;      Params:         4       0       0       0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2860 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2861 ;;Total ram usage:        4 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    5
  2864 ;; This function calls:
  2865 ;;		_SetDDRamAddr
  2866 ;;		_putrsXLCD
  2867 ;; This function is called by:
  2868 ;;		_telas
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text15
  2873  001566                     __ptext15:
  2874                           	opt stack 0
  2875  001566                     _escreveMensagem:
  2876                           	opt stack 24
  2877                           
  2878                           ;main.c: 136: putrsXLCD(l1);
  2879                           
  2880                           ;incstack = 0
  2881  001566  C017  F014         	movff	escreveMensagem@l1,putrsXLCD@buffer
  2882  00156A  C018  F015         	movff	escreveMensagem@l1+1,putrsXLCD@buffer+1
  2883  00156E  EC78  F00A         	call	_putrsXLCD	;wreg free
  2884                           
  2885                           ;main.c: 137: SetDDRamAddr(0x40);
  2886  001572  0E40               	movlw	64
  2887  001574  EC49  F009         	call	_SetDDRamAddr
  2888                           
  2889                           ;main.c: 138: putrsXLCD(l2);
  2890  001578  C019  F014         	movff	escreveMensagem@l2,putrsXLCD@buffer
  2891  00157C  C01A  F015         	movff	escreveMensagem@l2+1,putrsXLCD@buffer+1
  2892  001580  EC78  F00A         	call	_putrsXLCD	;wreg free
  2893  001584  0012               	return		;funcret
  2894  001586                     __end_of_escreveMensagem:
  2895                           	opt stack 0
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           intcon	equ	0xFF2
  2903                           postinc0	equ	0xFEE
  2904                           wreg	equ	0xFE8
  2905                           postdec1	equ	0xFE5
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           postinc2	equ	0xFDE
  2909                           postdec2	equ	0xFDD
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _putrsXLCD *****************
  2915 ;; Defined at:
  2916 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  2919 ;;		 -> mensagemL2(16), mensagemL1(16), 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2931 ;;      Params:         2       0       0       0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2934 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2935 ;;Total ram usage:        2 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    4
  2938 ;; This function calls:
  2939 ;;		_BusyXLCD
  2940 ;;		_WriteDataXLCD
  2941 ;; This function is called by:
  2942 ;;		_escreveMensagem
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text16
  2947  0014F0                     __ptext16:
  2948                           	opt stack 0
  2949  0014F0                     _putrsXLCD:
  2950                           	opt stack 24
  2951                           
  2952                           ;incstack = 0
  2953  0014F0  D00E               	goto	l2848
  2954  0014F2                     l2842:
  2955  0014F2  EC3F  F00A         	call	_BusyXLCD	;wreg free
  2956  0014F6  0900               	iorlw	0
  2957  0014F8  A4D8               	btfss	status,2,c
  2958  0014FA  D7FB               	goto	l2842
  2959  0014FC  C014  FFD9         	movff	putrsXLCD@buffer,fsr2l
  2960  001500  C015  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  2961  001504  50DF               	movf	indf2,w,c
  2962  001506  EC20  F00A         	call	_WriteDataXLCD
  2963  00150A  4A14               	infsnz	putrsXLCD@buffer,f,c
  2964  00150C  2A15               	incf	putrsXLCD@buffer+1,f,c
  2965  00150E                     l2848:
  2966  00150E  C014  FFD9         	movff	putrsXLCD@buffer,fsr2l
  2967  001512  C015  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  2968  001516  50DF               	movf	indf2,w,c
  2969  001518  B4D8               	btfsc	status,2,c
  2970  00151A  0012               	return	
  2971  00151C  D7EA               	goto	l2842
  2972  00151E                     __end_of_putrsXLCD:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           intcon	equ	0xFF2
  2981                           postinc0	equ	0xFEE
  2982                           wreg	equ	0xFE8
  2983                           postdec1	equ	0xFE5
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           postinc2	equ	0xFDE
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function _WriteDataXLCD *****************
  2993 ;; Defined at:
  2994 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  data            1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  data            1   18[COMRAM] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0
  3009 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3011 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3012 ;;Total ram usage:        1 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    3
  3015 ;; This function calls:
  3016 ;;		_DelayFor18TCY
  3017 ;; This function is called by:
  3018 ;;		_putrsXLCD
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text17
  3023  001440                     __ptext17:
  3024                           	opt stack 0
  3025  001440                     _WriteDataXLCD:
  3026                           	opt stack 24
  3027                           
  3028                           ;incstack = 0
  3029                           ;WriteDataXLCD@data stored from wreg
  3030  001440  6E13               	movwf	WriteDataXLCD@data,c
  3031  001442  0EF0               	movlw	240
  3032  001444  1693               	andwf	3987,f,c	;volatile
  3033  001446  0EF0               	movlw	240
  3034  001448  1681               	andwf	3969,f,c	;volatile
  3035  00144A  3813               	swapf	WriteDataXLCD@data,w,c
  3036  00144C  0B0F               	andlw	15
  3037  00144E  0B0F               	andlw	15
  3038  001450  1281               	iorwf	3969,f,c	;volatile
  3039  001452  8A8A               	bsf	3978,5,c	;volatile
  3040  001454  9C8A               	bcf	3978,6,c	;volatile
  3041  001456  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3042  00145A  888A               	bsf	3978,4,c	;volatile
  3043  00145C  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3044  001460  988A               	bcf	3978,4,c	;volatile
  3045  001462  0EF0               	movlw	240
  3046  001464  1681               	andwf	3969,f,c	;volatile
  3047  001466  5013               	movf	WriteDataXLCD@data,w,c
  3048  001468  0B0F               	andlw	15
  3049  00146A  1281               	iorwf	3969,f,c	;volatile
  3050  00146C  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3051  001470  888A               	bsf	3978,4,c	;volatile
  3052  001472  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3053  001476  988A               	bcf	3978,4,c	;volatile
  3054  001478  0E0F               	movlw	15
  3055  00147A  1293               	iorwf	3987,f,c	;volatile
  3056  00147C  0012               	return	
  3057  00147E                     __end_of_WriteDataXLCD:
  3058                           	opt stack 0
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           intcon	equ	0xFF2
  3066                           postinc0	equ	0xFEE
  3067                           wreg	equ	0xFE8
  3068                           postdec1	equ	0xFE5
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           postinc2	equ	0xFDE
  3072                           postdec2	equ	0xFDD
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _BusyXLCD *****************
  3078 ;; Defined at:
  3079 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      unsigned char 
  3086 ;; Registers used:
  3087 ;;		wreg, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    3
  3100 ;; This function calls:
  3101 ;;		_DelayFor18TCY
  3102 ;; This function is called by:
  3103 ;;		_init_XLCD
  3104 ;;		_OpenXLCD
  3105 ;;		_putrsXLCD
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text18
  3110  00147E                     __ptext18:
  3111                           	opt stack 0
  3112  00147E                     _BusyXLCD:
  3113                           	opt stack 23
  3114                           
  3115                           ;incstack = 0
  3116  00147E  8C8A               	bsf	3978,6,c	;volatile
  3117  001480  9A8A               	bcf	3978,5,c	;volatile
  3118  001482  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3119  001486  888A               	bsf	3978,4,c	;volatile
  3120  001488  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3121  00148C  A681               	btfss	3969,3,c	;volatile
  3122  00148E  D00A               	goto	l313
  3123  001490  988A               	bcf	3978,4,c	;volatile
  3124  001492  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3125  001496  888A               	bsf	3978,4,c	;volatile
  3126  001498  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3127  00149C  988A               	bcf	3978,4,c	;volatile
  3128  00149E  9C8A               	bcf	3978,6,c	;volatile
  3129  0014A0  0E01               	movlw	1
  3130  0014A2  0012               	return	
  3131  0014A4                     l313:
  3132  0014A4  988A               	bcf	3978,4,c	;volatile
  3133  0014A6  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3134  0014AA  888A               	bsf	3978,4,c	;volatile
  3135  0014AC  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3136  0014B0  988A               	bcf	3978,4,c	;volatile
  3137  0014B2  9C8A               	bcf	3978,6,c	;volatile
  3138  0014B4  0E00               	movlw	0
  3139  0014B6  0012               	return	
  3140  0014B8                     __end_of_BusyXLCD:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           postdec1	equ	0xFE5
  3152                           fsr1l	equ	0xFE1
  3153                           indf2	equ	0xFDF
  3154                           postinc2	equ	0xFDE
  3155                           postdec2	equ	0xFDD
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _SetDDRamAddr *****************
  3161 ;; Defined at:
  3162 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  DDaddr          1    wreg     unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  DDaddr          1   21[COMRAM] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0
  3177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3178 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3179 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3180 ;;Total ram usage:        4 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    3
  3183 ;; This function calls:
  3184 ;;		_DelayFor18TCY
  3185 ;; This function is called by:
  3186 ;;		_escreveMensagem
  3187 ;;		_OpenXLCD
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text19
  3192  001292                     __ptext19:
  3193                           	opt stack 0
  3194  001292                     _SetDDRamAddr:
  3195                           	opt stack 23
  3196                           
  3197                           ;incstack = 0
  3198                           ;SetDDRamAddr@DDaddr stored from wreg
  3199  001292  6E16               	movwf	SetDDRamAddr@DDaddr,c
  3200  001294  0EF0               	movlw	240
  3201  001296  1693               	andwf	3987,f,c	;volatile
  3202  001298  0EF0               	movlw	240
  3203  00129A  1681               	andwf	3969,f,c	;volatile
  3204  00129C  5016               	movf	SetDDRamAddr@DDaddr,w,c
  3205  00129E  6E13               	movwf	??_SetDDRamAddr& (0+255),c
  3206  0012A0  6A14               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  3207  0012A2  8E13               	bsf	??_SetDDRamAddr,7,c
  3208  0012A4  0E04               	movlw	4
  3209  0012A6  6E15               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  3210  0012A8                     u1585:
  3211  0012A8  3414               	rlcf	??_SetDDRamAddr+1,w,c
  3212  0012AA  3214               	rrcf	??_SetDDRamAddr+1,f,c
  3213  0012AC  3213               	rrcf	??_SetDDRamAddr,f,c
  3214  0012AE  2E15               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  3215  0012B0  D7FB               	goto	u1585
  3216  0012B2  5013               	movf	??_SetDDRamAddr,w,c
  3217  0012B4  0B0F               	andlw	15
  3218  0012B6  1281               	iorwf	3969,f,c	;volatile
  3219  0012B8  9C8A               	bcf	3978,6,c	;volatile
  3220  0012BA  9A8A               	bcf	3978,5,c	;volatile
  3221  0012BC  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3222  0012C0  888A               	bsf	3978,4,c	;volatile
  3223  0012C2  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3224  0012C6  988A               	bcf	3978,4,c	;volatile
  3225  0012C8  0EF0               	movlw	240
  3226  0012CA  1681               	andwf	3969,f,c	;volatile
  3227  0012CC  5016               	movf	SetDDRamAddr@DDaddr,w,c
  3228  0012CE  0B0F               	andlw	15
  3229  0012D0  1281               	iorwf	3969,f,c	;volatile
  3230  0012D2  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3231  0012D6  888A               	bsf	3978,4,c	;volatile
  3232  0012D8  EC0C  F00B         	call	_DelayFor18TCY	;wreg free
  3233  0012DC  988A               	bcf	3978,4,c	;volatile
  3234  0012DE  0E0F               	movlw	15
  3235  0012E0  1293               	iorwf	3987,f,c	;volatile
  3236  0012E2  0012               	return	
  3237  0012E4                     __end_of_SetDDRamAddr:
  3238                           	opt stack 0
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           prodh	equ	0xFF4
  3244                           prodl	equ	0xFF3
  3245                           intcon	equ	0xFF2
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           postdec1	equ	0xFE5
  3249                           fsr1l	equ	0xFE1
  3250                           indf2	equ	0xFDF
  3251                           postinc2	equ	0xFDE
  3252                           postdec2	equ	0xFDD
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function _DelayFor18TCY *****************
  3258 ;; Defined at:
  3259 ;;		line 359 in file "main.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    2
  3280 ;; This function calls:
  3281 ;;		_Delay10TCYx
  3282 ;; This function is called by:
  3283 ;;		_BusyXLCD
  3284 ;;		_SetDDRamAddr
  3285 ;;		_WriteCmdXLCD
  3286 ;;		_WriteDataXLCD
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text20
  3291  001618                     __ptext20:
  3292                           	opt stack 0
  3293  001618                     _DelayFor18TCY:
  3294                           	opt stack 24
  3295                           
  3296                           ;main.c: 360: Delay10TCYx(120);
  3297                           
  3298                           ;incstack = 0
  3299  001618  0E78               	movlw	120
  3300  00161A  ECF4  F00A         	call	_Delay10TCYx
  3301  00161E  0012               	return		;funcret
  3302  001620                     __end_of_DelayFor18TCY:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           prodh	equ	0xFF4
  3309                           prodl	equ	0xFF3
  3310                           intcon	equ	0xFF2
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           postdec1	equ	0xFE5
  3314                           fsr1l	equ	0xFE1
  3315                           indf2	equ	0xFDF
  3316                           postinc2	equ	0xFDE
  3317                           postdec2	equ	0xFDD
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function _Delay10TCYx *****************
  3323 ;; Defined at:
  3324 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  unit            1    wreg     unsigned char 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  unit            1   17[COMRAM] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0
  3339 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3341 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3342 ;;Total ram usage:        1 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    1
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_DelayFor18TCY
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text21
  3353  0015E8                     __ptext21:
  3354                           	opt stack 0
  3355  0015E8                     _Delay10TCYx:
  3356                           	opt stack 24
  3357                           
  3358                           ;incstack = 0
  3359                           ;Delay10TCYx@unit stored from wreg
  3360  0015E8  6E12               	movwf	Delay10TCYx@unit,c
  3361  0015EA  0E03               	movlw	3
  3362  0015EC                     u2217:
  3363  0015EC  2EE8               	decfsz	wreg,f,c
  3364  0015EE  D7FE               	bra	u2217
  3365  0015F0  F000               	nop	
  3366  0015F2  2E12               	decfsz	Delay10TCYx@unit,f,c
  3367  0015F4  D7FA               	goto	l2606
  3368  0015F6  0012               	return	
  3369  0015F8                     __end_of_Delay10TCYx:
  3370                           	opt stack 0
  3371                           tblptru	equ	0xFF8
  3372                           tblptrh	equ	0xFF7
  3373                           tblptrl	equ	0xFF6
  3374                           tablat	equ	0xFF5
  3375                           prodh	equ	0xFF4
  3376                           prodl	equ	0xFF3
  3377                           intcon	equ	0xFF2
  3378                           postinc0	equ	0xFEE
  3379                           wreg	equ	0xFE8
  3380                           postdec1	equ	0xFE5
  3381                           fsr1l	equ	0xFE1
  3382                           indf2	equ	0xFDF
  3383                           postinc2	equ	0xFDE
  3384                           postdec2	equ	0xFDD
  3385                           fsr2h	equ	0xFDA
  3386                           fsr2l	equ	0xFD9
  3387                           status	equ	0xFD8
  3388                           
  3389 ;; *************** function _maquinaEstado *****************
  3390 ;; Defined at:
  3391 ;;		line 502 in file "main.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    4
  3412 ;; This function calls:
  3413 ;;		_enviaByte
  3414 ;;		_trataComando
  3415 ;;		_tx_data
  3416 ;;		_verificaCRCBUFFCOM
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text22
  3423  001332                     __ptext22:
  3424                           	opt stack 0
  3425  001332                     _maquinaEstado:
  3426                           	opt stack 26
  3427                           
  3428                           ;main.c: 503: switch(estado){
  3429                           
  3430                           ;incstack = 0
  3431  001332  D011               	goto	l3202
  3432  001334                     l3190:
  3433                           
  3434                           ;main.c: 505: verificaCRCBUFFCOM();
  3435  001334  EC72  F009         	call	_verificaCRCBUFFCOM	;wreg free
  3436                           
  3437                           ;main.c: 506: break;
  3438  001338  0012               	return	
  3439  00133A                     l3192:
  3440                           
  3441                           ;main.c: 509: trataComando();
  3442  00133A  EC71  F005         	call	_trataComando	;wreg free
  3443                           
  3444                           ;main.c: 510: break;
  3445  00133E  0012               	return	
  3446  001340                     l3194:
  3447                           
  3448                           ;main.c: 513: tx_data();
  3449  001340  EC5C  F00A         	call	_tx_data	;wreg free
  3450                           
  3451                           ;main.c: 514: break;
  3452  001344  0012               	return	
  3453  001346                     l3196:
  3454                           
  3455                           ;main.c: 517: enviaByte(0x05);
  3456  001346  0E05               	movlw	5
  3457  001348  ECD2  F00A         	call	_enviaByte
  3458                           
  3459                           ;main.c: 518: break;
  3460  00134C  0012               	return	
  3461  00134E                     l3198:
  3462                           
  3463                           ;main.c: 521: enviaByte(0x15);
  3464  00134E  0E15               	movlw	21
  3465  001350  ECD2  F00A         	call	_enviaByte
  3466                           
  3467                           ;main.c: 528: }
  3468                           
  3469                           ;main.c: 527: break;
  3470                           
  3471                           ;main.c: 526: default:
  3472                           
  3473                           ;main.c: 525: break;
  3474                           
  3475                           ;main.c: 524: case 0:
  3476                           
  3477                           ;main.c: 522: break;
  3478  001354  0012               	return	
  3479  001356                     l3202:
  3480  001356  5038               	movf	_estado,w,c
  3481                           
  3482                           ; Switch size 1, requested type "space"
  3483                           ; Number of cases is 6, Range of values is 0 to 5
  3484                           ; switch strategies available:
  3485                           ; Name         Instructions Cycles
  3486                           ; simple_byte           19    10 (average)
  3487                           ;	Chosen strategy is simple_byte
  3488  001358  0A00               	xorlw	0	; case 0
  3489  00135A  B4D8               	btfsc	status,2,c
  3490  00135C  0012               	return	
  3491  00135E  0A01               	xorlw	1	; case 1
  3492  001360  B4D8               	btfsc	status,2,c
  3493  001362  D7E8               	goto	l3190
  3494  001364  0A03               	xorlw	3	; case 2
  3495  001366  B4D8               	btfsc	status,2,c
  3496  001368  D7E8               	goto	l3192
  3497  00136A  0A01               	xorlw	1	; case 3
  3498  00136C  B4D8               	btfsc	status,2,c
  3499  00136E  D7E8               	goto	l3194
  3500  001370  0A07               	xorlw	7	; case 4
  3501  001372  B4D8               	btfsc	status,2,c
  3502  001374  D7E8               	goto	l3196
  3503  001376  0A01               	xorlw	1	; case 5
  3504  001378  A4D8               	btfss	status,2,c
  3505  00137A  0012               	return	
  3506  00137C  D7E8               	goto	l3198
  3507  00137E                     __end_of_maquinaEstado:
  3508                           	opt stack 0
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           prodh	equ	0xFF4
  3514                           prodl	equ	0xFF3
  3515                           intcon	equ	0xFF2
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           postdec1	equ	0xFE5
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           postdec2	equ	0xFDD
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _verificaCRCBUFFCOM *****************
  3528 ;; Defined at:
  3529 ;;		line 489 in file "main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  crc             2   33[COMRAM] unsigned int 
  3534 ;;  CRC_OK          1   32[COMRAM] unsigned char 
  3535 ;;  crc2            1   31[COMRAM] unsigned char 
  3536 ;;  crc1            1   30[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        5 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    2
  3553 ;; This function calls:
  3554 ;;		_crc16
  3555 ;; This function is called by:
  3556 ;;		_maquinaEstado
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text23
  3561  0012E4                     __ptext23:
  3562                           	opt stack 0
  3563  0012E4                     _verificaCRCBUFFCOM:
  3564                           	opt stack 27
  3565                           
  3566                           ;main.c: 490: char CRC_OK;
  3567                           ;main.c: 491: unsigned int crc = crc16(BUFFCOM, 5);
  3568                           
  3569                           ;incstack = 0
  3570  0012E4  0E3A               	movlw	low _BUFFCOM
  3571  0012E6  6E12               	movwf	crc16@data_p,c
  3572  0012E8  0E00               	movlw	high _BUFFCOM
  3573  0012EA  6E13               	movwf	crc16@data_p+1,c
  3574  0012EC  0E00               	movlw	0
  3575  0012EE  6E15               	movwf	crc16@length+1,c
  3576  0012F0  0E05               	movlw	5
  3577  0012F2  6E14               	movwf	crc16@length,c
  3578  0012F4  EC95  F007         	call	_crc16	;wreg free
  3579  0012F8  C012  F022         	movff	?_crc16,verificaCRCBUFFCOM@crc
  3580  0012FC  C013  F023         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  3581                           
  3582                           ;main.c: 492: unsigned char crc1 = crc >> 8;
  3583  001300  5023               	movf	verificaCRCBUFFCOM@crc+1,w,c
  3584  001302  6E1F               	movwf	verificaCRCBUFFCOM@crc1,c
  3585                           
  3586                           ;main.c: 493: unsigned char crc2 = crc & 0xFF;
  3587  001304  C022  F020         	movff	verificaCRCBUFFCOM@crc,verificaCRCBUFFCOM@crc2
  3588                           
  3589                           ;main.c: 495: if(crc1 == BUFFCOM[5] && BUFFCOM[6] == crc2) CRC_OK = 1;
  3590  001308  501F               	movf	verificaCRCBUFFCOM@crc1,w,c
  3591  00130A  183F               	xorwf	_BUFFCOM+5,w,c
  3592  00130C  A4D8               	btfss	status,2,c
  3593  00130E  D006               	goto	l3028
  3594  001310  5020               	movf	verificaCRCBUFFCOM@crc2,w,c
  3595  001312  1840               	xorwf	_BUFFCOM+6,w,c
  3596  001314  A4D8               	btfss	status,2,c
  3597  001316  D002               	goto	l3028
  3598  001318  0E01               	movlw	1
  3599  00131A  D001               	goto	L1
  3600  00131C                     l3028:
  3601                           
  3602                           ;main.c: 496: else CRC_OK = 0;
  3603  00131C  0E00               	movlw	0
  3604  00131E                     L1:
  3605  00131E  6E21               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  3606                           
  3607                           ;main.c: 498: if(CRC_OK == 1) estado = 4;
  3608  001320  0421               	decf	verificaCRCBUFFCOM@CRC_OK,w,c
  3609  001322  A4D8               	btfss	status,2,c
  3610  001324  D003               	goto	l3034
  3611  001326  0E04               	movlw	4
  3612  001328  6E38               	movwf	_estado,c
  3613  00132A  0012               	return	
  3614  00132C                     l3034:
  3615                           
  3616                           ;main.c: 499: else estado = 5;
  3617  00132C  0E05               	movlw	5
  3618  00132E  6E38               	movwf	_estado,c
  3619  001330  0012               	return	
  3620  001332                     __end_of_verificaCRCBUFFCOM:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           tblptrh	equ	0xFF7
  3624                           tblptrl	equ	0xFF6
  3625                           tablat	equ	0xFF5
  3626                           prodh	equ	0xFF4
  3627                           prodl	equ	0xFF3
  3628                           intcon	equ	0xFF2
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           postdec1	equ	0xFE5
  3632                           fsr1l	equ	0xFE1
  3633                           indf2	equ	0xFDF
  3634                           postinc2	equ	0xFDE
  3635                           postdec2	equ	0xFDD
  3636                           fsr2h	equ	0xFDA
  3637                           fsr2l	equ	0xFD9
  3638                           status	equ	0xFD8
  3639                           
  3640 ;; *************** function _tx_data *****************
  3641 ;; Defined at:
  3642 ;;		line 543 in file "main.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  cont            2   17[COMRAM] int 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3656 ;;      Params:         0       0       0       0       0       0       0       0       0
  3657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3659 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3660 ;;Total ram usage:        2 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_maquinaEstado
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text24
  3671  0014B8                     __ptext24:
  3672                           	opt stack 0
  3673  0014B8                     _tx_data:
  3674                           	opt stack 28
  3675                           
  3676                           ;main.c: 544: int cont;
  3677                           ;main.c: 545: for(cont=0;cont<7;cont++){
  3678                           
  3679                           ;incstack = 0
  3680  0014B8  0E00               	movlw	0
  3681  0014BA  6E13               	movwf	tx_data@cont+1,c
  3682  0014BC  0E00               	movlw	0
  3683  0014BE  6E12               	movwf	tx_data@cont,c
  3684  0014C0                     l3038:
  3685  0014C0  BE13               	btfsc	tx_data@cont+1,7,c
  3686  0014C2  D006               	goto	l272
  3687  0014C4  5013               	movf	tx_data@cont+1,w,c
  3688  0014C6  E111               	bnz	l3048
  3689  0014C8  0E07               	movlw	7
  3690  0014CA  5C12               	subwf	tx_data@cont,w,c
  3691  0014CC  B0D8               	btfsc	status,0,c
  3692  0014CE  D00D               	goto	l3048
  3693  0014D0                     l272:
  3694  0014D0  A89E               	btfss	3998,4,c	;volatile
  3695  0014D2  D7FE               	goto	l272
  3696                           
  3697                           ;main.c: 547: TXREG = BUFFRESP[cont];
  3698  0014D4  0E96               	movlw	low _BUFFRESP
  3699  0014D6  2412               	addwf	tx_data@cont,w,c
  3700  0014D8  6ED9               	movwf	fsr2l,c
  3701  0014DA  0E00               	movlw	high _BUFFRESP
  3702  0014DC  2013               	addwfc	tx_data@cont+1,w,c
  3703  0014DE  6EDA               	movwf	fsr2h,c
  3704  0014E0  50DF               	movf	indf2,w,c
  3705  0014E2  6EAD               	movwf	4013,c	;volatile
  3706  0014E4  4A12               	infsnz	tx_data@cont,f,c
  3707  0014E6  2A13               	incf	tx_data@cont+1,f,c
  3708  0014E8  D7EB               	goto	l3038
  3709  0014EA                     l3048:
  3710                           
  3711                           ;main.c: 548: }
  3712                           ;main.c: 549: estado = 0;
  3713  0014EA  0E00               	movlw	0
  3714  0014EC  6E38               	movwf	_estado,c
  3715  0014EE  0012               	return		;funcret
  3716  0014F0                     __end_of_tx_data:
  3717                           	opt stack 0
  3718                           tblptru	equ	0xFF8
  3719                           tblptrh	equ	0xFF7
  3720                           tblptrl	equ	0xFF6
  3721                           tablat	equ	0xFF5
  3722                           prodh	equ	0xFF4
  3723                           prodl	equ	0xFF3
  3724                           intcon	equ	0xFF2
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           postdec1	equ	0xFE5
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _trataComando *****************
  3737 ;; Defined at:
  3738 ;;		line 404 in file "main.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  iterator        2   39[COMRAM] int 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3755 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:        4 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    3
  3759 ;; This function calls:
  3760 ;;		_calculaCRCBUFFRESP
  3761 ;;		_memcpy
  3762 ;; This function is called by:
  3763 ;;		_maquinaEstado
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text25
  3768  000AE2                     __ptext25:
  3769                           	opt stack 0
  3770  000AE2                     _trataComando:
  3771                           	opt stack 26
  3772                           
  3773                           ;main.c: 405: int iterator;
  3774                           ;main.c: 407: switch(BUFFCOM[0]){
  3775                           
  3776                           ;incstack = 0
  3777  000AE2  D0DE               	goto	l3012
  3778  000AE4                     l2978:
  3779                           
  3780                           ;main.c: 409: memcpy(&BUFFRESP[0], &BUFFCOM[0], sizeof(BUFFCOM[0]));
  3781  000AE4  0E96               	movlw	low _BUFFRESP
  3782  000AE6  6E12               	movwf	memcpy@d1,c
  3783  000AE8  0E00               	movlw	high _BUFFRESP
  3784  000AEA  6E13               	movwf	memcpy@d1+1,c
  3785  000AEC  0E3A               	movlw	low _BUFFCOM
  3786  000AEE  6E14               	movwf	memcpy@s1,c
  3787  000AF0  0E00               	movlw	high _BUFFCOM
  3788  000AF2  6E15               	movwf	memcpy@s1+1,c
  3789  000AF4  5014               	movf	memcpy@s1,w,c
  3790  000AF6  1015               	iorwf	memcpy@s1+1,w,c
  3791  000AF8  A4D8               	btfss	status,2,c
  3792  000AFA  0E20               	movlw	32
  3793  000AFC  6E16               	movwf	memcpy@s1+2,c
  3794  000AFE  0E00               	movlw	0
  3795  000B00  6E18               	movwf	memcpy@n+1,c
  3796  000B02  0E01               	movlw	1
  3797  000B04  6E17               	movwf	memcpy@n,c
  3798  000B06  ECC4  F008         	call	_memcpy	;wreg free
  3799                           
  3800                           ;main.c: 410: memcpy(&BUFFRESP[1], &BUFFCOM[1], sizeof(BUFFCOM[1]));
  3801  000B0A  0E97               	movlw	low (_BUFFRESP+1)
  3802  000B0C  6E12               	movwf	memcpy@d1,c
  3803  000B0E  0E00               	movlw	high (_BUFFRESP+1)
  3804  000B10  6E13               	movwf	memcpy@d1+1,c
  3805  000B12  0E3B               	movlw	low (_BUFFCOM+1)
  3806  000B14  6E14               	movwf	memcpy@s1,c
  3807  000B16  0E00               	movlw	high (_BUFFCOM+1)
  3808  000B18  6E15               	movwf	memcpy@s1+1,c
  3809  000B1A  5014               	movf	memcpy@s1,w,c
  3810  000B1C  1015               	iorwf	memcpy@s1+1,w,c
  3811  000B1E  A4D8               	btfss	status,2,c
  3812  000B20  0E20               	movlw	32
  3813  000B22  6E16               	movwf	memcpy@s1+2,c
  3814  000B24  0E00               	movlw	0
  3815  000B26  6E18               	movwf	memcpy@n+1,c
  3816  000B28  0E01               	movlw	1
  3817  000B2A  6E17               	movwf	memcpy@n,c
  3818  000B2C  ECC4  F008         	call	_memcpy	;wreg free
  3819                           
  3820                           ;main.c: 411: switch(BUFFCOM[1]){
  3821  000B30  D04C               	goto	l2984
  3822  000B32                     l2980:
  3823                           
  3824                           ;main.c: 414: memcpy(&BUFFRESP[2], &versao, sizeof(versao));
  3825  000B32  0E98               	movlw	low (_BUFFRESP+2)
  3826  000B34  6E12               	movwf	memcpy@d1,c
  3827  000B36  0E00               	movlw	high (_BUFFRESP+2)
  3828  000B38  6E13               	movwf	memcpy@d1+1,c
  3829  000B3A  0E4C               	movlw	low _versao
  3830  000B3C  6E14               	movwf	memcpy@s1,c
  3831  000B3E  0E00               	movlw	high _versao
  3832  000B40  6E15               	movwf	memcpy@s1+1,c
  3833  000B42  5014               	movf	memcpy@s1,w,c
  3834  000B44  1015               	iorwf	memcpy@s1+1,w,c
  3835  000B46  A4D8               	btfss	status,2,c
  3836  000B48  0E20               	movlw	32
  3837  000B4A  6E16               	movwf	memcpy@s1+2,c
  3838  000B4C  0E00               	movlw	0
  3839  000B4E  6E18               	movwf	memcpy@n+1,c
  3840  000B50  0E01               	movlw	1
  3841  000B52  6E17               	movwf	memcpy@n,c
  3842  000B54  ECC4  F008         	call	_memcpy	;wreg free
  3843                           
  3844                           ;main.c: 415: memcpy(&BUFFRESP[3], &revisao, sizeof(revisao));
  3845  000B58  0E99               	movlw	low (_BUFFRESP+3)
  3846  000B5A  6E12               	movwf	memcpy@d1,c
  3847  000B5C  0E00               	movlw	high (_BUFFRESP+3)
  3848  000B5E  6E13               	movwf	memcpy@d1+1,c
  3849  000B60  0E4B               	movlw	low _revisao
  3850  000B62  6E14               	movwf	memcpy@s1,c
  3851  000B64  0E00               	movlw	high _revisao
  3852  000B66  6E15               	movwf	memcpy@s1+1,c
  3853  000B68  5014               	movf	memcpy@s1,w,c
  3854  000B6A  1015               	iorwf	memcpy@s1+1,w,c
  3855  000B6C  A4D8               	btfss	status,2,c
  3856  000B6E  0E20               	movlw	32
  3857  000B70  6E16               	movwf	memcpy@s1+2,c
  3858  000B72  0E00               	movlw	0
  3859  000B74  6E18               	movwf	memcpy@n+1,c
  3860  000B76  0E01               	movlw	1
  3861  000B78  6E17               	movwf	memcpy@n,c
  3862  000B7A  ECC4  F008         	call	_memcpy	;wreg free
  3863                           
  3864                           ;main.c: 416: memcpy(&BUFFRESP[4], 0x0, sizeof(char));
  3865  000B7E  0E9A               	movlw	low (_BUFFRESP+4)
  3866  000B80  6E12               	movwf	memcpy@d1,c
  3867  000B82  0E00               	movlw	high (_BUFFRESP+4)
  3868  000B84  6E13               	movwf	memcpy@d1+1,c
  3869  000B86  0E00               	movlw	0
  3870  000B88  6E14               	movwf	memcpy@s1,c
  3871  000B8A  0E00               	movlw	0
  3872  000B8C  6E15               	movwf	memcpy@s1+1,c
  3873  000B8E  0E00               	movlw	0
  3874  000B90  6E16               	movwf	memcpy@s1+2,c
  3875  000B92  0E00               	movlw	0
  3876  000B94  6E18               	movwf	memcpy@n+1,c
  3877  000B96  0E01               	movlw	1
  3878  000B98  6E17               	movwf	memcpy@n,c
  3879  000B9A  ECC4  F008         	call	_memcpy	;wreg free
  3880                           
  3881                           ;main.c: 420: break;
  3882  000B9E  D087               	goto	l3014
  3883  000BA0                     l225:
  3884                           
  3885                           ;main.c: 424: BUFFRESP[2] = horaAtual.h;
  3886  000BA0  C02C  F098         	movff	_horaAtual,_BUFFRESP+2
  3887                           
  3888                           ;main.c: 425: BUFFRESP[3] = horaAtual.m;
  3889  000BA4  C02D  F099         	movff	_horaAtual+1,_BUFFRESP+3
  3890                           
  3891                           ;main.c: 426: BUFFRESP[4] = horaAtual.s;
  3892  000BA8  C02E  F09A         	movff	_horaAtual+2,_BUFFRESP+4
  3893                           
  3894                           ;main.c: 427: break;
  3895  000BAC  D080               	goto	l3014
  3896  000BAE                     l226:
  3897                           
  3898                           ;main.c: 431: BUFFRESP[2] = dia;
  3899  000BAE  C049  F098         	movff	_dia,_BUFFRESP+2
  3900                           
  3901                           ;main.c: 432: BUFFRESP[3] = mes;
  3902  000BB2  C048  F099         	movff	_mes,_BUFFRESP+3
  3903                           
  3904                           ;main.c: 433: BUFFRESP[4] = ano;
  3905  000BB6  C043  F09A         	movff	_ano,_BUFFRESP+4
  3906                           
  3907                           ;main.c: 434: break;
  3908  000BBA  D079               	goto	l3014
  3909  000BBC                     l227:
  3910                           
  3911                           ;main.c: 438: BUFFRESP[2] = desp_hora;
  3912  000BBC  C047  F098         	movff	_desp_hora,_BUFFRESP+2
  3913                           
  3914                           ;main.c: 439: BUFFRESP[3] = desp_min;
  3915  000BC0  C046  F099         	movff	_desp_min,_BUFFRESP+3
  3916                           
  3917                           ;main.c: 440: BUFFRESP[4] = 0xFF;
  3918  000BC4  0100               	movlb	0	; () banked
  3919  000BC6  699A               	setf	(_BUFFRESP+4)& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;main.c: 445: }
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;main.c: 444: break;
  3926                           
  3927                           ;main.c: 443: default:
  3928                           
  3929                           ;main.c: 441: break;
  3930  000BC8  D072               	goto	l3014
  3931  000BCA                     l2984:
  3932  000BCA  503B               	movf	_BUFFCOM+1,w,c
  3933                           
  3934                           ; Switch size 1, requested type "space"
  3935                           ; Number of cases is 4, Range of values is 48 to 51
  3936                           ; switch strategies available:
  3937                           ; Name         Instructions Cycles
  3938                           ; simple_byte           13     7 (average)
  3939                           ;	Chosen strategy is simple_byte
  3940  000BCC  0A30               	xorlw	48	; case 48
  3941  000BCE  B4D8               	btfsc	status,2,c
  3942  000BD0  D7B0               	goto	l2980
  3943  000BD2  0A01               	xorlw	1	; case 49
  3944  000BD4  B4D8               	btfsc	status,2,c
  3945  000BD6  D7E4               	goto	l225
  3946  000BD8  0A03               	xorlw	3	; case 50
  3947  000BDA  B4D8               	btfsc	status,2,c
  3948  000BDC  D7E8               	goto	l226
  3949  000BDE  0A01               	xorlw	1	; case 51
  3950  000BE0  B4D8               	btfsc	status,2,c
  3951  000BE2  D7EC               	goto	l227
  3952                           
  3953                           ;main.c: 446: break;
  3954  000BE4  D064               	goto	l3014
  3955  000BE6                     l2986:
  3956                           
  3957                           ;main.c: 449: for(iterator = 0; iterator < 5; iterator++){
  3958  000BE6  0E00               	movlw	0
  3959  000BE8  6E29               	movwf	trataComando@iterator+1,c
  3960  000BEA  0E00               	movlw	0
  3961  000BEC  6E28               	movwf	trataComando@iterator,c
  3962  000BEE                     l2988:
  3963  000BEE  BE29               	btfsc	trataComando@iterator+1,7,c
  3964  000BF0  D006               	goto	l2992
  3965  000BF2  5029               	movf	trataComando@iterator+1,w,c
  3966  000BF4  E147               	bnz	l3008
  3967  000BF6  0E05               	movlw	5
  3968  000BF8  5C28               	subwf	trataComando@iterator,w,c
  3969  000BFA  B0D8               	btfsc	status,0,c
  3970  000BFC  D043               	goto	l3008
  3971  000BFE                     l2992:
  3972                           
  3973                           ;main.c: 450: memcpy(&BUFFRESP[iterator], &BUFFCOM[iterator], sizeof(BUFFCOM[iterator]))
      +                          ;
  3974  000BFE  0E96               	movlw	low _BUFFRESP
  3975  000C00  2428               	addwf	trataComando@iterator,w,c
  3976  000C02  6E12               	movwf	memcpy@d1,c
  3977  000C04  0E00               	movlw	high _BUFFRESP
  3978  000C06  2029               	addwfc	trataComando@iterator+1,w,c
  3979  000C08  6E13               	movwf	memcpy@d1+1,c
  3980  000C0A  0E3A               	movlw	low _BUFFCOM
  3981  000C0C  2428               	addwf	trataComando@iterator,w,c
  3982  000C0E  6E26               	movwf	??_trataComando& (0+255),c
  3983  000C10  0E00               	movlw	high _BUFFCOM
  3984  000C12  2029               	addwfc	trataComando@iterator+1,w,c
  3985  000C14  6E27               	movwf	(??_trataComando+1)& (0+255),c
  3986  000C16  C026  F014         	movff	??_trataComando,memcpy@s1
  3987  000C1A  C027  F015         	movff	??_trataComando+1,memcpy@s1+1
  3988  000C1E  5014               	movf	memcpy@s1,w,c
  3989  000C20  1015               	iorwf	memcpy@s1+1,w,c
  3990  000C22  A4D8               	btfss	status,2,c
  3991  000C24  0E20               	movlw	32
  3992  000C26  6E16               	movwf	memcpy@s1+2,c
  3993  000C28  0E00               	movlw	0
  3994  000C2A  6E18               	movwf	memcpy@n+1,c
  3995  000C2C  0E01               	movlw	1
  3996  000C2E  6E17               	movwf	memcpy@n,c
  3997  000C30  ECC4  F008         	call	_memcpy	;wreg free
  3998  000C34  4A28               	infsnz	trataComando@iterator,f,c
  3999  000C36  2A29               	incf	trataComando@iterator+1,f,c
  4000  000C38  D7DA               	goto	l2988
  4001  000C3A                     l2998:
  4002                           
  4003                           ;main.c: 456: versao = BUFFCOM[2]-48;
  4004  000C3A  503C               	movf	_BUFFCOM+2,w,c
  4005  000C3C  0FD0               	addlw	208
  4006  000C3E  6E4C               	movwf	_versao,c
  4007                           
  4008                           ;main.c: 457: revisao = BUFFCOM[3]-48;
  4009  000C40  503D               	movf	_BUFFCOM+3,w,c
  4010  000C42  0FD0               	addlw	208
  4011  000C44  6E4B               	movwf	_revisao,c
  4012                           
  4013                           ;main.c: 458: break;
  4014  000C46  D033               	goto	l3014
  4015  000C48                     l3000:
  4016                           
  4017                           ;main.c: 462: horaAtual.h = (BUFFCOM[2]-48);
  4018  000C48  503C               	movf	_BUFFCOM+2,w,c
  4019  000C4A  0FD0               	addlw	208
  4020  000C4C  6E2C               	movwf	_horaAtual,c
  4021                           
  4022                           ;main.c: 463: horaAtual.m = (BUFFCOM[3]-48);
  4023  000C4E  503D               	movf	_BUFFCOM+3,w,c
  4024  000C50  0FD0               	addlw	208
  4025  000C52  6E2D               	movwf	_horaAtual+1,c
  4026                           
  4027                           ;main.c: 464: horaAtual.s = (BUFFCOM[4]-48);
  4028  000C54  503E               	movf	_BUFFCOM+4,w,c
  4029  000C56  0FD0               	addlw	208
  4030  000C58  6E2E               	movwf	_horaAtual+2,c
  4031                           
  4032                           ;main.c: 465: break;
  4033  000C5A  D029               	goto	l3014
  4034  000C5C                     l3002:
  4035                           
  4036                           ;main.c: 469: dia = BUFFCOM[2]-48;
  4037  000C5C  503C               	movf	_BUFFCOM+2,w,c
  4038  000C5E  0FD0               	addlw	208
  4039  000C60  6E49               	movwf	_dia,c
  4040                           
  4041                           ;main.c: 470: mes = BUFFCOM[3]-48;
  4042  000C62  503D               	movf	_BUFFCOM+3,w,c
  4043  000C64  0FD0               	addlw	208
  4044  000C66  6E48               	movwf	_mes,c
  4045                           
  4046                           ;main.c: 471: ano = BUFFCOM[4]-48;
  4047  000C68  0ED0               	movlw	208
  4048  000C6A  243E               	addwf	_BUFFCOM+4,w,c
  4049  000C6C  6E43               	movwf	_ano,c
  4050  000C6E  6A44               	clrf	_ano+1,c
  4051  000C70  0EFF               	movlw	255
  4052  000C72  2244               	addwfc	_ano+1,f,c
  4053                           
  4054                           ;main.c: 472: break;
  4055  000C74  D01C               	goto	l3014
  4056  000C76                     l3004:
  4057                           
  4058                           ;main.c: 476: desp_hora = BUFFCOM[2]-48;
  4059  000C76  503C               	movf	_BUFFCOM+2,w,c
  4060  000C78  0FD0               	addlw	208
  4061  000C7A  6E47               	movwf	_desp_hora,c
  4062                           
  4063                           ;main.c: 477: desp_min = BUFFCOM[3]-48;
  4064  000C7C  503D               	movf	_BUFFCOM+3,w,c
  4065  000C7E  0FD0               	addlw	208
  4066  000C80  6E46               	movwf	_desp_min,c
  4067                           
  4068                           ;main.c: 481: }
  4069                           
  4070                           ;main.c: 480: break;
  4071                           
  4072                           ;main.c: 479: default:
  4073  000C82  D015               	goto	l3014
  4074  000C84                     l3008:
  4075  000C84  503B               	movf	_BUFFCOM+1,w,c
  4076                           
  4077                           ; Switch size 1, requested type "space"
  4078                           ; Number of cases is 4, Range of values is 48 to 51
  4079                           ; switch strategies available:
  4080                           ; Name         Instructions Cycles
  4081                           ; simple_byte           13     7 (average)
  4082                           ;	Chosen strategy is simple_byte
  4083  000C86  0A30               	xorlw	48	; case 48
  4084  000C88  B4D8               	btfsc	status,2,c
  4085  000C8A  D7D7               	goto	l2998
  4086  000C8C  0A01               	xorlw	1	; case 49
  4087  000C8E  B4D8               	btfsc	status,2,c
  4088  000C90  D7DB               	goto	l3000
  4089  000C92  0A03               	xorlw	3	; case 50
  4090  000C94  B4D8               	btfsc	status,2,c
  4091  000C96  D7E2               	goto	l3002
  4092  000C98  0A01               	xorlw	1	; case 51
  4093  000C9A  B4D8               	btfsc	status,2,c
  4094  000C9C  D7EC               	goto	l3004
  4095                           
  4096                           ;main.c: 483: }
  4097                           
  4098                           ;main.c: 482: break;
  4099  000C9E  D007               	goto	l3014
  4100  000CA0                     l3012:
  4101  000CA0  503A               	movf	_BUFFCOM,w,c
  4102                           
  4103                           ; Switch size 1, requested type "space"
  4104                           ; Number of cases is 2, Range of values is 49 to 50
  4105                           ; switch strategies available:
  4106                           ; Name         Instructions Cycles
  4107                           ; simple_byte            7     4 (average)
  4108                           ;	Chosen strategy is simple_byte
  4109  000CA2  0A31               	xorlw	49	; case 49
  4110  000CA4  B4D8               	btfsc	status,2,c
  4111  000CA6  D71E               	goto	l2978
  4112  000CA8  0A03               	xorlw	3	; case 50
  4113  000CAA  B4D8               	btfsc	status,2,c
  4114  000CAC  D79C               	goto	l2986
  4115  000CAE                     l3014:
  4116                           
  4117                           ;main.c: 484: calculaCRCBUFFRESP();
  4118  000CAE  EC50  F008         	call	_calculaCRCBUFFRESP	;wreg free
  4119  000CB2  0012               	return		;funcret
  4120  000CB4                     __end_of_trataComando:
  4121                           	opt stack 0
  4122                           tblptru	equ	0xFF8
  4123                           tblptrh	equ	0xFF7
  4124                           tblptrl	equ	0xFF6
  4125                           tablat	equ	0xFF5
  4126                           prodh	equ	0xFF4
  4127                           prodl	equ	0xFF3
  4128                           intcon	equ	0xFF2
  4129                           postinc0	equ	0xFEE
  4130                           wreg	equ	0xFE8
  4131                           postdec1	equ	0xFE5
  4132                           fsr1l	equ	0xFE1
  4133                           indf2	equ	0xFDF
  4134                           postinc2	equ	0xFDE
  4135                           postdec2	equ	0xFDD
  4136                           fsr2h	equ	0xFDA
  4137                           fsr2l	equ	0xFD9
  4138                           status	equ	0xFD8
  4139                           
  4140 ;; *************** function _calculaCRCBUFFRESP *****************
  4141 ;; Defined at:
  4142 ;;		line 395 in file "main.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;		None
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  crc             2   35[COMRAM] unsigned int 
  4147 ;;  crc2            1   34[COMRAM] unsigned char 
  4148 ;;  crc1            1   33[COMRAM] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:        7 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    2
  4165 ;; This function calls:
  4166 ;;		_crc16
  4167 ;;		_memcpy
  4168 ;; This function is called by:
  4169 ;;		_trataComando
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text26
  4174  0010A0                     __ptext26:
  4175                           	opt stack 0
  4176  0010A0                     _calculaCRCBUFFRESP:
  4177                           	opt stack 26
  4178                           
  4179                           ;main.c: 396: unsigned int crc = crc16(BUFFCOM, 5);
  4180                           
  4181                           ;incstack = 0
  4182  0010A0  0E3A               	movlw	low _BUFFCOM
  4183  0010A2  6E12               	movwf	crc16@data_p,c
  4184  0010A4  0E00               	movlw	high _BUFFCOM
  4185  0010A6  6E13               	movwf	crc16@data_p+1,c
  4186  0010A8  0E00               	movlw	0
  4187  0010AA  6E15               	movwf	crc16@length+1,c
  4188  0010AC  0E05               	movlw	5
  4189  0010AE  6E14               	movwf	crc16@length,c
  4190  0010B0  EC95  F007         	call	_crc16	;wreg free
  4191  0010B4  C012  F024         	movff	?_crc16,calculaCRCBUFFRESP@crc
  4192  0010B8  C013  F025         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  4193                           
  4194                           ;main.c: 397: unsigned char crc1 = crc >> 8;
  4195  0010BC  5025               	movf	calculaCRCBUFFRESP@crc+1,w,c
  4196  0010BE  6E22               	movwf	calculaCRCBUFFRESP@crc1,c
  4197                           
  4198                           ;main.c: 398: unsigned char crc2 = crc & 0xFF;
  4199  0010C0  C024  F023         	movff	calculaCRCBUFFRESP@crc,calculaCRCBUFFRESP@crc2
  4200                           
  4201                           ;main.c: 399: memcpy(&BUFFCOM[5], crc1, sizeof(BUFFCOM[5]));
  4202  0010C4  0E3F               	movlw	low (_BUFFCOM+5)
  4203  0010C6  6E12               	movwf	memcpy@d1,c
  4204  0010C8  0E00               	movlw	high (_BUFFCOM+5)
  4205  0010CA  6E13               	movwf	memcpy@d1+1,c
  4206  0010CC  5022               	movf	calculaCRCBUFFRESP@crc1,w,c
  4207  0010CE  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  4208  0010D0  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  4209  0010D2  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  4210  0010D4  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  4211  0010D8  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  4212  0010DC  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  4213  0010E0  0E00               	movlw	0
  4214  0010E2  6E18               	movwf	memcpy@n+1,c
  4215  0010E4  0E01               	movlw	1
  4216  0010E6  6E17               	movwf	memcpy@n,c
  4217  0010E8  ECC4  F008         	call	_memcpy	;wreg free
  4218                           
  4219                           ;main.c: 400: memcpy(&BUFFCOM[6], crc2, sizeof(BUFFCOM[6]));
  4220  0010EC  0E40               	movlw	low (_BUFFCOM+6)
  4221  0010EE  6E12               	movwf	memcpy@d1,c
  4222  0010F0  0E00               	movlw	high (_BUFFCOM+6)
  4223  0010F2  6E13               	movwf	memcpy@d1+1,c
  4224  0010F4  5023               	movf	calculaCRCBUFFRESP@crc2,w,c
  4225  0010F6  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  4226  0010F8  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  4227  0010FA  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  4228  0010FC  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  4229  001100  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  4230  001104  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  4231  001108  0E00               	movlw	0
  4232  00110A  6E18               	movwf	memcpy@n+1,c
  4233  00110C  0E01               	movlw	1
  4234  00110E  6E17               	movwf	memcpy@n,c
  4235  001110  ECC4  F008         	call	_memcpy	;wreg free
  4236                           
  4237                           ;main.c: 401: estado = 3;
  4238  001114  0E03               	movlw	3
  4239  001116  6E38               	movwf	_estado,c
  4240  001118  0012               	return		;funcret
  4241  00111A                     __end_of_calculaCRCBUFFRESP:
  4242                           	opt stack 0
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           prodh	equ	0xFF4
  4248                           prodl	equ	0xFF3
  4249                           intcon	equ	0xFF2
  4250                           postinc0	equ	0xFEE
  4251                           wreg	equ	0xFE8
  4252                           postdec1	equ	0xFE5
  4253                           fsr1l	equ	0xFE1
  4254                           indf2	equ	0xFDF
  4255                           postinc2	equ	0xFDE
  4256                           postdec2	equ	0xFDD
  4257                           fsr2h	equ	0xFDA
  4258                           fsr2l	equ	0xFD9
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function _memcpy *****************
  4262 ;; Defined at:
  4263 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  d1              2   17[COMRAM] PTR void 
  4266 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  4267 ;;  s1              3   19[COMRAM] PTR const void 
  4268 ;;		 -> revisao(1), versao(1), ROM(32767), BUFFCOM(7), 
  4269 ;;  n               2   22[COMRAM] unsigned int 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  s               3   24[COMRAM] PTR const unsigned char 
  4272 ;;		 -> revisao(1), versao(1), ROM(32767), BUFFCOM(7), 
  4273 ;;  d               2   27[COMRAM] PTR unsigned char 
  4274 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  2   17[COMRAM] PTR void 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         7       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4287 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:       12 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_calculaCRCBUFFRESP
  4295 ;;		_trataComando
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text27
  4300  001188                     __ptext27:
  4301                           	opt stack 0
  4302  001188                     _memcpy:
  4303                           	opt stack 27
  4304                           
  4305                           ;incstack = 0
  4306  001188  C014  F019         	movff	memcpy@s1,memcpy@s
  4307  00118C  C015  F01A         	movff	memcpy@s1+1,memcpy@s+1
  4308  001190  C016  F01B         	movff	memcpy@s1+2,memcpy@s+2
  4309  001194  C012  F01C         	movff	memcpy@d1,memcpy@d
  4310  001198  C013  F01D         	movff	memcpy@d1+1,memcpy@d+1
  4311  00119C  D01D               	goto	l2808
  4312  00119E                     l2802:
  4313  00119E  C019  FFF6         	movff	memcpy@s,tblptrl
  4314  0011A2  C01A  FFF7         	movff	memcpy@s+1,tblptrh
  4315  0011A6  C01B  FFF8         	movff	memcpy@s+2,tblptru
  4316  0011AA  C01C  FFD9         	movff	memcpy@d,fsr2l
  4317  0011AE  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  4318  0011B2  BAF8               	btfsc	tblptru,5,c
  4319  0011B4  D003               	bra	u1717
  4320  0011B6  0008               	tblrd		*
  4321  0011B8  50F5               	movf	tablat,w,c
  4322  0011BA  D005               	bra	u1710
  4323  0011BC                     u1717:
  4324  0011BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4325  0011C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4326  0011C4  50EF               	movf	indf0,w,c
  4327  0011C6                     u1710:
  4328  0011C6  6EDF               	movwf	indf2,c
  4329  0011C8  0E01               	movlw	1
  4330  0011CA  2619               	addwf	memcpy@s,f,c
  4331  0011CC  0E00               	movlw	0
  4332  0011CE  221A               	addwfc	memcpy@s+1,f,c
  4333  0011D0  0E00               	movlw	0
  4334  0011D2  221B               	addwfc	memcpy@s+2,f,c
  4335  0011D4  4A1C               	infsnz	memcpy@d,f,c
  4336  0011D6  2A1D               	incf	memcpy@d+1,f,c
  4337  0011D8                     l2808:
  4338  0011D8  0617               	decf	memcpy@n,f,c
  4339  0011DA  A0D8               	btfss	status,0,c
  4340  0011DC  0618               	decf	memcpy@n+1,f,c
  4341  0011DE  2817               	incf	memcpy@n,w,c
  4342  0011E0  E1DE               	bnz	l2802
  4343  0011E2  2818               	incf	memcpy@n+1,w,c
  4344  0011E4  B4D8               	btfsc	status,2,c
  4345  0011E6  0012               	return	
  4346  0011E8  D7DA               	goto	l2802
  4347  0011EA                     __end_of_memcpy:
  4348                           	opt stack 0
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           indf0	equ	0xFEF
  4357                           postinc0	equ	0xFEE
  4358                           fsr0h	equ	0xFEA
  4359                           fsr0l	equ	0xFE9
  4360                           wreg	equ	0xFE8
  4361                           postdec1	equ	0xFE5
  4362                           fsr1l	equ	0xFE1
  4363                           indf2	equ	0xFDF
  4364                           postinc2	equ	0xFDE
  4365                           postdec2	equ	0xFDD
  4366                           fsr2h	equ	0xFDA
  4367                           fsr2l	equ	0xFD9
  4368                           status	equ	0xFD8
  4369                           
  4370 ;; *************** function _crc16 *****************
  4371 ;; Defined at:
  4372 ;;		line 374 in file "main.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  data_p          2   17[COMRAM] PTR unsigned char 
  4375 ;;		 -> BUFFCOM(7), 
  4376 ;;  length          2   19[COMRAM] unsigned short 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  crc             2   28[COMRAM] unsigned int 
  4379 ;;  data            2   26[COMRAM] unsigned int 
  4380 ;;  i               1   25[COMRAM] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  2   17[COMRAM] unsigned short 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4390 ;;      Params:         4       0       0       0       0       0       0       0       0
  4391 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4392 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4393 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4394 ;;Total ram usage:       13 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    1
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_calculaCRCBUFFRESP
  4401 ;;		_verificaCRCBUFFCOM
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text28
  4406  000F2A                     __ptext28:
  4407                           	opt stack 0
  4408  000F2A                     _crc16:
  4409                           	opt stack 27
  4410                           
  4411                           ;main.c: 375: unsigned char i;
  4412                           ;main.c: 376: unsigned int data;
  4413                           ;main.c: 377: unsigned int crc = 0xffff;
  4414                           
  4415                           ;incstack = 0
  4416  000F2A  681D               	setf	crc16@crc,c
  4417  000F2C  681E               	setf	crc16@crc+1,c
  4418                           
  4419                           ;main.c: 378: if (length == 0)
  4420  000F2E  5014               	movf	crc16@length,w,c
  4421  000F30  1015               	iorwf	crc16@length+1,w,c
  4422  000F32  A4D8               	btfss	status,2,c
  4423  000F34  D005               	goto	l2770
  4424                           
  4425                           ;main.c: 379: return (~crc);
  4426  000F36  1C1D               	comf	crc16@crc,w,c
  4427  000F38  6E12               	movwf	?_crc16,c
  4428  000F3A  1C1E               	comf	crc16@crc+1,w,c
  4429  000F3C  6E13               	movwf	?_crc16+1,c
  4430  000F3E  0012               	return	
  4431  000F40                     l2770:
  4432                           
  4433                           ;main.c: 381: for (i=0, data=(unsigned int)0xff & *data_p++; i < 8; i++, data >>= 1){
  4434  000F40  0E00               	movlw	0
  4435  000F42  6E1A               	movwf	crc16@i,c
  4436  000F44  C012  FFD9         	movff	crc16@data_p,fsr2l
  4437  000F48  C013  FFDA         	movff	crc16@data_p+1,fsr2h
  4438  000F4C  50DF               	movf	indf2,w,c
  4439  000F4E  6E16               	movwf	??_crc16& (0+255),c
  4440  000F50  5016               	movf	??_crc16,w,c
  4441  000F52  6E1B               	movwf	crc16@data,c
  4442  000F54  6A1C               	clrf	crc16@data+1,c
  4443  000F56  4A12               	infsnz	crc16@data_p,f,c
  4444  000F58  2A13               	incf	crc16@data_p+1,f,c
  4445  000F5A                     l2776:
  4446  000F5A  0E07               	movlw	7
  4447  000F5C  641A               	cpfsgt	crc16@i,c
  4448  000F5E  D001               	goto	l2780
  4449  000F60  D028               	goto	l2788
  4450  000F62                     l2780:
  4451                           
  4452                           ;main.c: 382: if ((crc & 0x0001) ^ (data & 0x0001))
  4453  000F62  0E01               	movlw	1
  4454  000F64  141B               	andwf	crc16@data,w,c
  4455  000F66  6E16               	movwf	??_crc16& (0+255),c
  4456  000F68  0E00               	movlw	0
  4457  000F6A  141C               	andwf	crc16@data+1,w,c
  4458  000F6C  6E17               	movwf	(??_crc16+1)& (0+255),c
  4459  000F6E  0E01               	movlw	1
  4460  000F70  141D               	andwf	crc16@crc,w,c
  4461  000F72  6E18               	movwf	(??_crc16+2)& (0+255),c
  4462  000F74  0E00               	movlw	0
  4463  000F76  141E               	andwf	crc16@crc+1,w,c
  4464  000F78  6E19               	movwf	(??_crc16+3)& (0+255),c
  4465  000F7A  5016               	movf	??_crc16,w,c
  4466  000F7C  1A18               	xorwf	??_crc16+2,f,c
  4467  000F7E  5017               	movf	??_crc16+1,w,c
  4468  000F80  1A19               	xorwf	??_crc16+3,f,c
  4469  000F82  5018               	movf	??_crc16+2,w,c
  4470  000F84  1019               	iorwf	??_crc16+3,w,c
  4471  000F86  B4D8               	btfsc	status,2,c
  4472  000F88  D00C               	goto	l2784
  4473                           
  4474                           ;main.c: 383: crc = (crc >> 1) ^ 0x8408;
  4475  000F8A  90D8               	bcf	status,0,c
  4476  000F8C  301E               	rrcf	crc16@crc+1,w,c
  4477  000F8E  6E17               	movwf	(??_crc16+1)& (0+255),c
  4478  000F90  301D               	rrcf	crc16@crc,w,c
  4479  000F92  6E16               	movwf	??_crc16& (0+255),c
  4480  000F94  0E08               	movlw	8
  4481  000F96  1816               	xorwf	??_crc16,w,c
  4482  000F98  6E1D               	movwf	crc16@crc,c
  4483  000F9A  0E84               	movlw	132
  4484  000F9C  1817               	xorwf	??_crc16+1,w,c
  4485  000F9E  6E1E               	movwf	crc16@crc+1,c
  4486  000FA0  D003               	goto	l213
  4487  000FA2                     l2784:
  4488                           
  4489                           ;main.c: 384: else crc >>= 1;
  4490  000FA2  90D8               	bcf	status,0,c
  4491  000FA4  321E               	rrcf	crc16@crc+1,f,c
  4492  000FA6  321D               	rrcf	crc16@crc,f,c
  4493  000FA8                     l213:
  4494  000FA8  2A1A               	incf	crc16@i,f,c
  4495  000FAA  90D8               	bcf	status,0,c
  4496  000FAC  321C               	rrcf	crc16@data+1,f,c
  4497  000FAE  321B               	rrcf	crc16@data,f,c
  4498  000FB0  D7D4               	goto	l2776
  4499  000FB2                     l2788:
  4500                           
  4501                           ;main.c: 385: }
  4502                           ;main.c: 386: } while (--length);
  4503  000FB2  0614               	decf	crc16@length,f,c
  4504  000FB4  A0D8               	btfss	status,0,c
  4505  000FB6  0615               	decf	crc16@length+1,f,c
  4506  000FB8  5014               	movf	crc16@length,w,c
  4507  000FBA  1015               	iorwf	crc16@length+1,w,c
  4508  000FBC  A4D8               	btfss	status,2,c
  4509  000FBE  D7C0               	goto	l2770
  4510                           
  4511                           ;main.c: 388: crc = ~crc;
  4512  000FC0  1E1D               	comf	crc16@crc,f,c
  4513  000FC2  1E1E               	comf	crc16@crc+1,f,c
  4514                           
  4515                           ;main.c: 389: data = crc;
  4516  000FC4  C01D  F01B         	movff	crc16@crc,crc16@data
  4517  000FC8  C01E  F01C         	movff	crc16@crc+1,crc16@data+1
  4518                           
  4519                           ;main.c: 390: crc = (crc << 8) | (data >> 8 & 0xff);
  4520  000FCC  C01B  F016         	movff	crc16@data,??_crc16
  4521  000FD0  C01C  F017         	movff	crc16@data+1,??_crc16+1
  4522  000FD4  C017  F016         	movff	??_crc16+1,??_crc16
  4523  000FD8  6A17               	clrf	??_crc16+1,c
  4524  000FDA  5016               	movf	??_crc16,w,c
  4525  000FDC  C01D  F018         	movff	crc16@crc,??_crc16+2
  4526  000FE0  C01E  F019         	movff	crc16@crc+1,??_crc16+3
  4527  000FE4  C018  F019         	movff	??_crc16+2,??_crc16+3
  4528  000FE8  6A18               	clrf	??_crc16+2,c
  4529  000FEA  1018               	iorwf	??_crc16+2,w,c
  4530  000FEC  6E1D               	movwf	crc16@crc,c
  4531  000FEE  5019               	movf	??_crc16+3,w,c
  4532  000FF0  6E1E               	movwf	crc16@crc+1,c
  4533                           
  4534                           ;main.c: 391: return (crc);
  4535  000FF2  C01D  F012         	movff	crc16@crc,?_crc16
  4536  000FF6  C01E  F013         	movff	crc16@crc+1,?_crc16+1
  4537  000FFA  0012               	return	
  4538  000FFC                     __end_of_crc16:
  4539                           	opt stack 0
  4540                           tblptru	equ	0xFF8
  4541                           tblptrh	equ	0xFF7
  4542                           tblptrl	equ	0xFF6
  4543                           tablat	equ	0xFF5
  4544                           prodh	equ	0xFF4
  4545                           prodl	equ	0xFF3
  4546                           intcon	equ	0xFF2
  4547                           indf0	equ	0xFEF
  4548                           postinc0	equ	0xFEE
  4549                           fsr0h	equ	0xFEA
  4550                           fsr0l	equ	0xFE9
  4551                           wreg	equ	0xFE8
  4552                           postdec1	equ	0xFE5
  4553                           fsr1l	equ	0xFE1
  4554                           indf2	equ	0xFDF
  4555                           postinc2	equ	0xFDE
  4556                           postdec2	equ	0xFDD
  4557                           fsr2h	equ	0xFDA
  4558                           fsr2l	equ	0xFD9
  4559                           status	equ	0xFD8
  4560                           
  4561 ;; *************** function _enviaByte *****************
  4562 ;; Defined at:
  4563 ;;		line 531 in file "main.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  BYTE            1    wreg     unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  BYTE            1   17[COMRAM] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0
  4578 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4580 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4581 ;;Total ram usage:        1 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_maquinaEstado
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text29
  4592  0015A4                     __ptext29:
  4593                           	opt stack 0
  4594  0015A4                     _enviaByte:
  4595                           	opt stack 28
  4596                           
  4597                           ;incstack = 0
  4598                           ;enviaByte@BYTE stored from wreg
  4599  0015A4  6E12               	movwf	enviaByte@BYTE,c
  4600  0015A6                     l262:
  4601  0015A6  A89E               	btfss	3998,4,c	;volatile
  4602  0015A8  D7FE               	goto	l262
  4603                           
  4604                           ;main.c: 533: TXREG = BYTE;
  4605  0015AA  C012  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  4606                           
  4607                           ;main.c: 535: if(BYTE==0x05)
  4608  0015AE  0E05               	movlw	5
  4609  0015B0  1812               	xorwf	enviaByte@BYTE,w,c
  4610  0015B2  A4D8               	btfss	status,2,c
  4611  0015B4  D003               	goto	l3058
  4612                           
  4613                           ;main.c: 536: estado = 2;
  4614  0015B6  0E02               	movlw	2
  4615  0015B8  6E38               	movwf	_estado,c
  4616  0015BA  0012               	return	
  4617  0015BC                     l3058:
  4618                           
  4619                           ;main.c: 537: else
  4620                           ;main.c: 538: estado = 0;
  4621  0015BC  0E00               	movlw	0
  4622  0015BE  6E38               	movwf	_estado,c
  4623  0015C0  0012               	return	
  4624  0015C2                     __end_of_enviaByte:
  4625                           	opt stack 0
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodh	equ	0xFF4
  4631                           prodl	equ	0xFF3
  4632                           intcon	equ	0xFF2
  4633                           indf0	equ	0xFEF
  4634                           postinc0	equ	0xFEE
  4635                           fsr0h	equ	0xFEA
  4636                           fsr0l	equ	0xFE9
  4637                           wreg	equ	0xFE8
  4638                           postdec1	equ	0xFE5
  4639                           fsr1l	equ	0xFE1
  4640                           indf2	equ	0xFDF
  4641                           postinc2	equ	0xFDE
  4642                           postdec2	equ	0xFDD
  4643                           fsr2h	equ	0xFDA
  4644                           fsr2l	equ	0xFD9
  4645                           status	equ	0xFD8
  4646                           
  4647 ;; *************** function _despertar *****************
  4648 ;; Defined at:
  4649 ;;		line 243 in file "main.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4666 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text30
  4678  00151E                     __ptext30:
  4679                           	opt stack 0
  4680  00151E                     _despertar:
  4681                           	opt stack 29
  4682                           
  4683                           ;main.c: 244: if((horaAtual.h) == desp_hora && (horaAtual.m) == desp_min && despertou ==
      +                           0){
  4684                           
  4685                           ;incstack = 0
  4686  00151E  5047               	movf	_desp_hora,w,c
  4687  001520  182C               	xorwf	_horaAtual,w,c
  4688  001522  A4D8               	btfss	status,2,c
  4689  001524  D009               	goto	l3182
  4690  001526  5046               	movf	_desp_min,w,c
  4691  001528  182D               	xorwf	_horaAtual+1,w,c
  4692  00152A  A4D8               	btfss	status,2,c
  4693  00152C  D005               	goto	l3182
  4694  00152E  5034               	movf	_despertou,w,c
  4695  001530  A4D8               	btfss	status,2,c
  4696  001532  D002               	goto	l3182
  4697                           
  4698                           ;main.c: 245: PORTAbits.RA0 = 1;
  4699  001534  8080               	bsf	3968,0,c	;volatile
  4700                           
  4701                           ;main.c: 246: contador_alarme += 1;
  4702  001536  2A35               	incf	_contador_alarme,f,c
  4703  001538                     l3182:
  4704                           
  4705                           ;main.c: 247: }
  4706                           ;main.c: 248: if(contador_alarme >= 15){
  4707  001538  0E0E               	movlw	14
  4708  00153A  6435               	cpfsgt	_contador_alarme,c
  4709  00153C  0012               	return	
  4710                           
  4711                           ;main.c: 249: PORTAbits.RA0 = 0;
  4712  00153E  9080               	bcf	3968,0,c	;volatile
  4713                           
  4714                           ;main.c: 250: despertou = 1;
  4715  001540  0E01               	movlw	1
  4716  001542  6E34               	movwf	_despertou,c
  4717  001544  0012               	return	
  4718  001546                     __end_of_despertar:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           indf0	equ	0xFEF
  4728                           postinc0	equ	0xFEE
  4729                           fsr0h	equ	0xFEA
  4730                           fsr0l	equ	0xFE9
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           fsr1l	equ	0xFE1
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741 ;; *************** function _pic_isr *****************
  4742 ;; Defined at:
  4743 ;;		line 256 in file "main.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4757 ;;      Params:         0       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4759 ;;      Temps:         17       0       0       0       0       0       0       0       0
  4760 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:       17 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		Interrupt level 1
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	intcodelo
  4771  000018                     __pintcodelo:
  4772                           	opt stack 0
  4773  000018                     _pic_isr:
  4774                           	opt stack 23
  4775                           
  4776                           ;incstack = 0
  4777  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4778  00001A  CFD8 F001          	movff	status,??_pic_isr
  4779  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
  4780  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
  4781  000026  CFFA F004          	movff	pclath,??_pic_isr+3
  4782  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
  4783  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
  4784  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
  4785  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
  4786  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
  4787  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
  4788  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
  4789  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
  4790  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
  4791  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
  4792  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
  4793  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
  4794  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
  4795                           
  4796                           ;main.c: 257: if(TMR0IF){
  4797  00005E  A4F2               	btfss	intcon,2,c	;volatile
  4798  000060  D00E               	goto	i1l1660
  4799                           
  4800                           ;main.c: 258: TMR0 = 28021;
  4801  000062  0E6D               	movlw	109
  4802  000064  6ED7               	movwf	4055,c	;volatile
  4803  000066  0E75               	movlw	117
  4804  000068  6ED6               	movwf	4054,c	;volatile
  4805                           
  4806                           ;main.c: 260: INTCONbits.TMR0IF = 0;
  4807  00006A  94F2               	bcf	intcon,2,c	;volatile
  4808                           
  4809                           ;main.c: 261: contador_interrupcao++;
  4810  00006C  2A37               	incf	_contador_interrupcao,f,c
  4811                           
  4812                           ;main.c: 262: if(contador_interrupcao == 20){
  4813  00006E  0E14               	movlw	20
  4814  000070  1837               	xorwf	_contador_interrupcao,w,c
  4815  000072  A4D8               	btfss	status,2,c
  4816  000074  D004               	goto	i1l1660
  4817                           
  4818                           ;main.c: 263: contador_um_segundo += 1;
  4819  000076  2A36               	incf	_contador_um_segundo,f,c
  4820                           
  4821                           ;main.c: 264: contador_interrupcao = 0;
  4822  000078  0E00               	movlw	0
  4823  00007A  6E37               	movwf	_contador_interrupcao,c
  4824                           
  4825                           ;main.c: 265: horaAtual.s+=1;
  4826  00007C  2A2E               	incf	_horaAtual+2,f,c
  4827  00007E                     i1l1660:
  4828                           
  4829                           ;main.c: 266: }
  4830                           ;main.c: 267: }
  4831                           ;main.c: 269: if(PIR1bits.RCIF == 1){
  4832  00007E  AA9E               	btfss	3998,5,c	;volatile
  4833  000080  D01B               	goto	i1l186
  4834  000082                     i1l182:
  4835  000082  AA9E               	btfss	3998,5,c	;volatile
  4836  000084  D7FE               	goto	i1l182
  4837                           
  4838                           ;main.c: 271: BUFFCOM[i]= RCREG;
  4839  000086  0E3A               	movlw	low _BUFFCOM
  4840  000088  2431               	addwf	_i,w,c
  4841  00008A  6ED9               	movwf	fsr2l,c
  4842  00008C  0E00               	movlw	high _BUFFCOM
  4843  00008E  2032               	addwfc	_i+1,w,c
  4844  000090  6EDA               	movwf	fsr2h,c
  4845  000092  CFAE FFDF          	movff	4014,indf2	;volatile
  4846                           
  4847                           ;main.c: 272: i++;
  4848  000096  4A31               	infsnz	_i,f,c
  4849  000098  2A32               	incf	_i+1,f,c
  4850                           
  4851                           ;main.c: 273: if(i>6){
  4852  00009A  BE32               	btfsc	_i+1,7,c
  4853  00009C  D00D               	goto	i1l186
  4854  00009E  5032               	movf	_i+1,w,c
  4855  0000A0  E104               	bnz	i1u63_20
  4856  0000A2  0E07               	movlw	7
  4857  0000A4  5C31               	subwf	_i,w,c
  4858  0000A6  A0D8               	btfss	status,0,c
  4859  0000A8  D007               	goto	i1l186
  4860  0000AA                     i1u63_20:
  4861                           
  4862                           ;main.c: 274: PIR1bits.RCIF = 0;
  4863  0000AA  9A9E               	bcf	3998,5,c	;volatile
  4864                           
  4865                           ;main.c: 275: i = 0;
  4866  0000AC  0E00               	movlw	0
  4867  0000AE  6E32               	movwf	_i+1,c
  4868  0000B0  0E00               	movlw	0
  4869  0000B2  6E31               	movwf	_i,c
  4870                           
  4871                           ;main.c: 276: estado = 1;
  4872  0000B4  0E01               	movlw	1
  4873  0000B6  6E38               	movwf	_estado,c
  4874  0000B8                     i1l186:
  4875  0000B8  C011  FFF5         	movff	??_pic_isr+16,tablat
  4876  0000BC  C010  FFF8         	movff	??_pic_isr+15,tblptru
  4877  0000C0  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
  4878  0000C4  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
  4879  0000C8  C00D  FFF4         	movff	??_pic_isr+12,prodh
  4880  0000CC  C00C  FFF3         	movff	??_pic_isr+11,prodl
  4881  0000D0  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
  4882  0000D4  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
  4883  0000D8  C009  FFE2         	movff	??_pic_isr+8,fsr1h
  4884  0000DC  C008  FFE1         	movff	??_pic_isr+7,fsr1l
  4885  0000E0  C007  FFEA         	movff	??_pic_isr+6,fsr0h
  4886  0000E4  C006  FFE9         	movff	??_pic_isr+5,fsr0l
  4887  0000E8  C005  FFFB         	movff	??_pic_isr+4,pclatu
  4888  0000EC  C004  FFFA         	movff	??_pic_isr+3,pclath
  4889  0000F0  C003  FFE0         	movff	??_pic_isr+2,bsr
  4890  0000F4  C002  FFE8         	movff	??_pic_isr+1,wreg
  4891  0000F8  C001  FFD8         	movff	??_pic_isr,status
  4892  0000FC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4893  0000FE  0010               	retfie	
  4894  000100                     __end_of_pic_isr:
  4895                           	opt stack 0
  4896                           pclatu	equ	0xFFB
  4897                           pclath	equ	0xFFA
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           intcon	equ	0xFF2
  4905                           indf0	equ	0xFEF
  4906                           postinc0	equ	0xFEE
  4907                           fsr0h	equ	0xFEA
  4908                           fsr0l	equ	0xFE9
  4909                           wreg	equ	0xFE8
  4910                           postdec1	equ	0xFE5
  4911                           fsr1h	equ	0xFE2
  4912                           fsr1l	equ	0xFE1
  4913                           bsr	equ	0xFE0
  4914                           indf2	equ	0xFDF
  4915                           postinc2	equ	0xFDE
  4916                           postdec2	equ	0xFDD
  4917                           fsr2h	equ	0xFDA
  4918                           fsr2l	equ	0xFD9
  4919                           status	equ	0xFD8
  4920                           pclatu	equ	0xFFB
  4921                           pclath	equ	0xFFA
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           intcon	equ	0xFF2
  4929                           indf0	equ	0xFEF
  4930                           postinc0	equ	0xFEE
  4931                           fsr0h	equ	0xFEA
  4932                           fsr0l	equ	0xFE9
  4933                           wreg	equ	0xFE8
  4934                           postdec1	equ	0xFE5
  4935                           fsr1h	equ	0xFE2
  4936                           fsr1l	equ	0xFE1
  4937                           bsr	equ	0xFE0
  4938                           indf2	equ	0xFDF
  4939                           postinc2	equ	0xFDE
  4940                           postdec2	equ	0xFDD
  4941                           fsr2h	equ	0xFDA
  4942                           fsr2l	equ	0xFD9
  4943                           status	equ	0xFD8
  4944                           
  4945                           	psect	rparam
  4946  0000                     pclatu	equ	0xFFB
  4947                           pclath	equ	0xFFA
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           indf0	equ	0xFEF
  4956                           postinc0	equ	0xFEE
  4957                           fsr0h	equ	0xFEA
  4958                           fsr0l	equ	0xFE9
  4959                           wreg	equ	0xFE8
  4960                           postdec1	equ	0xFE5
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           bsr	equ	0xFE0
  4964                           indf2	equ	0xFDF
  4965                           postinc2	equ	0xFDE
  4966                           postdec2	equ	0xFDD
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971                           	psect	temp
  4972  00004D                     btemp:
  4973                           	opt stack 0
  4974  00004D                     	ds	1
  4975  0000                     int$flags	set	btemp
  4976                           pclatu	equ	0xFFB
  4977                           pclath	equ	0xFFA
  4978                           tblptru	equ	0xFF8
  4979                           tblptrh	equ	0xFF7
  4980                           tblptrl	equ	0xFF6
  4981                           tablat	equ	0xFF5
  4982                           prodh	equ	0xFF4
  4983                           prodl	equ	0xFF3
  4984                           intcon	equ	0xFF2
  4985                           indf0	equ	0xFEF
  4986                           postinc0	equ	0xFEE
  4987                           fsr0h	equ	0xFEA
  4988                           fsr0l	equ	0xFE9
  4989                           wreg	equ	0xFE8
  4990                           postdec1	equ	0xFE5
  4991                           fsr1h	equ	0xFE2
  4992                           fsr1l	equ	0xFE1
  4993                           bsr	equ	0xFE0
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           fsr2h	equ	0xFDA
  4998                           fsr2l	equ	0xFD9
  4999                           status	equ	0xFD8


Data Sizes:
    Strings     158
    Constant    10
    Data        23
    BSS         202
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      76
    BANK0           160     20      92
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    memcpy@s1	PTR const void  size(3) Largest target is 32767
		 -> revisao(COMRAM[1]), versao(COMRAM[1]), ROM(CODE[32767]), BUFFCOM(COMRAM[7]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> revisao(COMRAM[1]), versao(COMRAM[1]), ROM(CODE[32767]), BUFFCOM(COMRAM[7]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> mensagemL2(BANK0[16]), mensagemL1(BANK0[16]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_10(CODE[8]), STR_9(CODE[10]), STR_8(CODE[24]), STR_7(CODE[10]), 
		 -> STR_6(CODE[22]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[11]), 
		 -> STR_2(CODE[19]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> mensagemL2(BANK0[16]), mensagemL1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    escreveMensagem@l2	PTR unsigned char  size(2) Largest target is 16
		 -> mensagemL2(BANK0[16]), 

    escreveMensagem@l1	PTR unsigned char  size(2) Largest target is 16
		 -> mensagemL1(BANK0[16]), 


Critical Paths under _main in COMRAM

    _telas->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _escreveMensagem->_SetDDRamAddr
    _putrsXLCD->_WriteDataXLCD
    _DelayFor18TCY->_Delay10TCYx
    _maquinaEstado->_trataComando
    _verificaCRCBUFFCOM->_crc16
    _trataComando->_calculaCRCBUFFRESP
    _calculaCRCBUFFRESP->_crc16

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _telas->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11727
                                             41 COMRAM     2     2      0
                                             18 BANK0      2     2      0
                          _despertar
                          _init_XLCD
                      _maquinaEstado
                              _telas
                         _trata_data
                         _trata_hora
                        _troca_telas
 ---------------------------------------------------------------------------------
 (1) _troca_telas                                          2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _trata_hora                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trata_data                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _telas                                                2     2      0    4975
                                             37 COMRAM     2     2      0
                    _escreveMensagem
                          _limpaTela
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             35    17     18    3273
                                             29 COMRAM     8     8      0
                                              0 BANK0     18     0     18
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _limpaTela                                            0     0      0     434
                          _init_XLCD
 ---------------------------------------------------------------------------------
 (3) _init_XLCD                                            0     0      0     434
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _OpenXLCD                                             1     1      0     310
                                             22 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (6) _Delay1KTCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Delay10KTCYx                                         2     2      0      31
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _escreveMensagem                                      4     0      4    1268
                                             22 COMRAM     4     0      4
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2     343
                                             19 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _SetDDRamAddr                                         4     4      0      93
                                             18 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (6) _Delay10TCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0    6188
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   5     5      0     945
                                             30 COMRAM     5     5      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      99
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         4     4      0    5082
                                             37 COMRAM     4     4      0
                 _calculaCRCBUFFRESP
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   7     7      0    2930
                                             30 COMRAM     7     7      0
                              _crc16
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     5      7    2022
                                             17 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             17 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _despertar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _despertar
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       _calculaCRCBUFFRESP
         _crc16
         _memcpy
       _memcpy
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _telas
     _escreveMensagem
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _limpaTela
       _init_XLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _OpenXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _Delay10KTCYx
           _DelayPORXLCD
             _Delay1KTCYx
           _SetDDRamAddr
             _DelayFor18TCY
               _Delay10TCYx
           _WriteCmdXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _WriteCmdXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _trata_data
   _trata_hora
   _troca_telas

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      5C       5       57.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120      20        0.0%
DATA                 0      0     120       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Nov 29 00:39:09 2018

                          _i 0031         _contador_interrupcao 0037                           bsr 000FE0  
                        l213 0FA8                          l225 0BA0                          l313 14A4  
                        l226 0BAE                          l227 0BBC                          l156 13BA  
                        l262 15A6                          l272 14D0                          l827 1288  
                        l837 13F8                          _dia 0049                          _ano 0043  
                        _mes 0048        __size_of_WriteCmdXLCD 003E                          prod 000FF3  
                        wreg 000FE8                  _troca_telas 137E                         l3000 0C48  
                       l3002 0C5C                         l3004 0C76                         l3012 0CA0  
                       l3014 0CAE                         l3102 0AB6                         l3008 0C84  
                       l3034 132C                         l3202 1356                         l3028 131C  
                       l3038 14C0                         l3070 094E                         l3062 08AC  
                       l3126 11FA                         l3048 14EA                         l3136 1212  
                       l3058 15BC                         l2612 15DA                         l3148 1230  
                       l3164 1556                         l3244 0E8C                         l3182 1538  
                       l3190 1334                         l2606 15EA                         l3094 0A5C  
                       l3086 0A0A                         l3078 09B8                         l3254 0F06  
                       l3192 133A                         l2704 15C4                         l3248 0EA2  
                       l2802 119E                         l3194 1340                         l3196 1346  
                       l2740 104E                         l3268 0F24                         l3198 134E  
                       l2734 1034                         l2910 0CBE                         l2808 11D8  
                       l2752 107E                         l2744 105E                         l2736 103E  
                       l2770 0F40                         l2842 14F2                         l2922 0CEA  
                       l2930 0D28                         l2914 0CC8                         l2780 0F62  
                       l2756 108E                         l2748 106E                         l2836 158C  
                       l2940 0D50                         l2916 0CD0                         l2870 125E  
                       l2942 0D54                         l2918 0CD6                         l2784 0FA2  
                       l2776 0F5A                         l2848 150E                         l2880 127E  
                       l2872 1262                         l2960 0DA4                         l2928 0CF8  
                       l2890 13D6                         l2962 0DAA                         l2954 0D86  
                       l2970 0E0C                         l2788 0FB2                         l2980 0B32  
                       l2868 1256                         l2892 13DA                         l2972 0E28  
                       l2992 0BFE                         l2984 0BCA                         l2896 13EE  
                       l2888 13CE                         l2968 0E04                         l2986 0BE6  
                       l2978 0AE4                         l2988 0BEE                         l2998 0C3A  
                       STR_1 0823                         STR_2 0850                         STR_3 0882  
                       STR_4 0873                         STR_5 0863                         STR_6 083A  
                       STR_7 088D                         STR_8 080B                         STR_9 0897  
                       u2010 13B2                         u2207 15CA                         u2217 15EC  
                       u1710 11C6                         u2187 138C                         u1717 11BC  
                       u2197 15DC                         u1585 12A8                         _PEIE 007F96  
                       _RCIE 007CED                         _RCIF 007CF5                         _RCIP 007CFD  
                       _TMR0 000FD6                         _TXIF 007CF4                         _main 0E36  
                       _tela 0041                         fsr0h 000FEA                         fsr1h 000FE2  
                       indf0 000FEF                         fsr2h 000FDA                         fsr0l 000FE9  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 004D       __size_of_WriteDataXLCD 003E                         prodh 000FF4  
                       prodl 000FF3                         start 0100       verificaCRCBUFFCOM@crc1 001F  
     verificaCRCBUFFCOM@crc2 0020                 ___param_bank 000000                  _Delay10TCYx 15E8  
   __size_of_escreveMensagem 0020                 _WriteCmdXLCD 1402                  _Delay1KTCYx 15D8  
              ?_SetDDRamAddr 0001                        ?_main 0001              _contador_alarme 0035  
                      STR_10 08A1           _verificaCRCBUFFCOM 12E4              __end_of___lwdiv 1292  
                      i1l182 0082              __end_of___lwmod 1402                        i1l186 00B8  
                      _RCREG 000FAE            escreveMensagem@l1 0017            escreveMensagem@l2 0019  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _PORTB 000F81  
                      _TRISA 000F92                        _TRISB 000F93                        _TXREG 000FAD  
      __size_of_Delay10KTCYx 0016                        _TXSTA 000FAC                        _crc16 0F2A  
        ?_verificaCRCBUFFCOM 0001              __end_of_dpowers 080B                        _telas 08AA  
            __end_of_pic_isr 0100                        main@b 00AF                        pclath 000FFA  
                      tablat 000FF5              __end_of_tx_data 14F0                        status 000FD8  
            __end_of_sprintf 0E36              __initialization 111A         ??_verificaCRCBUFFCOM 001F  
               __end_of_main 0F2A             __end_of_BusyXLCD 14B8                 _Delay10KTCYx 15C2  
      __size_of_DelayPORXLCD 0008               ??_SetDDRamAddr 0013             __end_of_OpenXLCD 10A0  
 __end_of_calculaCRCBUFFRESP 111A                       ??_main 002A                __activetblptr 000003  
              _WriteDataXLCD 1440                       ?_crc16 0012                       ?_telas 0001  
                     i1l1660 007E                       _TMR0IF 007F92                 _DelayPORXLCD 1610  
                     crc16@i 001A       __size_of_maquinaEstado 004C                    ??___lwdiv 0016  
                  ??___lwmod 001D                       _estado 0038                       _funcao 0074  
                     _memcpy 1188                       clear_0 1160                       clear_1 116C  
                     clear_2 1178                       _versao 004C               ?_WriteDataXLCD 0001  
               _calcula_temp 0033                 __pdataCOMRAM 0041            ??_escreveMensagem 001B  
                  ??_pic_isr 0001                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                    ??_tx_data 0012  
                  ??_sprintf 001E     verificaCRCBUFFCOM@CRC_OK 0021                   __accesstop 0060  
    __end_of__initialization 117E              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
      calculaCRCBUFFRESP@crc 0024               __pcstackCOMRAM 0001                 __pidataBANK0 1604  
              __end_of_crc16 0FFC                __end_of_telas 0AE2         trataComando@iterator 0028  
         __size_of_despertar 0028                 ?_troca_telas 0001                      ??_crc16 0016  
              _maquinaEstado 1332                      ??_telas 0026       __size_of_DelayFor18TCY 0008  
                 __pbssBANK0 0060                   __pbssBANK1 0100           __size_of_enviaByte 001E  
                  ?_BusyXLCD 0001              WriteCmdXLCD@cmd 0013         __end_of_SetDDRamAddr 12E4  
         __size_of_init_XLCD 001E                    ?_OpenXLCD 0001           __size_of_limpaTela 0006  
          WriteDataXLCD@data 0013                 ?_Delay10TCYx 0001              ??_WriteDataXLCD 0013  
               ?_Delay1KTCYx 0001                      ?_memcpy 0012                      _BUFFCOM 003A  
                    i1u63_20 00AA               ?_maquinaEstado 0001           __size_of_putrsXLCD 002E  
                 ??_BusyXLCD 0013                   ??_OpenXLCD 0017                      __Hparam 0000  
                    __Lparam 0000            __end_of_despertar 1546                _DelayFor18TCY 1618  
                    ___lwdiv 1240                      ___lwmod 13C0                 __psmallconst 0800  
          __end_of_enviaByte 15C2                      __pcinit 111A              __size_of_memcpy 0062  
            putrsXLCD@buffer 0014              Delay10TCYx@unit 0012                   _mensagemL1 0086  
                 _mensagemL2 0076                      __ramtop 0800                      __ptext0 0E36  
                    __ptext1 137E                      __ptext2 1546                      __ptext3 11EA  
                    __ptext4 08AA                      __ptext5 0CB4                      __ptext6 13C0  
                    __ptext7 1240                      __ptext8 1620                      __ptext9 1586  
          __end_of_init_XLCD 15A4                      _energia 0100                    _T0CONbits 000FD5  
                    _dpowers 0801                      _pic_isr 0018            __end_of_limpaTela 1626  
                    _revisao 004B                      _tx_data 14B8                      _sprintf 0CB4  
                 _telaAntiga 0072         end_of_initialization 117E           _calculaCRCBUFFRESP 10A0  
                    memcpy@d 001C                      memcpy@n 0017                      memcpy@s 0019  
                 _tela_atual 004A          ?_calculaCRCBUFFRESP 0001                enviaByte@BYTE 0012  
             ?_DelayFor18TCY 0001  __size_of_verificaCRCBUFFCOM 004E                      postdec1 000FE5  
                    postdec2 000FDD              _escreveMensagem 1566                      postinc0 000FEE  
                    postinc2 000FDE            __end_of_putrsXLCD 151E                    _PORTAbits 000F80  
                  _PORTDbits 000F83         ??_calculaCRCBUFFRESP 001F              ??_maquinaEstado 002A  
                  _TRISBbits 000F93                    _TRISCbits 000F94                   _trata_data 11EA  
                 _trata_hora 1546        __size_of_SetDDRamAddr 0052         __size_of_troca_telas 0042  
     calculaCRCBUFFRESP@crc1 0022       calculaCRCBUFFRESP@crc2 0023                ?_trataComando 0001  
      verificaCRCBUFFCOM@crc 0022                 _constante_ad 00B8         __size_of_Delay10TCYx 0010  
              __pidataCOMRAM 15F8               __end_of_memcpy 11EA                 _SetDDRamAddr 1292  
       __size_of_Delay1KTCYx 0010           SetDDRamAddr@DDaddr 0016          start_initialization 111A  
        _contador_um_segundo 0036               ??_trataComando 0026      __end_of_escreveMensagem 1586  
          __size_of_BusyXLCD 003A              ??_DelayFor18TCY 0013            __size_of_OpenXLCD 00A4  
              ?_WriteCmdXLCD 0001                  tx_data@cont 0012                  __pdataBANK0 00B1  
                   ??_memcpy 0019                  crc16@data_p 0012                  crc16@length 0014  
                __pbssCOMRAM 002C                __pcstackBANK0 009D                  ?_trata_data 0001  
                ?_trata_hora 0001              Delay1KTCYx@unit 0012                  sprintf@flag 001F  
                sprintf@prec 0020                    crc16@data 001B             ___lwdiv@dividend 0012  
             ??_WriteCmdXLCD 0013                    _desp_hora 0047                ?_Delay10KTCYx 0001  
                   ?___lwdiv 0012                     ?___lwmod 0019                    _despertar 151E  
                  _despertou 0034                  __pintcodelo 0018        __end_of_WriteDataXLCD 147E  
                __smallconst 0800                    _enviaByte 15A4                     ?_pic_isr 0001  
                  _horaAtual 002C                    _init_XLCD 1586               __size_of_crc16 00D2  
           ___lwdiv@quotient 0017                     ?_tx_data 0001                     ?_sprintf 009D  
                  _limpaTela 1620                     _BUFFRESP 0096               __size_of_telas 0238  
                   _ADResult 002F                     _LATBbits 000F8A             ?_escreveMensagem 0017  
              ?_DelayPORXLCD 0001                     _PIR1bits 000F9E              OpenXLCD@lcdtype 0017  
             ??_Delay10KTCYx 0012          __size_of_trata_data 0056          __size_of_trata_hora 0020  
                 ?_despertar 0001         __end_of_trataComando 0CB4                   ?_enviaByte 0001  
                  _putrsXLCD 14F0             Delay10KTCYx@unit 0013                   ?_init_XLCD 0001  
                 ?_limpaTela 0001                    copy_data0 112E                    copy_data1 114E  
                   _BusyXLCD 147E               ??_DelayPORXLCD 0013                     _OpenXLCD 0FFC  
               _semanaAlarme 0060   __end_of_verificaCRCBUFFCOM 1332                     __Hrparam 0000  
                   __Lrparam 0000             __size_of___lwdiv 0052             __size_of___lwmod 0042  
                 sprintf@val 0023                   ?_putrsXLCD 0014                     crc16@crc 001D  
__size_of_calculaCRCBUFFRESP 007A                ??_troca_telas 0012             __size_of_pic_isr 00E8  
            ___lwdiv@divisor 0014              ___lwdiv@counter 0016        __end_of_maquinaEstado 137E  
                   __ptext10 0FFC                     __ptext11 1402                     __ptext20 1618  
                   __ptext12 1610                     __ptext21 15E8                     __ptext13 15D8  
                   __ptext30 151E                     __ptext22 1332                     __ptext14 15C2  
                   __ptext23 12E4                     __ptext15 1566                     __ptext24 14B8  
                   __ptext16 14F0                     __ptext25 0AE2                     __ptext17 1440  
                   __ptext26 10A0                     __ptext18 147E                     __ptext27 1188  
                   __ptext19 1292                     __ptext28 0F2A                     __ptext29 15A4  
                   _desp_min 0046         __end_of_WriteCmdXLCD 1440             __size_of_tx_data 0038  
           __size_of_sprintf 0182                __size_of_main 00F4                ??_Delay10TCYx 0012  
                   int$flags 004D                  ??_despertar 0012                ??_Delay1KTCYx 0012  
                ??_enviaByte 0012                   _INTCONbits 000FF2                     memcpy@d1 0012  
                   memcpy@s1 0014                  ??_init_XLCD 0018                 ??_trata_data 0012  
                _semanaPrint 00B1                 ??_trata_hora 0012                  ??_limpaTela 0018  
       __end_of_Delay10KTCYx 15D8                     intlevel1 0000                    sprintf@ap 0021  
                  sprintf@sp 009D          __end_of_troca_telas 13C0             ___lwmod@dividend 0019  
                _serial_data 0039        __end_of_DelayFor18TCY 1620                 _primeiraExec 0045  
      __size_of_trataComando 01D2           __end_of_trata_data 1240           __end_of_trata_hora 1566  
        __end_of_Delay10TCYx 15F8                  _temperatura 006E                     sprintf@c 0025  
                   sprintf@f 009F         __end_of_DelayPORXLCD 1618                  ??_putrsXLCD 0016  
            ___lwmod@divisor 001B          __end_of_Delay1KTCYx 15E8              ___lwmod@counter 001D  
               _trataComando 0AE2  
